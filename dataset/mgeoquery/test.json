[
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"kansas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"kansas\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 kansas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('kansas')))))"
        },
        "question": {
            "en": "what is the biggest city in kansas",
            "de": "wie lautet die groesste stadt von kansas",
            "el": "ποια είναι η μεγαλύτερη πόλη στο kansas",
            "fa": "بزرگترین شهر کانزاس کدام است ؟",
            "id": "apa kota terbesar di kansas ?",
            "sv": "vilken är den största staden i kansas ?",
            "th": "เมือง ที่ ใหญ่ ที่สุด ของ รัฐ แคนซัส คือ เมือง ใด",
            "zh": "堪萨斯 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"louisiana\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"louisiana\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(louisiana)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 louisiana:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('louisiana')))))"
        },
        "question": {
            "en": "what is the biggest city in louisiana",
            "de": "welches ist die groesste stadt in louisiana",
            "el": "ποια είναι η μεγαλύτερη πόλη στη louisiana",
            "fa": "بزرگترین شهر لوئیزیانا کدام است ؟",
            "id": "apa kota terbesar di louisiana ?",
            "sv": "vilken är den största staden i louisiana ?",
            "th": "เมือง ใด เป็น เมือง ใหญ่ ที่สุด ใน รัฐ หลุยเซียนา",
            "zh": "路易斯安那 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"california\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"california\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 california:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('california')))))"
        },
        "question": {
            "en": "what is the largest city in california",
            "de": "wie lautet die groesste stadt in california",
            "el": "ποια είναι η μεγαλύτερη πόλη στην california",
            "fa": "بزرگترین شهر در کالیفرنیا کجاست ؟",
            "id": "apa kota terbesar di california ?",
            "sv": "vad är den största staden i kalifornien ?",
            "th": "เมือง ใด ใหญ่ ที่สุด ใน รัฐ แคลิฟอร์เนีย",
            "zh": "加 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"rhode island\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"rhode island\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid('rhode island')))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 rhode_island:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('rhode island')))))"
        },
        "question": {
            "en": "what is the largest city in rhode island",
            "de": "welches ist die groesste stadt in rhode island",
            "el": "ποια είναι η μεγαλύτερη πόλη στο rhode island",
            "fa": "بزرگترین شهر در رودایلند کجاست ؟",
            "id": "apa kota terbesar di rhode island ?",
            "sv": "vad är den största staden i rhode island ?",
            "th": "เมือง ใด เป็น เมือง ที่ ใหญ่ ที่สุด ใน รัฐ โรดไอแลนด์",
            "zh": "罗得岛 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"new mexico\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"new mexico\"",
            "prolog": "answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid('new mexico')))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 new_mexico:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('new mexico'))))))"
        },
        "question": {
            "en": "where is the most populated area of new mexico",
            "de": "wo liegt die am meisten bevoelkerte gegend von neu mexiko",
            "el": "που είναι η πολυπληθέστερη περιοχή του new mexico",
            "fa": "پرجمعیت ترین منطقه نیومکزیکو کجا است ؟",
            "id": "di mana daerah terpadat dari new mexico ?",
            "sv": "vart är det mest befolkade området i new mexico ?",
            "th": "พื้นที่ ใด เป็น พื้นที่ ที่ มี ประชากร มาก ที่สุด ใน รัฐ นิวเม็กซิโก",
            "zh": "哪里 是 新墨西哥 州 人口 最多 的 地区"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"california\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"california\"",
            "prolog": "answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(california)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 california:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('california'))))))"
        },
        "question": {
            "en": "which city in california has the largest population",
            "de": "welche stadt in california hat die groesste bevoelkerung",
            "el": "ποια πόλη στην california έχει το μεγαλύτερο πληθυσμό",
            "fa": "کدام شهر کالیفرنیا دارای بیشترین جمعیت است ؟",
            "id": "apa kota di california yang memiliki populasi terbesar ?",
            "sv": "vilken stad i kalifornien har den största befolkningen ?",
            "th": "เมือง ใด ใน รัฐ แคลิฟอร์เนีย มี ประชากร มาก ที่สุด",
            "zh": "加利福尼亚 州 的 哪个 城市 有 最多 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid(alaska))))",
            "lambda": "(size:<lo,i> alaska:s)",
            "funql": "answer(size(stateid('alaska')))"
        },
        "question": {
            "en": "how large is alaska",
            "de": "wie gross ist alaska",
            "el": "πόσο μεγάλη είναι η alaska",
            "fa": "وسعت الاسکا چقدر است ؟",
            "id": "seberapa besarkah alaska ?",
            "sv": "hur stort är alaska ?",
            "th": "รัฐ อลาสกา มี พื้นที่ เท่าไหร่",
            "zh": "阿拉斯加 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid(texas))))",
            "lambda": "(size:<lo,i> texas:s)",
            "funql": "answer(size(stateid('texas')))"
        },
        "question": {
            "en": "how large is texas",
            "de": "wie gross ist texas",
            "el": "πόσο μεγάλο είναι το texas",
            "fa": "وسعت تگزاس چقدر است ؟",
            "id": "seberapa besarkah texas ?",
            "sv": "hur stort är texas ?",
            "th": "รัฐ เท็กซัส มี พื้นที่ เท่าไหร่",
            "zh": "得克萨斯 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"florida\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(florida))))",
            "lambda": "(area:<lo,i> florida:s)",
            "funql": "answer(area_1(stateid('florida')))"
        },
        "question": {
            "en": "what is the area of florida",
            "de": "wie gross ist die flaeche von florida",
            "el": "ποιο είναι το εμβαδό της florida",
            "fa": "مساحت فلوریدا چقدر است ؟",
            "id": "berapa luas dari florida ?",
            "sv": "vad är floridas area ?",
            "th": "รัฐ ฟลอริดา มี พื้นที่ เท่าไหร่",
            "zh": "佛罗里达 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"ohio\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(ohio))))",
            "lambda": "(area:<lo,i> ohio:s)",
            "funql": "answer(area_1(stateid('ohio')))"
        },
        "question": {
            "en": "what is the area of ohio",
            "de": "welches ist die flaechenausdehnung von ohio",
            "el": "ποια είναι η επιφάνεια του ohio",
            "fa": "مساحت اوهایو چقدر است ؟",
            "id": "berapa luas dari ohio ?",
            "sv": "vad är ohios area ?",
            "th": "รัฐ โอไฮโฮ มี พื้นที่ เท่าไหร่",
            "zh": "俄亥俄 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(texas))))",
            "lambda": "(area:<lo,i> texas:s)",
            "funql": "answer(area_1(state(stateid('texas'))))"
        },
        "question": {
            "en": "what is the area of the texas state",
            "de": "welches ist die flaeche der staates texas",
            "el": "ποια είναι η επιφάνεια της πολιτείας του texas",
            "fa": "مساحت ایالت تگزاس چقدر است ؟",
            "id": "berapa luas dari negara bagian texas ?",
            "sv": "vad är arean av staten texas ?",
            "th": "รัฐ เท็กซัส มี พื้นที่ เท่าไหร่",
            "zh": "得克萨斯 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"wisconsin\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(wisconsin))))",
            "lambda": "(area:<lo,i> wisconsin:s)",
            "funql": "answer(area_1(stateid('wisconsin')))"
        },
        "question": {
            "en": "what is the area of wisconsin",
            "de": "welches ist die flaeche von wisconsin",
            "el": "ποια είναι η επιφάνεια του wisconsin",
            "fa": "مساحت ایالت ویسکونسین چقدر است ؟",
            "id": "berapa luas dari wisconsin ?",
            "sv": "vad är wisconsins area ?",
            "th": "รัฐ วิสคอนซิน มี พื้นที่ เท่าใด",
            "zh": "威斯康星 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"mississippi\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(mississippi))))",
            "lambda": "(population:<lo,i> mississippi:s)",
            "funql": "answer(population_1(stateid('mississippi')))"
        },
        "question": {
            "en": "how many people live in mississippi",
            "de": "wie viele leute leben in mississippi",
            "el": "πόσοι άνθρωποι ζουν στο mississippi",
            "fa": "چند نفر در میسیسیپی زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di mississippi ?",
            "sv": "hur många människor bor i mississippi ?",
            "th": "รัฐ มิสซิสซิปปี มี พลเมือง อาศัย อยู่ เท่าใด",
            "zh": "有 多少 人 住 在 密西西比 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"rhode island\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('rhode island'))))",
            "lambda": "(population:<lo,i> rhode_island:s)",
            "funql": "answer(population_1(stateid('rhode island')))"
        },
        "question": {
            "en": "how many people live in rhode island",
            "de": "wie viele leute leben in rhode island",
            "el": "πόσοι άνθρωποι κατοικούν στο rhode island",
            "fa": "چند نفر در رودآیلند زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di rhode island ?",
            "sv": "hur många människor bor i rhode island ?",
            "th": "รัฐ โรดไอแลนด์ มี ประชากร เท่าไหร่",
            "zh": "有 多少 人 住 在 罗得岛"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"utah\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(utah))))",
            "lambda": "(population:<lo,i> utah:s)",
            "funql": "answer(population_1(stateid('utah')))"
        },
        "question": {
            "en": "how many people reside in utah",
            "de": "wie viele menschen leben in utah",
            "el": "πόσοι άνθρωποι κατοικούν στη utah",
            "fa": "چند نفر در یوتاه اقامت دارند ؟",
            "id": "berapa banyak orang tinggal di utah ?",
            "sv": "hur många människor bor i utah ?",
            "th": "มี ผู้คน อาศัย อยู่ ใน รัฐ ยูทาห์ มากน้อย แค่ไหน",
            "zh": "有 多少 人 居住 在 犹他 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(texas))))",
            "lambda": "(population:<lo,i> texas:s)",
            "funql": "answer(population_1(stateid('texas')))"
        },
        "question": {
            "en": "how many residents live in texas",
            "de": "wie viele einwohner leben in texas",
            "el": "πόσοι κάτοικοι ζουν στο texas",
            "fa": "چند نفر در تگزاس سکونت دارند ؟",
            "id": "berapa banyak penduduk tinggal di texas ?",
            "sv": "hur många invånare bor i texas ?",
            "th": "รัฐ เท็กซัส มี ประชากร กี่ คน",
            "zh": "有 多少 居民 居住 在 得克萨斯"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(texas))))",
            "lambda": "(population:<lo,i> texas:s)",
            "funql": "answer(population_1(stateid('texas')))"
        },
        "question": {
            "en": "how much population does texas have",
            "de": "wie viele leute wohnen in texas",
            "el": "πόσο πληθυσμό έχει το texas",
            "fa": "تگزاس چقدر جمعیت دارد ؟",
            "id": "berapa banyak penduduk yang dimiliki texas ?",
            "sv": "hur stor befolkning har texas ?",
            "th": "รัฐ เท็กซัส มี ประชากร เท่าไหร่",
            "zh": "得克萨斯 州 有 多少 人口 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"mississippi\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(mississippi))))",
            "lambda": "(population:<lo,i> mississippi:s)",
            "funql": "answer(population_1(stateid('mississippi')))"
        },
        "question": {
            "en": "what is the population of mississippi",
            "de": "welches ist die einwohnerzahl von mississippi",
            "el": "ποιος είναι ο πληθυσμός του mississippi",
            "fa": "جمعیت میسیسیپی چقدر است ؟",
            "id": "berapa populasi mississippi ?",
            "sv": "vad är folkmängden i mississippi ?",
            "th": "รัฐ มิสซิสซิปปี มี ประชากร เท่าไหร่",
            "zh": "密西西比 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(alaska))))",
            "lambda": "(population:<lo,i> alaska:s)",
            "funql": "answer(population_1(stateid('alaska')))"
        },
        "question": {
            "en": "what is the population of alaska",
            "de": "welches ist die bevoelkerungszahl von alaska",
            "el": "ποιος είναι ο πληθυσμός της alaska",
            "fa": "جمعیت آلاسکا چقدر است ؟",
            "id": "berapa populasi alaska ?",
            "sv": "vad är folkmängden i alaska ?",
            "th": "ประชากร ของ รัฐ อลาสกา มี เท่าไหร่",
            "zh": "阿拉斯加 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(hawaii))))",
            "lambda": "(population:<lo,i> hawaii:s)",
            "funql": "answer(population_1(stateid('hawaii')))"
        },
        "question": {
            "en": "what is the population of hawaii",
            "de": "wieviel menschen laeben in hawaii",
            "el": "ποιος είναι ο πληθυσμός της hawaii",
            "fa": "جمعیت هاوایی چقدر است ؟",
            "id": "berapa populasi hawaii ?",
            "sv": "vad är folkmängden i hawaii ?",
            "th": "รัฐ ฮาวาย มี ประชากร เท่าไหร่",
            "zh": "夏威夷 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"maryland\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(maryland))))",
            "lambda": "(population:<lo,i> maryland:s)",
            "funql": "answer(population_1(stateid('maryland')))"
        },
        "question": {
            "en": "what is the population of maryland",
            "de": "wie gross ist die bevoelkerung von maryland",
            "el": "ποιος είναι ο πληθυσμός του maryland",
            "fa": "جمعیت مریلند چقدر است ؟",
            "id": "berapa populasi maryland ?",
            "sv": "vad är folkmängden i maryland ?",
            "th": "รัฐ แมรีแลนด์ มี ประชากร กี่ คน",
            "zh": "马里兰 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"new mexico\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('new mexico'))))",
            "lambda": "(population:<lo,i> new_mexico:s)",
            "funql": "answer(population_1(stateid('new mexico')))"
        },
        "question": {
            "en": "what is the population of new mexico",
            "de": "vie viele leute wohnen in new mexico",
            "el": "ποιος είναι ο πληθυσμός του new mexico",
            "fa": "جمعیت نیومکزیکو چقدر است ؟",
            "id": "berapa populasi new mexico ?",
            "sv": "vad är folkmängden i new mexico ?",
            "th": "รัฐ นิวเม็กซิโก มี ประชากร เท่าไหร่",
            "zh": "新墨西哥 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"utah\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(utah))))",
            "lambda": "(population:<lo,i> utah:s)",
            "funql": "answer(population_1(stateid('utah')))"
        },
        "question": {
            "en": "what is the population of utah",
            "de": "wie viele einwohner hat utah",
            "el": "ποιος είναι ο πληθυσμός της utah",
            "fa": "جمعیت یوتاه چقدر است ؟",
            "id": "berapa populasi utah ?",
            "sv": "vad är folkmängden i utah ?",
            "th": "รัฐ ยูทาห์ มี ประชากร กี่ คน",
            "zh": "犹他 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"washington\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(washington))))",
            "lambda": "(population:<lo,i> washington:s)",
            "funql": "answer(population_1(stateid('washington')))"
        },
        "question": {
            "en": "what is the population of washington",
            "de": "wie viele leute wohnen in washington",
            "el": "ποιος είναι πληθυσμός της washington",
            "fa": "جمعیت واشنگتن چقدر است ؟",
            "id": "berapa populasi washington ?",
            "sv": "vad är folkmängden i washington ?",
            "th": "รัฐ วอชิงตัน มี ประชากร เท่าไหร่",
            "zh": "华盛顿 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,smallest(B,(population(A,B),state(A))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(smallest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what is the least populous state",
            "de": "welches ist der staat mit der niedrigsten bevoelkerungszahl",
            "el": "ποια είναι η ολιγοπληθέστερη πολιτεία",
            "fa": "کم جمعیت ترین ایالت کدامست ؟",
            "id": "apa negara bagian yang paling jarang penduduknya ?",
            "sv": "vilken är den minst befolkade staten ?",
            "th": "รัฐ ใด มี ประชากร น้อย ที่สุด",
            "zh": "人口 最少 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(city(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "tell me what cities are in texas",
            "de": "nenne mir die staedte in texas",
            "el": "πες μου ποιες πόλεις είναι στο texas",
            "fa": "به من بگو چه شهر هایی در تگزاس هستند ؟",
            "id": "berikan kota-kota yang ada di texas .",
            "sv": "berätta vilka städer som ligger i texas .",
            "th": "จง บอก ชื่อ เมือง ที่ อยู่ ใน รัฐ เท็กซัส",
            "zh": "告诉 我 在 得克萨斯 州 有 哪些 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"missouri\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,riverid(missouri)),river(B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 missouri_river:r)))",
            "funql": "answer(state(next_to_2(river(riverid('missouri')))))"
        },
        "question": {
            "en": "which states border the missouri river",
            "de": "welche staaten grenzen an den fluss missouri",
            "el": "ποιες πολιτείες συνορεύουν με τον ποταμό missouri",
            "fa": "کدام ایالت ها هم مرز رودخانه میسوری هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan sungai missouri ?",
            "sv": "vilka stater gränsar till missourifloden ?",
            "th": "รัฐ ใด อยู่ ติด กับ แม่น้ำ มิสซูรี บ้าง",
            "zh": "哪些 州 与 密苏里 河 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"delaware\"",
            "prolog": "answer(A,(state(A),const(B,riverid(delaware)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> delaware_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('delaware')))))"
        },
        "question": {
            "en": "what states does the delaware river run through",
            "de": "durch welche staaten fliesst der delaware",
            "el": "ποιες πολιτείες διασχίζει ο ποταμός delaware",
            "fa": "رود دلاور از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai delaware ?",
            "sv": "vilka stater rinner delawarefloden genom ?",
            "th": "แม่น้ำ เดลาแวร์ ไหล ผ่าน รัฐ ใด บ้าง",
            "zh": "特拉华 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('mississippi')))))"
        },
        "question": {
            "en": "what states does the mississippi river run through",
            "de": "durch welche staaten verlaeuft der mississippi",
            "el": "ποιες πολιτείες διασχίζει ο ποταμός mississippi",
            "fa": "رود میسیسیپی از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai mississippi ?",
            "sv": "vilka stater rinner mississippifloden genom ?",
            "th": "แม่น้ำ มิสซิสซิปปี ไหล ผ่าน รัฐ อะไร บ้าง",
            "zh": "密西西比 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"missouri\"",
            "prolog": "answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> missouri_river:r $0)))",
            "funql": "answer(state(traverse_1(riverid('missouri'))))"
        },
        "question": {
            "en": "what states does the missouri run through",
            "de": "durch welche staaten fliesst der missouri fluss",
            "el": "ποιες πολιτείες διασχίζει ο missouri",
            "fa": "رود میسوری از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui missouri ?",
            "sv": "vilka stater rinner missouri genom ?",
            "th": "รัฐ ใด บ้าง ที่ แม่น้ำ มิสซูรี ไหล ผ่าน",
            "zh": "密苏里 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"ohio\"",
            "prolog": "answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> ohio_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('ohio')))))"
        },
        "question": {
            "en": "what states does the ohio river run through",
            "de": "durch welche staaten fliesst der ohio fluss",
            "el": "ποιες πολιτείες διασχίζει ο ποταμός ohio",
            "fa": "رود اوهایو از کدام ایالت ها عبور میکند ؟",
            "id": "apa negara-negara bagian yang dilalui sungai ohio ?",
            "sv": "vilka stater rinner ohiofloden genom ?",
            "th": "แม่น้ำ โอไฮโอ ไหล ผ่าน รัฐ ใด บ้าง",
            "zh": "俄亥俄 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"chattahoochee\"",
            "prolog": "answer(A,(loc(B,A),const(B,riverid(chattahoochee)),river(B)))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> chattahoochee_river:r $0))",
            "funql": "answer(loc_1(river(riverid('chattahoochee'))))"
        },
        "question": {
            "en": "where is the chattahoochee river",
            "de": "wo liegt der chattahoochee fluss",
            "el": "που είναι ο chattahoochee ποταμός",
            "fa": "رودخانه چاتاهوچی در کجا واقع شده است ؟",
            "id": "di mana sungai chattahoochee ?",
            "sv": "vart ligger chattahoochee floden ?",
            "th": "แม่น้ำ แช็ตตาฮูชี อยู่ ตรงไหน",
            "zh": "查塔胡奇 河 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"chattahoochee\"",
            "prolog": "answer(A,(state(A),const(B,riverid(chattahoochee)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> chattahoochee_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('chattahoochee')))))"
        },
        "question": {
            "en": "which states does the chattahoochee river run through",
            "de": "durch welchen staat querrt der chattahoochee fluss",
            "el": "ποιες πολιτείες διασχίζει ο ποταμός chattahoochee",
            "fa": "رودخخانه چاتاهوچی از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai chattahoochee ?",
            "sv": "vilka stater rinner floden chattahoochee genom ?",
            "th": "รัฐ ใด บ้าง ที่ แม่น้ำ แชตตาฮูชี ไหล ผ่าน",
            "zh": "查塔胡奇 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0)))",
            "funql": "answer(state(traverse_1(riverid('mississippi'))))"
        },
        "question": {
            "en": "which states does the mississippi run through",
            "de": "durch welchen staat fliesst der mississippi",
            "el": "ποια πολιτεία διασχίζει ο mississippi",
            "fa": "رود میسیسیپی از کدام ایالت ها عبور میکند ؟",
            "id": "apa negara-negara bagian yang dilalui mississippi ?",
            "sv": "vilka stater rinner mississippi genom ?",
            "th": "รัฐ ใด บ้าง มี แม่น้ำ มิสซิสซิปปี ไหล ผ่าน",
            "zh": "密西西比 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(population(A,B),state(A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what is the most populous state",
            "de": "welcher staat hat die groesse bevoelkerung",
            "el": "ποια είναι η πολυπληθέστερη πολιτεία",
            "fa": "پرجمعیت ترین ایالت چه نام دارد ؟",
            "id": "apa negara bagian terpadat ?",
            "sv": "vilken är den folkrikaste staten ?",
            "th": "รัฐ ใด มี ประชากร อาศัย อยู่ ใน เมือง มาก ที่สุด",
            "zh": "人口 最多 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what state is the largest in population",
            "de": "welcher staat hat die groesste bevoelkerung in den staedten",
            "el": "ποια πολιτεία είναι μεγαλύτερη σε πληθυσμό",
            "fa": "بزرگترین ایالت از نظر جمعیت کدام است ؟",
            "id": "apa negara bagian terbesar menurut populasi ?",
            "sv": "vilken stat är den största enligt befolkning ?",
            "th": "รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 州 的 人口 最多"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "which state has the biggest population",
            "de": "welcher staat hat die groesste bevoelkerung",
            "el": "ποια πολιτεία έχει τον μεγαλύτερο πληθυσμό",
            "fa": "کدام ایالت بیشترین جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki populasi terbesar ?",
            "sv": "vilken stat har den största befolkningen ?",
            "th": "รัฐ ใด มี จำนวน ประชากร มาก ที่สุด",
            "zh": "哪个 州 有 最多 的 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "which state has the greatest population",
            "de": "welcher staat hat die meisten einwohner",
            "el": "ποια πολιτεία έχει το μεγαλύτερο πληθυσμό",
            "fa": "کدام ایالت بیشترین جمعیت را داراست ؟",
            "id": "apa negara bagian yang memiliki populasi terbesar ?",
            "sv": "vilken stat har den största befolkningen ?",
            "th": "รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 州 有 最多 的 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "which state has the most population",
            "de": "welcher staat hat die hoechste bevoelkerung",
            "el": "ποια πολιτεία έχει τον περισσότερο πληθυσμό",
            "fa": "کدام ایالت بیشترین جمعیت را داراست ؟",
            "id": "apa negara bagian yang memiliki populasi tertinggi ?",
            "sv": "vilken stat har störst befolkning ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ มี ประชากร มาก ที่สุด",
            "zh": "哪个 州 有 最多 的 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(len:<r,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0))))",
            "funql": "answer(len(longest(river(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "how long is the longest river in the usa",
            "de": "wie lange ist der laengste fluss der usa",
            "el": "πόσο μεγάλος είναι ο μακρύτερος ποταμός στις usa",
            "fa": "طول بلندترین رودخانه آمریکا چقدر است ؟",
            "id": "seberapa panjangkah sungai terpanjang di amerika serikat ?",
            "sv": "hur lång är den längsta floden i usa ?",
            "th": "แม่น้ำ ที่ ยาว ที่สุด ใน สหรัฐอเมริกา มี ความ ยาว เท่าไหร่",
            "zh": "在 美国 最长 的 河流 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"washington\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"washington\"",
            "prolog": "answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(washington)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 washington:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(longest(river(loc_2(state(stateid('washington'))))))"
        },
        "question": {
            "en": "what is the largest river in washington state",
            "de": "nenne mir die laenge des laengsten flusses in washington state",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στην πολιτεία washington",
            "fa": "بزرگترین رودخانه ایالت واشنگتن کجاست ؟",
            "id": "apa sungai terbesar di negara bagian washington ?",
            "sv": "vilken är den största floden i staten washington ?",
            "th": "แม่น้ำ สาย ใด เป็น แม่น้ำ สาย ที่ ใหญ่ ที่สุด ใน รัฐ วอชิงตัน",
            "zh": "华盛顿 州 最大 的 河流 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"florida\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"florida\"",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(florida)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 florida:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('florida')))))"
        },
        "question": {
            "en": "what is the longest river in florida",
            "de": "welches ist der laengste fluss in florida",
            "el": "ποιο είναι το μακρύτερο ποτάμι στη florida",
            "fa": "طولانی ترین رودخانه فلوریدا کدامست ؟",
            "id": "apa sungai terpanjang di florida ?",
            "sv": "vad är den längsta floden i florida ?",
            "th": "แม่น้ำ สาย ใด ยาว ที่สุด ใน รัฐ ฟลอริดา",
            "zh": "佛罗里达 州 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"california\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(california))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 california:s))))",
            "funql": "answer(count(river(loc_2(stateid('california')))))"
        },
        "question": {
            "en": "give me the number of rivers in california",
            "de": "nenne mir die anzahl der fluesse in california",
            "el": "δώσε μου τον αριθμό των ποταμιών στην california",
            "fa": "تعداد رودخانه های کالیفرنیا را به من بده .",
            "id": "berikan jumlah sungai di california .",
            "sv": "ge mig antalet floder i kalifornien .",
            "th": "จง บอก จำนวน แม่น้ำ ใน รัฐ แคลิฟอร์เนีย",
            "zh": "告诉 我 在 加利福尼亚 州 有 多少 条 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"iowa\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(iowa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 iowa:s))))",
            "funql": "answer(count(river(loc_2(stateid('iowa')))))"
        },
        "question": {
            "en": "how many rivers are in iowa",
            "de": "wie viele fluesse gibt es in iowa",
            "el": "πόσα ποτάμια υπάρχουν στην iowa",
            "fa": "چند رودخانه در آیووا وجود دارد ؟",
            "id": "berapa banyak sungai di iowa ?",
            "sv": "hur många floder har iowa ?",
            "th": "รัฐ ไอโอวา มี แม่น้ำ กี่ สาย",
            "zh": "在 艾奥瓦 州 有 多少 条 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"colorado\"",
            "prolog": "answer(A,count(B,(river(B),const(C,stateid(colorado)),loc(B,C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 colorado:s))))",
            "funql": "answer(count(river(loc_2(stateid('colorado')))))"
        },
        "question": {
            "en": "how many rivers does colorado have",
            "de": "wie viele fluesse gibt es in colorado",
            "el": "πόσα ποτάμια έχει το colorado",
            "fa": "کلرادو چند رودخانه دارد ؟",
            "id": "berapa banyak sungai yang dimiliki colorado ?",
            "sv": "hur många floder har colorado ?",
            "th": "รัฐ โคโลราโด มี แม่น้ำ กี่ สาย",
            "zh": "科罗拉多 州 有 多少 条 河流 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"utah\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(utah))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 utah:s)))",
            "funql": "answer(state(next_to_2(stateid('utah'))))"
        },
        "question": {
            "en": "give me the states that border utah",
            "de": "nenne mir die staaten welche an utah grenzen",
            "el": "δώσε μου τις πολιτείες που συνορεύουν με τη utah",
            "fa": "ایالات همجوار یوتاه را به من بده .",
            "id": "berikan negara-negara bagian yang berbatasan dengan utah .",
            "sv": "ge mig de stater som gränsar till utah .",
            "th": "จง บอก ชื่อ รัฐ ที่ อยู่ ติด กับ รัฐ ยูทาห์",
            "zh": "告诉我 与 犹他 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"new york\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid('new york'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 new_york:s)))",
            "funql": "answer(state(next_to_2(stateid('new york'))))"
        },
        "question": {
            "en": "what state borders new york",
            "de": "welche staaten grenzen an new york",
            "el": "ποια πολιτεία συνορεύει με τη new york",
            "fa": "چه ایالتهایی با نیویورک هم مرز هستند ؟",
            "id": "apa negara bagian yang berbatasan dengan new york ?",
            "sv": "vilken stat gränsar till new york ?",
            "th": "นิวยอร์ค อยู่ ติด กับ รัฐ ใด บ้าง",
            "zh": "哪些 州 与 纽约 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"arizona\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 arizona:s)))",
            "funql": "answer(state(next_to_2(stateid('arizona'))))"
        },
        "question": {
            "en": "what states are next to arizona",
            "de": "welche staaten sind neben arizona",
            "el": "ποιες πολιτείες είναι δίπλα στην arizona",
            "fa": "کدام ایالات همجوار آریزونا هستند ؟",
            "id": "apa negara-negara bagian di sebelah arizona ?",
            "sv": "vilka stater ligger bredvid arizona ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ แอริโซนา",
            "zh": "什么 州 与 亚利桑那 州 相邻"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"florida\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(florida))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 florida:s)))",
            "funql": "answer(state(next_to_2(stateid('florida'))))"
        },
        "question": {
            "en": "what states border florida",
            "de": "welche staaten grenzen an florida",
            "el": "ποιες πολιτείες συνορεύουν με τη florida",
            "fa": "کدام ایالات هم مرز فلوریدا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan florida ?",
            "sv": "vilka stater gränsar till florida ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ฟลอริดา",
            "zh": "什么 州 与 佛罗里达 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"indiana\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(indiana))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 indiana:s)))",
            "funql": "answer(state(next_to_2(stateid('indiana'))))"
        },
        "question": {
            "en": "what states border indiana",
            "de": "welche staaten grenzen an indiana",
            "el": "ποιες πολιτείες συνορεύουν με την indiana",
            "fa": "کدام ایالت ها همجوار ایندیانا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan indiana ?",
            "sv": "vilka stater gränsar till indiana ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ อินเดียนา",
            "zh": "什么 州 与 印第安纳 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"michigan\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 michigan:s)))",
            "funql": "answer(state(next_to_2(stateid('michigan'))))"
        },
        "question": {
            "en": "what states border michigan",
            "de": "welche staaten grenzen an michigan",
            "el": "ποιες πολιτείες συνορεύουν με το michigan",
            "fa": "کدام ایالات هم مرز میشیگان هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan michigan ?",
            "sv": "vilka stater gränsar till michigan ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ มิชิแกน",
            "zh": "什么 州 与 密歇根 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"montana\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(montana))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 montana:s)))",
            "funql": "answer(state(next_to_2(stateid('montana'))))"
        },
        "question": {
            "en": "what states border montana",
            "de": "wie viele staaten grenzen an montana",
            "el": "ποιες πολιτείες συνορεύουν με τη montana",
            "fa": "کدام ایالات هم مرز مونتانا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan montana ?",
            "sv": "vilka stater gränsar till montana ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ มอนตานา",
            "zh": "什么 州 与 蒙大拿 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"new jersey\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid('new jersey'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 new_jersey:s)))",
            "funql": "answer(state(next_to_2(stateid('new jersey'))))"
        },
        "question": {
            "en": "what states border new jersey",
            "de": "welche staaten grenzen an new jersey",
            "el": "ποιες πολιτείες συνορεύουν με το new jersey",
            "fa": "کدام ایالات همجوار نیوجرسی هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan new jersey ?",
            "sv": "vilka stater gränsar till new jersey ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ นิวเจอร์ซี",
            "zh": "什么 州 与 新泽西 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"kentucky\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 kentucky:s)))",
            "funql": "answer(state(next_to_2(stateid('kentucky'))))"
        },
        "question": {
            "en": "what states surround kentucky",
            "de": "welche staaten grenzen an kentucky",
            "el": "ποιες πολιτείες περιβάλλουν το kentucky",
            "fa": "کدام ایالات همسایه کنتاکی اند ؟",
            "id": "negara-negara bagian apa yang mengelilingi kentucky ?",
            "sv": "vilka stater ligger kring kentucky ?",
            "th": "มี รัฐ ใด บ้าง ที่ ล้อมรอบ รัฐ เคนตักกี้",
            "zh": "哪些 州 环绕 着 肯塔基 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 hawaii:s)))",
            "funql": "answer(state(next_to_2(stateid('hawaii'))))"
        },
        "question": {
            "en": "which state borders hawaii",
            "de": "welche staaten grenzen an hawaii",
            "el": "ποια πολιτεία συνορεύει με τη hawaii",
            "fa": "کدام ایالت همجوار هاوایی است ؟",
            "id": "apa negara bagian yang berbatasan dengan hawaii ?",
            "sv": "vilken stat gränsar till hawaii ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ฮาวาย",
            "zh": "哪个 州 与 夏威夷 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"illinois\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(illinois))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 illinois:s)))",
            "funql": "answer(state(next_to_2(stateid('illinois'))))"
        },
        "question": {
            "en": "which states border illinois",
            "de": "welche staaten grenzen an illinois",
            "el": "ποιες πολιτείες συνορεύουν με το illinois",
            "fa": "کدام ایالت ها همجوار ایلینوی هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan illinois ?",
            "sv": "vilka stater gränsar illinois ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อิลลินอยส์ บ้าง",
            "zh": "哪些 州 与 伊利诺伊 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"kentucky\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 kentucky:s)))",
            "funql": "answer(state(next_to_2(stateid('kentucky'))))"
        },
        "question": {
            "en": "which states border kentucky",
            "de": "welche staaten grenzen an kentucky",
            "el": "ποιες πολιτείες συνορεύουν με το kentucky",
            "fa": "کدام ایالت ها هم مرز کنتاکی هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan kentucky ?",
            "sv": "vilka stater gränsar kentucky ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ เคนตักกี",
            "zh": "哪些 州 与 肯塔基 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"new york\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid('new york'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 new_york:s)))",
            "funql": "answer(river(loc_2(stateid('new york'))))"
        },
        "question": {
            "en": "rivers in new york",
            "de": "wie viele fluesse verlaufen durch new york",
            "el": "ποτάμια στη new york",
            "fa": "رودخانه های نیویورک ؟",
            "id": "sungai-sungai di new york ?",
            "sv": "floder i new york ?",
            "th": "แม่น้ำ สาย ใด ไหล ผ่าน รัฐ นิวยอร์ค",
            "zh": "列出 所有 纽约 州 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(river(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "what are all the rivers in texas",
            "de": "welche fluesse gibt es in texas",
            "el": "ποιοι είναι όλα τα ποτάμια στο texas",
            "fa": "رودخانه های تگزاس کدامند ؟",
            "id": "apa semua sungai di texas ?",
            "sv": "vilka är alla floderna i texas ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ เท็กซัส",
            "zh": "在 德克萨斯 州 所有 的 河流 是 哪些"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"alaska\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 alaska:s)))",
            "funql": "answer(river(loc_2(stateid('alaska'))))"
        },
        "question": {
            "en": "what are the rivers in alaska",
            "de": "welches sind die flüsse in alaska",
            "el": "ποια είναι τα ποτάμια στην alaska",
            "fa": "رودخانه های آلاسکا کدامند ؟",
            "id": "apa sungai-sungai di alaska ?",
            "sv": "vilka är floderna i alaska ?",
            "th": "รัฐ อลาสกา มี แม่น้ำ กี่ สาย",
            "zh": "阿拉斯加 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(river(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "what rivers are in texas",
            "de": "welche fluesse verlaufen durch texas",
            "el": "πόσα ποτάμια υπάρχουν στο texas",
            "fa": "چه رودخانه های در تگزاس هستند ؟",
            "id": "apa saja sungai-sungai di texas ?",
            "sv": "vilka floder är i texas ?",
            "th": "รัฐ เท็กซัส มี แม่น้ำ อะไร บ้าง",
            "zh": "在 得克萨斯 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(river(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "what rivers are there in texas",
            "de": "welche fluesse fluesse gibt es in texas",
            "el": "ποια ποτάμια υπάρχουν στο texas",
            "fa": "چه رودخانه هایی در تگزاس هست ؟",
            "id": "apa saja sungai-sungai yang ada di texas ?",
            "sv": "vilka floder finns i texas ?",
            "th": "รัฐ เท็กซัส มี แม่น้ำ อะไร บ้าง",
            "zh": "在 德克萨斯 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"new york\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid('new york'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 new_york:s)))",
            "funql": "answer(river(traverse_2(stateid('new york'))))"
        },
        "question": {
            "en": "what rivers run through new york",
            "de": "flüsse in new york",
            "el": "ποια ποτάμια διασχίζουν τη new york",
            "fa": "کدام رودخانه ها از نیویورک میگذرند ؟",
            "id": "apa saja sungai-sungai yang melalui new york ?",
            "sv": "vilka floder löper genom new york ?",
            "th": "จง บอก รายชื่อ แม่น้ำ ใน รัฐ นิวยอร์ค มา",
            "zh": "什么 河流 贯穿 纽约 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"san antonio\"",
            "prolog": "answer(A,(const(B,cityid('san antonio',_)),loc(B,A),state(A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> san_antonio_tx:c $0)))",
            "funql": "answer(state(loc_1(cityid('san antonio', _))))"
        },
        "question": {
            "en": "san antonio is in what state",
            "de": "in welchem staat liegt san antonio",
            "el": "το san antonio είναι σε ποια πολιτεία",
            "fa": "سن آنتونیو در کدام ایالت واقع است ؟",
            "id": "san antonio berada di negara bagian apa ?",
            "sv": "san antonio ligger i vilken stat ?",
            "th": "เมือง ซานอันโตนิโอ อยู่ ใน รัฐ ใด",
            "zh": "圣安东尼奥 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(state(A),const(B,cityid(austin,_)),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> austin_tx:c $0)))",
            "funql": "answer(state(loc_1(cityid('austin', _))))"
        },
        "question": {
            "en": "what state is austin in",
            "de": "welcher staat liegt in austin",
            "el": "σε ποια πολιτεία είναι το austin",
            "fa": "آستین در کدام ایالت است ؟",
            "id": "di negara bagian manakah austin berada ?",
            "sv": "vilken stat ligger austin i ?",
            "th": "รัฐ ใด มี เมือง ชื่อ ออสติน อยู่",
            "zh": "哪个 州 拥有 奥斯汀"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"miami\"",
            "prolog": "answer(A,(state(A),const(B,cityid(miami,_)),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> miami_fl:c $0)))",
            "funql": "answer(state(loc_1(cityid('miami', _))))"
        },
        "question": {
            "en": "what state is miami in",
            "de": "in welchem staat liegt miami",
            "el": "σε ποια πολιτεία είναι το miami",
            "fa": "میامی در کدام ایالت است ؟",
            "id": "di negara bagian manakah miami berada ?",
            "sv": "vilken stat ligger miami i ?",
            "th": "เมือง ไมอามี อยู่ ใน รัฐ ใด",
            "zh": "迈阿密 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"dallas\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid(dallas,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 dallas:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('dallas', _)))))"
        },
        "question": {
            "en": "what states have cities named dallas",
            "de": "welche staaten haben staedte mit dem namen dallas",
            "el": "ποιες πολιτείες έχουν πόλεις που ονομάζονται dallas",
            "fa": "کدام ایالت ها شهری به نام دالاس دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama dallas ?",
            "sv": "vilka stater har städer som heter dallas ?",
            "th": "รัฐ ใด มี เมือง ชื่อ ว่า ดัลลัส",
            "zh": "哪些 州 有 名为 达拉斯 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"plano\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid(plano,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 plano:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('plano', _)))))"
        },
        "question": {
            "en": "what states have cities named plano",
            "de": "welche staaten haben staedte mit dem namen plano",
            "el": "ποιες πολιτείες έχουν πόλεις που ονομάζονται plano",
            "fa": "کدام ایالت ها شهری به نام پلانو دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama plano ?",
            "sv": "vilka stater har städer som heter plano ?",
            "th": "รัฐ ใด มี เมือง ชื่อ ว่า พลาโน",
            "zh": "哪些 州 有 城市 名为 普莱诺"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"portland\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid(portland,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 portland:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('portland', _)))))"
        },
        "question": {
            "en": "what states have cities named portland",
            "de": "welche staaten haben staedte mit dem namen portland",
            "el": "ποιες πολιτείες έχουν πόλεις που ονομάζονται portland",
            "fa": "کدام ایالت ها شهری به نام پروتلند دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama portland ?",
            "sv": "vilka stater har städer som heter portland ?",
            "th": "รัฐ ใด บ้าง มี เมือง ชื่อ ว่า พอร์ตแลนด์",
            "zh": "哪些 州 有 城市 名为 波特兰"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"rochester\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid(rochester,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 rochester:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('rochester', _)))))"
        },
        "question": {
            "en": "what states have cities named rochester",
            "de": "in welchen staaten gibt es staedte mit dem namen rochester",
            "el": "ποιες πολιτείες έχουν πόλεις που ονομάζονται rochester",
            "fa": "کدام ایالت ها شهری به نام روچستر دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama rochester ?",
            "sv": "vilka stater har städer som heter rochester ?",
            "th": "รัฐ ใด บ้าง มี เมือง ชื่อ ว่า โรเชสเตอร์",
            "zh": "哪些 州 有 名为 罗切斯特 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"salt lake city\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid('salt lake city',_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 salt_lake_city:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('salt lake city', _)))))"
        },
        "question": {
            "en": "what states have cities named salt lake city",
            "de": "welche staaten haben staedte mit dem namen salt lake city",
            "el": "ποιες πολιτείες έχουν πόλεις με το όνομα salt lake city",
            "fa": "کدام ایالت ها شهری به نام سالت لیک دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama salt lake city ?",
            "sv": "vilka stater har städer som heter salt lake city ?",
            "th": "รัฐ ใด มี เมือง ชื่อ ว่า ซอลท์เลคซิตี",
            "zh": "哪些 州 有 名为 盐湖城 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"dallas\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid(dallas,_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> dallas_tx:c $0))",
            "funql": "answer(loc_1(cityid('dallas', _)))"
        },
        "question": {
            "en": "where is dallas",
            "de": "wo liegt dallas",
            "el": "που είναι το dallas",
            "fa": "دالاس در کجا واقع شده است ؟",
            "id": "di mana dallas ?",
            "sv": "vart är dallas ?",
            "th": "เมือง ดัลลัส อยู่ ที่ไหน",
            "zh": "达拉斯 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"portland\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid(portland,_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> portland_or:c $0))",
            "funql": "answer(loc_1(cityid('portland', _)))"
        },
        "question": {
            "en": "where is portland",
            "de": "wo liegt portland",
            "el": "που είναι το portland",
            "fa": "پورتلند در کجاست ؟",
            "id": "di mana portland ?",
            "sv": "vart ligger portland ?",
            "th": "เมือง พอร์ตแลนด์ ตั้ง อยู่ ที่ไหน",
            "zh": "波特兰 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 austin:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('austin', _)))))"
        },
        "question": {
            "en": "which states have cities named austin",
            "de": "in welchen staaten gibt es eine stadt namens austin",
            "el": "ποιες πολιτείες έχουν πόλεις που ονομάζονται austin",
            "fa": "کدام ایالت ها شهری به نام آستین دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama austin ?",
            "sv": "vilka stater har städer som heter austin ?",
            "th": "รัฐ ใด มี เมือง ชื่อ ว่า ออสติน บ้าง",
            "zh": "哪些 州 有 名为 奥斯汀 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(austin,_))))",
            "lambda": "(population:<lo,i> austin_tx:c)",
            "funql": "answer(population_1(cityid('austin', _)))"
        },
        "question": {
            "en": "how many people lived in austin",
            "de": "wie viele leute leben in austin",
            "el": "πόσοι άνθρωποι ζουν στο austin",
            "fa": "چند نفر در آستین زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di austin ?",
            "sv": "hur många människor bodde i austin ?",
            "th": "เมือง ออสติน มี ประชากร กี่ คน",
            "zh": "有 多少 人 住 在 奥斯汀"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"detroit\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(detroit,_))))",
            "lambda": "(population:<lo,i> detroit_mi:c)",
            "funql": "answer(population_1(cityid('detroit', _)))"
        },
        "question": {
            "en": "how many people live in detroit",
            "de": "wie viele menschen leben in detroit",
            "el": "πόσοι άνθρωποι ζουν στο detroit",
            "fa": "چند نفر در دترویت زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di detroit ?",
            "sv": "hur många människor bor i detroit ?",
            "th": "เมือง ดีทรอยท์ มี ประชากร อาศัย อยู่ เท่าไหร่",
            "zh": "有 多少 人 生活 在 底特律"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"houston\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(houston,_))))",
            "lambda": "(population:<lo,i> houston_tx:c)",
            "funql": "answer(population_1(cityid('houston', _)))"
        },
        "question": {
            "en": "how many people live in houston",
            "de": "wie viele menschen leben in houston",
            "el": "πόσοι άνθρωποι ζουν στο houston",
            "fa": "چند نفر در هوستون زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di houston ?",
            "sv": "hur många människor bor i houston ?",
            "th": "เมือง ฮุสตัน มี พลเมือง เท่าไหร่",
            "zh": "有 多少 人 生活 在 休斯敦"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boulder\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boulder,_))))",
            "lambda": "(population:<lo,i> boulder_co:c)",
            "funql": "answer(population_1(cityid('boulder', _)))"
        },
        "question": {
            "en": "number of people in boulder",
            "de": "wie viele leute in boulder",
            "el": "αριθμός των ανθρώπων στο boulder",
            "fa": "چند نفر در بولدر هستند ؟",
            "id": "jumlah orang di boulder ?",
            "sv": "antal personer i boulder ?",
            "th": "จำนวน ประชากร ใน เมือง โบลเดอร์",
            "zh": "博尔德 市 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boulder\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boulder,_))))",
            "lambda": "(population:<lo,i> boulder_co:c)",
            "funql": "answer(population_1(cityid('boulder', _)))"
        },
        "question": {
            "en": "what is the population of boulder",
            "de": "wie hoch ist die bevoelkerung von boulder",
            "el": "ποιος είναι ο πληθυσμός του boulder",
            "fa": "جمعیت بولدر چقدر است ؟",
            "id": "berapa populasi boulder ?",
            "sv": "vad är folkmängden i boulder ?",
            "th": "จง บอก จำนวน พลเมือง ใน เมือง โบลเดอร์",
            "zh": "博尔德 市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"houston\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(houston,_))))",
            "lambda": "(population:<lo,i> houston_tx:c)",
            "funql": "answer(population_1(cityid('houston', _)))"
        },
        "question": {
            "en": "what is the population of houston",
            "de": "wie hoch ist die bevoelkerung von houston",
            "el": "ποιος είναι ο πληθυσμός του houston",
            "fa": "جمعیت هوستون چقدر است ؟",
            "id": "berapa populasi houston ?",
            "sv": "vad är folkmängden i houston ?",
            "th": "เมือง ฮุสตัน มี พลเมือง อาศัย อยู่ กี่ คน",
            "zh": "休斯顿 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"new york\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid('new york',_))))",
            "lambda": "(population:<lo,i> new_york_ny:c)",
            "funql": "answer(population_1(city(cityid('new york', _))))"
        },
        "question": {
            "en": "what is the population of new york city",
            "de": "wie gross ist die bevoelkerung von new york city",
            "el": "ποιος είναι ο πληθυσμός της new york city",
            "fa": "جمعیت شهر نیویورک چقدر است .",
            "id": "berapa populasi new york city ?",
            "sv": "vad är folkmängden i new york city ?",
            "th": "ประชากร ของ เมือง นิวยอร์ค มี เท่าไหร่",
            "zh": "纽约 市 的 人口 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"san antonio\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid('san antonio',_))))",
            "lambda": "(population:<lo,i> san_antonio_tx:c)",
            "funql": "answer(population_1(cityid('san antonio', _)))"
        },
        "question": {
            "en": "what is the population of san antonio",
            "de": "wie lautet die bevoelkerung von san antonio",
            "el": "ποιος είναι ο πληθυσμός του san antonio",
            "fa": "جمعیت سن آنتونیو چقدر است ؟",
            "id": "berapa populasi san antonio ?",
            "sv": "vad är folkmängden i san antonio ?",
            "th": "ประชากร ของ เมือง ซานอันโตนิโอ มี เท่าไหร่",
            "zh": "圣安东尼奥 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"tucson\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(tucson,_))))",
            "lambda": "(population:<lo,i> tucson_az:c)",
            "funql": "answer(population_1(cityid('tucson', _)))"
        },
        "question": {
            "en": "what is the population of tucson",
            "de": "was ist die einwohnerzahl von tucson",
            "el": "ποιος είναι ο πληθυσμός του tucson",
            "fa": "جمعیت توکسان چقدر است ؟",
            "id": "berapa populasi tucson ?",
            "sv": "vad är folkmängden i tucson ?",
            "th": "เมือง ทูซอน มี ประชากร กี่ คน",
            "zh": "图森 市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),longest(B,river(B)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(traverse_1(longest(river(all)))))"
        },
        "question": {
            "en": "which states does the longest river run through",
            "de": "welcher staat hat den laensten fluss",
            "el": "ποιες πολιτείες διασχίζει το μεγαλύτερο ποτάμι",
            "fa": "بلندترین رود از کدام ایالت ها عبور میکند ؟",
            "id": "apa negara-negara bagian yang dilalui sungai terpanjang ?",
            "sv": "vilka stater löper den längsta floden genom ?",
            "th": "รัฐ ใด บ้าง ที่ แม่น้ำ สาย ที่ ยาว ที่สุด ไหล ผ่าน",
            "zh": "最长 的 河流 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"alabama\"",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(alabama))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 alabama:s))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(stateid('alabama'))))))"
        },
        "question": {
            "en": "how high is the highest point of alabama",
            "de": "wie hoch liegt der hoechste punkt in alabama",
            "el": "πόσο ψηλό είναι το ψηλότερο σημείο στην alabama",
            "fa": "بلند ترین نقطه آلاباما شهر چقدر ارتفاع دارد ؟",
            "id": "seberapa tinggikah titik tertinggi dari alabama ?",
            "sv": "hur hög är den högsta punkten i alabama ?",
            "th": "จุด สูง สุด ของ รัฐ อลาบามา มี ความ สูง เท่าไหร่",
            "zh": "阿拉巴马 州 的 最高 点 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"montana\"",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 montana:s))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(stateid('montana'))))))"
        },
        "question": {
            "en": "how tall is the highest point in montana",
            "de": "wie hoch ist der hoechste punkt in montana",
            "el": "πόσο ψηλό είναι το ψηλότερο σημείο στη montana",
            "fa": "مرتفع ترین نقطه مونتانا چقدر ارتفاع دارد ؟",
            "id": "seberapa tinggi titik tertinggi di montana ?",
            "sv": "hur hög är den högsta punkten i montana ?",
            "th": "จุด สูง สุด ของ รัฐ มอนตานา มี ความ สูง เท่าไหร่",
            "zh": "蒙大拿 州 的 最高 点 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the highest elevation in texas",
            "de": "was ist der hoechste punkt in texas",
            "el": "ποιο είναι το μεγαλύτερο υψόμετρο στο texas",
            "fa": "بلندترین ارتفاع در تگزاس کجاست ؟",
            "id": "berapa elevasi tertinggi di texas ?",
            "sv": "vad är den högsta höjden i texas ?",
            "th": "จุด สูง สุด ของ รัฐ เท็กซัส อยู่ ตรงไหน",
            "zh": "德克萨斯 州 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"nevada\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(nevada)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 nevada:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('nevada')))))"
        },
        "question": {
            "en": "what is the highest point in nevada in meters",
            "de": "welches ist der hoechstgelegene punkt in nevada gemessen in metern",
            "el": "ποιο είναι το ψηλότερο σημείο της nevada σε μέτρα",
            "fa": "بلندترین نقطه در نوادا کجاست ؟",
            "id": "apa titik tertinggi di nevada dalam meter ?",
            "sv": "vad är den högsta punkten i nevada i meter ?",
            "th": "จุด สูง สุด ของ รัฐ เนวาดา คือ จุด ใด วัด ใน หน่วย เมตร",
            "zh": "内华达 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "which is the longest river in usa",
            "de": "wie lautet der laengste fluss der usa",
            "el": "ποια είναι το μακρύτερο ποτάμι στις ηπα",
            "fa": "بلندترین رودخانه در ایالات متحده آمریکا کدام است ؟",
            "id": "apa sungai terpanjang di amerika serikat ?",
            "sv": "vilken är den längsta floden i usa ?",
            "th": "แม่น้ำ สาย ใด ยาว ที่สุด ใน อเมริกา",
            "zh": "哪个 是 美国 最长 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),area(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(largest_one(area_1(state(all))))"
        },
        "question": {
            "en": "what is the state with the largest area",
            "de": "welcher staat hat die groesste flaechenausdehnung",
            "el": "ποια είναι η πολιτεία με το μεγαλύτερο εμβαδό",
            "fa": "کدام ایالت دارای بیشترین مساحت است ؟",
            "id": "apa negara bagian dengan luas terbesar ?",
            "sv": "vilken stat har den största arean ?",
            "th": "รัฐ ใด มี พื้นที่ ใหญ่ ที่สุด",
            "zh": "面积 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),area(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(largest_one(area_1(state(all))))"
        },
        "question": {
            "en": "what state has the largest area",
            "de": "welches ist der staat mit der groessten flaeche",
            "el": "ποια πολιτεία έχει το μεγαλύτερο εμβαδό",
            "fa": "کدام ایالت بیشترین مساحت را داراست ؟",
            "id": "apa negara bagian yang memiliki luas wilayah terbesar ?",
            "sv": "vilken stat har den största arean ?",
            "th": "รัฐ ใด มี พื้นที่ ใหญ่ ที่สุด",
            "zh": "哪个 州 拥有 最大 的 面积"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"georgia\" ) ORDER BY HIGHEST_ELEVATION DESC LIMIT 1",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(georgia)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 georgia:s) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(state(next_to_2(stateid('georgia')))))))"
        },
        "question": {
            "en": "what is the highest point in states bordering georgia",
            "de": "welches ist der hoechste punkt der an georgia grenzenden staaten",
            "el": "ποιο είναι το ψηλότερο σημείο σε πολιτείες που συνορεύουν με την georgia",
            "fa": "بلندترین نقطه در شهرهای مجاور جورجیا کجاست ؟",
            "id": "apa titik tertinggi di negara-negara bagian yang berbatasan dengan georgia ?",
            "sv": "vad är den högsta punkten i delstater som gränsar till georgia ?",
            "th": "จุด ที่ สูง ที่สุด ของ รัฐ ที่ อยู่ ติด กับ รัฐ จอร์เจีย อยู่ ที่ใด",
            "zh": "与 佐治亚 州 接壤 的 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"colorado\" ) ORDER BY HIGHEST_ELEVATION DESC LIMIT 1",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(colorado)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 colorado:s) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(state(next_to_2(stateid('colorado')))))))"
        },
        "question": {
            "en": "what is the highest point in the states bordering colorado",
            "de": "wie lautet der hoechste punkt in den staaten welche an colorado grenzen",
            "el": "ποιο είναι το ψηλότερο σημείο στις πολιτείες που συνορεύουν με το colorado",
            "fa": "بلندترین نقطه در ایالات مجاور کلرادو کجاست ؟",
            "id": "apa titik tertinggi di negara-negara bagian yang berbatasan dengan colorado ?",
            "sv": "vad är den högsta punkten i de stater som gränsar till colorado ?",
            "th": "จุด สูง สุด ของ รัฐ ที่ อยู่ ติด กับ รัฐ โคโลราโด คือ จุด ไหน",
            "zh": "与 科罗拉多 州 接壤 的 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what state has the lowest population density",
            "de": "welcher staat hat die kleinste durchschnittliche urbane bevoelkerungzahl",
            "el": "ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت کمترین تمرکز جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terendah ?",
            "sv": "vilken stat har den lägsta befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร ต่ำ ที่สุด",
            "zh": "哪个 州 有 最低 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the lowest population density",
            "de": "welcher staat hat die kleinste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει τη χαμηλότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت دارای کمترین تمرکز جمعیت است ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terendah ?",
            "sv": "vilken stat har den lägsta befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร น้อย ที่สุด",
            "zh": "哪个 州 有 最低 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the smallest population density",
            "de": "welcher staat hat die geringste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت کمترین جمعیت شهری را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terkecil ?",
            "sv": "vilken stat har den minsta befolkningstätheten ?",
            "th": "รัฐ ใด มี จำนวน ประชากร เฉลี่ย ใน เมือง น้อย ที่สุด",
            "zh": "哪个 州 有 最小 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 iowa:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('iowa')))))"
        },
        "question": {
            "en": "what is the highest point in iowa",
            "de": "wie lautet der hoechste punkt in iowa",
            "el": "ποιο είναι το ψηλότερο σημείο στην iowa",
            "fa": "بلندترین نقطه در آیووا کجاست ؟",
            "id": "apa titik tertinggi di iowa ?",
            "sv": "vad är den högsta punkten i iowa ?",
            "th": "รัฐ ไอโอวา มี จุด สูง สุด ที่ไหน",
            "zh": "爱荷华 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"maine\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(maine)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 maine:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('maine')))))"
        },
        "question": {
            "en": "what is the highest point in maine",
            "de": "welches ist der hoechstgelegene punkt in maine",
            "el": "ποιο είναι το ψηλότερο σημείο στο maine",
            "fa": "بلندترین نقطه در مین کجاست ؟",
            "id": "apa titik tertinggi di maine ?",
            "sv": "vad är den högsta punkten i maine ?",
            "th": "จุด สูง สุด ของ รัฐ เมน อยู่ ที่ใด",
            "zh": "缅因 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"montana\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(montana)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 montana:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('montana')))))"
        },
        "question": {
            "en": "what is the highest point in montana",
            "de": "wie lautet der hoechste punkt in montana",
            "el": "ποιο είναι το ψηλότερο σημείο στη montana",
            "fa": "بلندترین نقطه در مونتانا کجاست ؟",
            "id": "apa titik tertinggi di montana ?",
            "sv": "vad är den högsta punkten i montana ?",
            "th": "จุด สูง สุด ของ รัฐ มอนตานา คือ ที่ใด",
            "zh": "蒙大拿 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"virginia\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(virginia)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 virginia:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('virginia')))))"
        },
        "question": {
            "en": "what is the highest point in virginia",
            "de": "welches ist der hoechstgelegene punkt in virginia",
            "el": "ποιο είναι το ψηλότερο σημείο στη virginia",
            "fa": "بلندترین نقطه در ویرجینیا کجاست ؟",
            "id": "apa titik tertinggi di virginia ?",
            "sv": "vad är den högsta punkten i virginia ?",
            "th": "จุด ใด เป็น จุด สูง สุด ของ รัฐ เวอร์จิเนีย",
            "zh": "弗吉尼亚 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"wyoming\"",
            "prolog": "answer(A,(high_point(B,A),const(B,stateid(wyoming))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 wyoming:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(high_point_1(stateid('wyoming')))"
        },
        "question": {
            "en": "what is the high point of wyoming",
            "de": "wie lautet der hoechste punkt in wyoming",
            "el": "ποιο είναι το ψηλό σημείο του wyoming",
            "fa": "نقطه بلند وایومینگ کجاست ؟",
            "id": "apa titik tinggi dari wyoming ?",
            "sv": "vad är den högsta punkten i wyoming ?",
            "th": "จุด สูง สุด ของ รัฐ ไวโอมิง อยู่ ที่ไหน",
            "zh": "怀俄明 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(hawaii)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 hawaii:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('hawaii')))))"
        },
        "question": {
            "en": "where is the highest point in hawaii",
            "de": "woe liegt der hoechste punkt in hawaii",
            "el": "ποιο είναι το ψηλότερο σημείο στην hawaii",
            "fa": "بالاترین نقطه در هاوایی کجا است ؟",
            "id": "di mana titik tertinggi di hawaii ?",
            "sv": "vart ligger den högsta punkten i hawaii ?",
            "th": "จุด สูง สุด ของ รัฐ ฮาวาย อยู่ ตรงไหน",
            "zh": "哪里 是 夏威夷 的 最高 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"delaware\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(delaware)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 delaware:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('delaware')))))"
        },
        "question": {
            "en": "what is the highest point in delaware",
            "de": "welches ist der hoechste punkt von delaware",
            "el": "ποιο είναι το ψηλότερο σημείο στο delaware",
            "fa": "بلندترین نقطه در دلاور کجاست ؟",
            "id": "apa titik tertinggi di delaware ?",
            "sv": "vad är den högsta punkten i delaware ?",
            "th": "จุด สูง สุด ของ รัฐ เดลาแวร์ อยู่ ตรงไหน",
            "zh": "特拉华 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH IN (SELECT MAX (DERIVED_FIELDalias0) FROM (SELECT MAX (LENGTH) AS DERIVED_FIELDalias0, TRAVERSE FROM RIVER WHERE TRAVERSE IN (SELECT STATE_NAME FROM BORDER_INFO WHERE BORDER IN (SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT(1) = (SELECT MAX (DERIVED_FIELDalias1) FROM (SELECT BORDER, COUNT(1) AS DERIVED_FIELDalias1 FROM BORDER_INFO GROUP BY BORDER) AS DERIVED_TABLEalias0)) ) GROUP BY TRAVERSE) AS DERIVED_TABLEalias1)",
            "prolog": "answer(A,most(A,B,(state(A),next_to(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(state(next_to_2(state(all)))))"
        },
        "question": {
            "en": "what state borders the most states",
            "de": "welcher staat grenzt an die meisten staaten",
            "el": "ποια πολιτεία συνορεύει με τις περισσότερες πολιτείες",
            "fa": "کدام ایالت با ایالات بیشتری همجوار است ؟",
            "id": "apa negara bagian yang berbatasan dengan paling banyak negara bagian ?",
            "sv": "vilken stat gränsar flest stater ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อื่น มาก ที่สุด",
            "zh": "哪个 州 与 最多 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH IN (SELECT MAX (DERIVED_FIELDalias0) FROM (SELECT MAX (LENGTH) AS DERIVED_FIELDalias0, TRAVERSE FROM RIVER WHERE TRAVERSE IN (SELECT STATE_NAME FROM BORDER_INFO WHERE BORDER IN (SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT(1) = (SELECT MAX (DERIVED_FIELDalias1) FROM (SELECT BORDER, COUNT(1) AS DERIVED_FIELDalias1 FROM BORDER_INFO GROUP BY BORDER) AS DERIVED_TABLEalias0)) ) GROUP BY TRAVERSE) AS DERIVED_TABLEalias1)",
            "prolog": "answer(A,most(A,B,(state(A),next_to(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(state(next_to_2(state(all)))))"
        },
        "question": {
            "en": "which state borders the most states",
            "de": "welcher staat grenzt an die meisten anderen staaten",
            "el": "ποια πολιτεία συνορεύει με τις περισσότερες πολιτείες",
            "fa": "کدام ایالت با بیشتر ایالت ها هم مرز است ؟",
            "id": "apa negara bagian yang berbatasan dengan paling banyak negara bagian ?",
            "sv": "vilken stat gränsar till flest antal stater ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อื่น มาก ที่สุด",
            "zh": "哪个 州 与 最多 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM HIGHLOW WHERE LOWEST_ELEVATION < ( SELECT LOWEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"alabama\" )",
            "prolog": "answer(A,count(B,(state(B),low_point(B,C),lower(C,D),low_point(E,D),const(E,stateid(alabama))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 $0) (<:<i,<i,t>> (elevation:<lo,i> $1) (elevation:<lo,i> (argmin:<<e,t>,<<e,i>,e>> (lambda $2:e (and:<t*,t> (place:<p,t> $2) (loc:<lo,<lo,t>> $2 alabama:s))) (lambda $2:e (elevation:<lo,i> $2)))))))))))",
            "funql": "answer(count(state(low_point_2(lower_2(low_point_1(stateid('alabama')))))))"
        },
        "question": {
            "en": "count the states which have elevations lower than what alabama has",
            "de": "zahle die staaten welche erhebungen haben die niedriger liegen als jene in alabama",
            "el": "μέτρα τις πολιτείες που έχουν υψόμετρα χαμηλότερα από αυτό που έχει η alabama",
            "fa": "میتوانی به من بگویی بلند ترین نقطه ایالت ارگون کدامست ؟",
            "id": "hitung negara-negara bagian yang memiliki ketinggian lebih rendah dari alabama .",
            "sv": "räkna de stater som har höjder lägre än vad alabama har .",
            "th": "จง นับ จำนวน รัฐ ที่ มี ที่สูง ต่ำ กว่า ที่สูง ของ รัฐ อลาบามา",
            "zh": "数一数 拥有 比 美国 阿拉巴马 州 的 海拔 低 的 州 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE HIGHEST_POINT = \"mount mckinley\"",
            "prolog": "answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))",
            "lambda": "(elevation:<lo,i> mount_mckinley:m)",
            "funql": "answer(elevation_1(placeid('mount mckinley')))"
        },
        "question": {
            "en": "how high is mount mckinley",
            "de": "wie hoch ist mount mckinley",
            "el": "πόσο ψηλό είναι το όρος mckinley",
            "fa": "ارتفاع قله مک کینلی چقدر است ؟",
            "id": "seberapa tinggikah gunung mckinley ?",
            "sv": "hur hög är mount mckinley ?",
            "th": "ยอดเขา แมคคินลีย์ มี ความ สูง เท่าไหร่",
            "zh": "麦金利 山 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE HIGHEST_POINT = \"mount mckinley\"",
            "prolog": "answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))",
            "lambda": "(elevation:<lo,i> mount_mckinley:m)",
            "funql": "answer(elevation_1(placeid('mount mckinley')))"
        },
        "question": {
            "en": "how tall is mount mckinley",
            "de": "wie hoch ist mount mckinley",
            "el": "πόσο ψηλό είναι το όρος mckinley",
            "fa": "ارتفاع مک کینلی چقدر است ؟",
            "id": "seberapa tinggi gunung mckinley ?",
            "sv": "hur hög är mount mckinley ?",
            "th": "ภูเขา แมคคินลีย์ มี ความ สูง เท่าไหร่",
            "zh": "麦金利 山 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE HIGHEST_POINT = \"san francisco\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,cityid('san francisco',_)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 san_francisco_ca:c))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(cityid('san francisco', _)))))"
        },
        "question": {
            "en": "what is the maximum elevation of san francisco",
            "de": "welches ist die maximale erhoehung von san francisco",
            "el": "ποιο είναι το μεγαλύτερο υψόμετρο στο san francisco",
            "fa": "بالاترین ارتفاع در سانفرانسیسکو چقدر است ؟",
            "id": "berapa elevasi tertinggi di san francisco ?",
            "sv": "vad är den maximala höjden av san francisco ?",
            "th": "เมือง ซานฟรานซิสโก มี สูง สุด ที่ ใด",
            "zh": "旧金山 最高 海拔 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "how high is the highest point in america",
            "de": "wie hoch liegt der hoechste punkt in amerika",
            "el": "πόσο ψηλό είναι το ψηλότερο σημείο στην αμερική",
            "fa": "بلند ترین نقطه آمریکا چقدر ارتفاع دارد ؟",
            "id": "seberapa tinggikah titik tertinggi di amerika ?",
            "sv": "hur hög är den högsta punkten i amerika ?",
            "th": "จุด ที่ สูง ที่สุด ของ สหรัฐอเมริกา มี ความ สูง เท่าไหร่",
            "zh": "美国 的 最高 点 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest elevation in the united states",
            "de": "wie lautet die hoechste erhebung in den vereinigten staaten",
            "el": "ποιο είναι το μεγαλύτερο υψόμετρο στις ηνωμένες πολιτείες",
            "fa": "بلندترین ارتفاع در ایالات متحده کجاست ؟",
            "id": "berapa elevasi tertinggi di amerika serikat ?",
            "sv": "vad är den högsta höjden i usa ?",
            "th": "ที่ใด จุด สูง ที่สุด ใน สหรัฐอเมริกา",
            "zh": "美国 最高 海拔 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(colorado)),river(B)))",
            "lambda": "(len:<r,i> colorado_river:r)",
            "funql": "answer(len(river(riverid('colorado'))))"
        },
        "question": {
            "en": "how long is the colorado river",
            "de": "wie lang ist der colorado fluss",
            "el": "πόσο μακρύς είναι ο ποταμός colorado",
            "fa": "طول رودخانه کلورادو چقدر است ؟",
            "id": "seberapa panjangkah sungai colorado ?",
            "sv": "hur lång är coloradofloden ?",
            "th": "แม่น้ำ โคโลราโด มี ความ ยาว เท่าไหร่",
            "zh": "科罗拉多 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"delaware\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(delaware)),river(B)))",
            "lambda": "(len:<r,i> delaware_river:r)",
            "funql": "answer(len(river(riverid('delaware'))))"
        },
        "question": {
            "en": "how long is the delaware river",
            "de": "wie lang ist der delaware river",
            "el": "πόσο μακρύς είναι ο ποταμός delaware",
            "fa": "طول رودخانه دلاور چقدر است ؟",
            "id": "seberapa panjangkah sungai delaware ?",
            "sv": "hur lång är delawarefloden ?",
            "th": "แม่น้ำ เดลาแวร์ มี ความ ยาว เท่าไหร่",
            "zh": "特拉华 河 是 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"north platte\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid('north platte')),river(B)))",
            "lambda": "(len:<r,i> north_platte_river:r)",
            "funql": "answer(len(river(riverid('north platte'))))"
        },
        "question": {
            "en": "how long is the north platte river",
            "de": "wie lange ist der north platte fluss",
            "el": "πόσο μεγάλος είναι ο βόρειος platte ποταμός",
            "fa": "طول رودخانه نورث بلات چقدر است ؟",
            "id": "seberapa panjangkah sungai north platte ?",
            "sv": "hur lång är north platte floden ?",
            "th": "แม่น้ำ นอร์ธเพลต มี ความ ยาว เท่าไหร่",
            "zh": "北普拉特 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"ohio\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(ohio)),river(B)))",
            "lambda": "(len:<r,i> ohio_river:r)",
            "funql": "answer(len(river(riverid('ohio'))))"
        },
        "question": {
            "en": "how long is the ohio river",
            "de": "wie lang ist der fluss ohio",
            "el": "πόσο μακρύς είναι ο ποταμός ohio",
            "fa": "طول رودخانه اوهایو چقدر است ؟",
            "id": "seberapa panjangkah sungai ohio ?",
            "sv": "hur lång är ohiofloden ?",
            "th": "แม่น้ำ โอไฮโฮ ยาว เท่าไหร่",
            "zh": "俄亥俄 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(colorado)),river(B)))",
            "lambda": "(len:<r,i> colorado_river:r)",
            "funql": "answer(len(river(riverid('colorado'))))"
        },
        "question": {
            "en": "what is the length of the colorado river",
            "de": "wie lang ist der fluss colorado",
            "el": "ποιο είναι το μήκος του ποταμού colorado",
            "fa": "طول رودخانه کلرادو چقدر است ؟",
            "id": "berapa panjang sungai colorado ?",
            "sv": "vad är längden på coloradofloden ?",
            "th": "แม่น้ำ โคโลราโด ยาว เท่าไหร่",
            "zh": "科罗拉多 河 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))",
            "lambda": "(len:<r,i> mississippi_river:r)",
            "funql": "answer(len(river(riverid('mississippi'))))"
        },
        "question": {
            "en": "what is the length of the mississippi river",
            "de": "wie lang ist der mississippi",
            "el": "ποιο είναι το μήκος του ποταμού mississippi",
            "fa": "طول رودخانه میسیسیپی چقدر است ؟",
            "id": "berapa panjang sungai mississippi ?",
            "sv": "vad är längden på mississippifloden ?",
            "th": "แม่น้ำ มิสซิสซิปปี มี ความ ยาว เท่าไหร่",
            "zh": "密西西比 河 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(mississippi))))",
            "lambda": "(len:<r,i> mississippi_river:r)",
            "funql": "answer(len(riverid('mississippi')))"
        },
        "question": {
            "en": "what length is the mississippi",
            "de": "wie lang ist der mississippi",
            "el": "ποιο είναι το μήκος του mississippi",
            "fa": "طول میسیسیپی چقدر است ؟",
            "id": "berapa panjang mississippi ?",
            "sv": "hur lång är mississippi ?",
            "th": "แม่น้ำ มิสซิสซิปปี มี ความ ยาว เท่าไหร่",
            "zh": "密西西比 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT LENGTH FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"california\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"california\"",
            "prolog": "answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,stateid(california))))))",
            "lambda": "(len:<r,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 california:s))) (lambda $0:e (len:<r,i> $0))))",
            "funql": "answer(len(longest(river(loc_2(stateid('california'))))))"
        },
        "question": {
            "en": "how long is the longest river in california",
            "de": "wie lang ist der laengste fluss kaliforniens",
            "el": "πόσο μακρύ είναι το μακρύτερο ποτάμι στην california",
            "fa": "طول بلند ترین رودخانه کالیفرنیا چقدر است ؟",
            "id": "seberapa panjangkah sungai terpanjang di california ?",
            "sv": "hur lång är den längsta floden i kalifornien ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด ใน รัฐ แคลิฟอร์เนีย ยาว เท่าไหร่",
            "zh": "在 加利福尼亚 州 最长 的 河流 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT LENGTH FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"texas\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"texas\"",
            "prolog": "answer(A,(len(B,A),longest(B,(river(B),traverse(B,C),const(C,stateid(texas))))))",
            "lambda": "(len:<r,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (len:<r,i> $0))))",
            "funql": "answer(len(longest(river(traverse_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the length of the longest river that runs through texas",
            "de": "wie lautet die laenge des lanegsten fluesses der durch texas verlaeuft",
            "el": "ποιο είναι το μήκος του μακρύτερου ποταμού που διασχίζει το texas",
            "fa": "طول بلندترین رودخانه ای که از تگزاس میگذرد چقدر است ؟",
            "id": "berapa panjang dari sungai terpanjang yang melalui texas ?",
            "sv": "vad är längden på den längsta flod som rinner genom texas ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด ที่ ไหล ผ่าน รัฐ เท็กซัส มี ความ ยาว เท่าไหร่",
            "zh": "流经 得克萨斯 州 的 最长 的 河流 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CAPITAL ) FROM STATE WHERE STATE_NAME = \"rhode island\"",
            "prolog": "answer(A,count(B,(capital(B),const(C,stateid('rhode island')),loc(B,C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (capital:<c,t> $0) (loc:<lo,<lo,t>> $0 rhode_island:s))))",
            "funql": "answer(count(capital(loc_2(stateid('rhode island')))))"
        },
        "question": {
            "en": "how many capitals does rhode island have",
            "de": "wie viele grosse staedte gibt es in rhode island",
            "el": "πόσες πρωτεύουσες έχει το rhode island",
            "fa": "رودآیلند چند مرکز دارد ؟",
            "id": "berapa jumlah ibukota yang dimiliki oleh rhode island ?",
            "sv": "hur många huvudstäder har rhode island ?",
            "th": "รัฐ โรดไอแลนด์ มี เมืองหลวง กี่ เมือง",
            "zh": "罗德岛 有 多少 省会 城市 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY",
            "prolog": "answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many cities are there in the united states",
            "de": "wie viele staedte gibt es in den usa",
            "el": "πόσες πόλεις υπάρχουν στις ηνωμένες πολιτείες",
            "fa": "چند شهر در ایالات متحده هست ؟",
            "id": "berapa banyak kota yang ada di amerika serikat ?",
            "sv": "hur många städer finns det i usa ?",
            "th": "สหรัฐอเมริกา มี เมือง ทั้ง สิ้น กี่ เมือง",
            "zh": "在 美国 有 多少 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,(population(B,A),largest(B,city(B))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(population_1(largest(city(all))))"
        },
        "question": {
            "en": "how many citizens does the biggest city have in the usa",
            "de": "wie viele einwohner hat die groesste stadt in den usa",
            "el": "πόσους κατοίκους έχει η μεγαλύτερη πόλη στις ηπα",
            "fa": "بزرگترین شهر ایالات متحده چند شهروند دارد ؟",
            "id": "berapa banyak warga di kota terbesar di amerika serikat ?",
            "sv": "hur många medborgare har den största staden i usa ?",
            "th": "เมือง ที่ ใหญ่ ที่สุด ใน อเมริกา มี ประชากร เท่าไหร่",
            "zh": "在 美国 最大 的 城市 有 多少 市民"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,count(B,(const(B,riverid(colorado)),river(B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (named:<e,<n,t>> $0 colorado:n) (river:<r,t> $0))))",
            "funql": "answer(count(river(riverid('colorado'))))"
        },
        "question": {
            "en": "how many colorado rivers are there",
            "de": "wie viele fluesse mit dem namen colorado gibt es",
            "el": "πόσοι ποταμοί colorado υπάρχουν",
            "fa": "چند رودخانه کلرادو وجود دارد ؟",
            "id": "berapa banyak sungai colorado yang ada ?",
            "sv": "hur många floder har colorado ?",
            "th": "มี แม่น้ำ โคโลราโด อยู่ กี่ สาย",
            "zh": "被 称为 科罗拉多 的 河流 有 多少 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"minneapolis\" AND STATE_NAME = \"minnesota\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(minneapolis,mn))))",
            "lambda": "(population:<lo,i> minneapolis_mn:c)",
            "funql": "answer(population_1(cityid('minneapolis', 'mn')))"
        },
        "question": {
            "en": "how many people live in minneapolis minnesota",
            "de": "wie viele leute leben in minneapolis minnesota",
            "el": "πόσοι άνθρωποι ζουν στη minneapolis minnesota",
            "fa": "چند نفر در مینیاپولیس مینهسوتا زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di minneapolis minnesota ?",
            "sv": "hur många människor bor i minneapolis minnesota ?",
            "th": "มี ประชากร กี่ คน อาศัย อยู่ ใน เมือง มินเนอาโพลิส รัฐ มินเนโซตา",
            "zh": "有 多少 人 生活 在 明尼苏达 州 的 明尼阿波利斯 市"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"erie\" AND STATE_NAME = \"pennsylvania\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(erie,pa))))",
            "lambda": "(population:<lo,i> erie_pa:c)",
            "funql": "answer(population_1(cityid('erie', 'pa')))"
        },
        "question": {
            "en": "what is the population of erie pennsylvania",
            "de": "wie gross ist die bevoelkerung von erie in pennsylvania",
            "el": "ποιος είναι ο πληθυσμός του erie pennsylvania",
            "fa": "جمعیت پنسیلوانیا چقدر است ؟",
            "id": "berapa populasi erie pennsylvania ?",
            "sv": "vad är folkmängden i erie pennsylvania ?",
            "th": "เมือง อีรี รัฐ เพ็นซิลเวเนีย มี ประชากร เท่าใด",
            "zh": "宾夕法尼亚 州 伊利 市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"tempe\" AND STATE_NAME = \"arizona\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(tempe,az))))",
            "lambda": "(population:<lo,i> tempe_az:c)",
            "funql": "answer(population_1(cityid('tempe', 'az')))"
        },
        "question": {
            "en": "what is the population of tempe arizona",
            "de": "welches ist die bevoelkerungszahl von tempe arizona",
            "el": "ποιος είναι ο πληθυσμός του tempe arizona",
            "fa": "جمعیت تمپه آریزونا چقدر است ؟",
            "id": "berapa populasi tempe arizona ?",
            "sv": "vad är folkmängden i tempe arizona ?",
            "th": "เมือง เทมเป้ รัฐ แอริโซนา มี ประชากร กี่ คน",
            "zh": "亚利桑那 州 坦佩 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"new york\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"new york\"",
            "prolog": "answer(A,(population(B,A),largest(B,(city(B),loc(B,C),const(C,stateid('new york')),state(C)))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 new_york:s))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(population_1(largest(city(loc_2(state(stateid('new york')))))))"
        },
        "question": {
            "en": "how many people live in the biggest city in new york state",
            "de": "wie wieviele menschen leben in der groessten stadt von new york state",
            "el": "πόσοι άνθρωποι ζουν στη μεγαλύτερη πόλη στην πολιτεία της new york",
            "fa": "چند نفر در بزرگترین شهر نیویورک زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di kota terbesar di negara bagian new york ?",
            "sv": "hur många människor bor i den största staden i staten new york ?",
            "th": "เมือง ใหญ่ ที่สุด ของ รัฐ นิวยอร์ค มี ประชากร กี่ คน",
            "zh": "有 多少 人 居住 在 纽约 州 最大 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = ( SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(texas))))",
            "lambda": "(population:<lo,i> (capital:<s,c> texas:s))",
            "funql": "answer(population_1(capital(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "how many people live in the capital of texas",
            "de": "wie viele leute leben in der hauptstadt von texas",
            "el": "πόσοι άνθρωποι ζουν στην πρωτεύουσα του texas",
            "fa": "چند نفر در مرکز تگزاس زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di ibukota texas ?",
            "sv": "hur många människor bor i huvudstaden av texas ?",
            "th": "เมืองหลวง ของ รัฐ เท็กซัส มี ประชากร เท่าไหร่",
            "zh": "有 多少 人 住 在 得克萨斯 州 的 首府"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( POPULATION ) FROM STATE",
            "prolog": "answer(A,(population(B,A),const(B,countryid(usa))))",
            "lambda": "(population:<lo,i> usa:co)",
            "funql": "answer(population_1(countryid('usa')))"
        },
        "question": {
            "en": "how many people live in the united states",
            "de": "wie viele menschen leben in den usa",
            "el": "πόσοι άνθρωποι ζουν στις ηνωμένες πολιτείες",
            "fa": "چند نفر در ایالات متحده زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di amerika serikat ?",
            "sv": "hur många människor bor i usa ?",
            "th": "มี พลเมือง จำนวน เท่าไหร่ อาศัย อยู่ ใน ประเทศ สหรัฐอเมริกา",
            "zh": "有 多少 人 住 在 美国"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),most(C,D,(state(C),loc(D,C),river(D)))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (river:<r,t> $2) (loc:<lo,<lo,t>> $2 $1))))))))))",
            "funql": "answer(count(river(loc_2(most(state(loc_1(river(all))))))))"
        },
        "question": {
            "en": "how many rivers are in the state that has the most rivers",
            "de": "wie viele flüsse gibt es im staat mit den meisten flüssen",
            "el": "πόσα ποτάμια υπάρχουν στη πολιτεία που έχει τα περισσότερα ποτάμια",
            "fa": "چند رودخانه در شهری که بیشترین رودخانه ها را دارد وجود دارد ؟",
            "id": "berapa banyak sungai di negara bagian yang memiliki paling banyak sungai ?",
            "sv": "hur många floder har den stat som har högst antal floder ?",
            "th": "รัฐ ที่ มี แม่น้ำ อยู่ มาก ที่สุด มี แม่น้ำ อยู่ กี่ สาย",
            "zh": "在 河流 数 最多 的 州 里 有 多少 条 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM STATE",
            "prolog": "answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many states are in the usa",
            "de": "wie viele staaten gibt es in den usa",
            "el": "πόσες πολιτείες υπάρχουν στις ηπα",
            "fa": "ایالات متحده چند ایالت دارد ؟",
            "id": "berapa banyak negara bagian di amerika serikat ?",
            "sv": "hur många stater finns det i usa ?",
            "th": "สหรัฐอเมริกา มี รัฐ ทั้งหมด กี่ รัฐ",
            "zh": "在 美国 有 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM STATE",
            "prolog": "answer(A,count(B,state(B),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (state:<s,t> $0)))",
            "funql": "answer(count(state(all)))"
        },
        "question": {
            "en": "how many states are there",
            "de": "wie viele staaten gibt es",
            "el": "πόσες πολιτείες υπάρχουν",
            "fa": "چند ایالت وجود دارد ؟",
            "id": "berapa banyak negara bagian yang ada ?",
            "sv": "hur många stater finns det ?",
            "th": "มี รัฐ อยู่ ทั้งหมด กี่ รัฐ",
            "zh": "有 多少 个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM STATE",
            "prolog": "answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many states are there in the usa",
            "de": "wie viele staaten hat die usa",
            "el": "πόσες πολιτείες υπάρχουν στις usa",
            "fa": "چند ایالت در ایالات متحده وجود دارد ؟",
            "id": "berapa banyak negara bagian yang ada di amerika serikat ?",
            "sv": "hur många stater finns det i usa ?",
            "th": "อเมริกา มี รัฐ ทั้งหมด กี่ รัฐ",
            "zh": "在 美国 有 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM STATE",
            "prolog": "answer(A,count(B,(state(B),const(C,countryid(usa)),loc(B,C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many states does usa have",
            "de": "wie viele staaten sind in den vereinigten staaten",
            "el": "πόσες πολιτείες έχουν οι usa",
            "fa": "ایالات متحده چند ایالت دارد ؟",
            "id": "berapa banyak negara bagian yang dimiliki amerika serikat ?",
            "sv": "hur många stater har usa ?",
            "th": "ประเทศ อเมริกา มี รัฐ กี่ รัฐ",
            "zh": "美国 有 多少 州 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(iowa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 iowa:s))))",
            "funql": "answer(count(state(next_to_2(stateid('iowa')))))"
        },
        "question": {
            "en": "how many states border iowa",
            "de": "nenne die anzahl der staaten welche an iowa grenzen",
            "el": "πόσες πολιτείες συνορεύουν με την iowa",
            "fa": "چند ایالت همجوار آیووا هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan iowa ?",
            "sv": "hur många stater gränsar till iowa ?",
            "th": "จง บอก จำนวน รัฐ ที่ อยู่ ติด กับ รัฐ ไอโอวา",
            "zh": "有 多少 州 与 艾奥瓦 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"tennessee\"",
            "prolog": "answer(A,count(B,(state(B),const(C,stateid(tennessee)),next_to(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> tennessee:s $0))))",
            "funql": "answer(count(state(next_to_1(stateid('tennessee')))))"
        },
        "question": {
            "en": "how many states does tennessee border",
            "de": "an wie viele staaten grenzt tennessee",
            "el": "με πόσες πολιτείες συνορεύει το tennessee",
            "fa": "چند ایالت همجوار تنسی هستند ؟",
            "id": "berapa banyak negara bagian yang berbatasan dengan tennessee ?",
            "sv": "hur många stater gränasr tennessee till ?",
            "th": "รัฐ เทนเนสซี อยู่ ติด กับ กี่ รัฐ",
            "zh": "有 多少 州 与 田纳西 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,count(B,(const(C,stateid(iowa)),next_to(C,B),state(B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> iowa:s $0))))",
            "funql": "answer(count(state(next_to_1(stateid('iowa')))))"
        },
        "question": {
            "en": "iowa borders how many states",
            "de": "an wie viele staaten grenzt iowa",
            "el": "η iowa συνορεύει με πόσες πολιτείες",
            "fa": "آیووا با چند ایالت همجوار است ؟",
            "id": "iowa berbatasan dengan berapa banyak negara bagian ?",
            "sv": "iowa gränsar till hur många stater ?",
            "th": "รัฐ ไอโอวา อยู่ ติด กับ รัฐ ทั้งหมด กี่ รัฐ",
            "zh": "艾奥瓦 州 和 多少 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(iowa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 iowa:s))))",
            "funql": "answer(count(state(next_to_2(stateid('iowa')))))"
        },
        "question": {
            "en": "number of states bordering iowa",
            "de": "wie viele staaten grenzen an iowa",
            "el": "αριθμός πολιτειών που συνορεύουν με την iowa",
            "fa": "چند ایالت با آیووا همجوار هستند ؟",
            "id": "jumlah negara yang berbatasan dengan iowa ?",
            "sv": "antal stater som gränsar till iowa ?",
            "th": "มี รัฐ ติด อยู่ กับ รัฐ ไอโอวา อยู่ กี่ รัฐ",
            "zh": "与 艾奥瓦 州 接壤 的 州 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) )",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),largest(D,(state(C),population(C,D)))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1)))))))",
            "funql": "answer(count(state(next_to_2(largest_one(population_1(state(all)))))))"
        },
        "question": {
            "en": "how many states border the state with the largest population",
            "de": "wie viele staaten grenzen an den staat mit der groessten bevoelkerung",
            "el": "πόσες πολιτείες συνορεύουν την πολιτεία με το μεγαλύτερο πληθυσμό",
            "fa": "چند ایالت همجوار ایالتی هستند که بیشترین جمعیت را دارد ؟",
            "id": "berapa banyak negara bagian yang berbatasan dengan negara bagian dengan populasi terbesar ?",
            "sv": "hur många stater gränsar till staten med den största befolkningen ?",
            "th": "มี กี่ รัฐ บ้าง ที่ อยู่ ติด กับ รัฐ ที่ มี ประชากร มาก ที่สุด",
            "zh": "有 多少 州 与 人口 最多 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( DISTINCT STATE_NAME ) FROM STATE WHERE STATE_NAME NOT IN ( SELECT TRAVERSE FROM RIVER )",
            "prolog": "answer(A,count(B,(state(B),not((loc(C,B),river(C)))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (not:<t,t> (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))))",
            "funql": "answer(count(exclude(state(all), loc_1(river(all)))))"
        },
        "question": {
            "en": "how many states do not have rivers",
            "de": "wie viele staaten haben keine fluesse",
            "el": "πόσες πολιτείες δεν έχουν ποτάμια",
            "fa": "چند ایالت رودخانه ندارند ؟",
            "id": "berapa banyak negara bagian tidak memiliki sungai ?",
            "sv": "hur många stater har inga floder ?",
            "th": "มี กี่ รัฐ ที่ ไม่มี แม่น้ำ เลย",
            "zh": "有 多少 州 没有 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM HIGHLOW WHERE HIGHEST_ELEVATION > ( SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = ( SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1) ) ) )",
            "prolog": "answer(A,count(B,(state(B),loc(C,B),higher(C,D),place(C),highest(D,(place(D),loc(D,E),state(E),loc(F,E),largest(F,(capital(F),city(F),loc(F,G),const(G,countryid(usa))))))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 $0) (>:<i,<i,t>> (elevation:<lo,i> $1) (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (and:<t*,t> (place:<p,t> $2) (exists:<<e,t>,t> (lambda $3:e (and:<t*,t> (loc:<lo,<lo,t>> $2 $3) (state:<s,t> $3) (loc:<lo,<lo,t>> $3 usa:co) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $4:e (and:<t*,t> (capital:<c,t> $4) (city:<c,t> $4))) (lambda $4:e (size:<lo,i> $4))) $3)))))) (lambda $2:e (elevation:<lo,i> $2)))))))))))",
            "funql": "answer(count(state(loc_1(place(higher_2(highest(place(loc_2(state(loc_1(largest(capital(city(loc_2(countryid('usa'))))))))))))))))"
        },
        "question": {
            "en": "how many states have a higher point than the highest point of the state with the largest capital city in the us",
            "de": "wie viele staaten haben einen hoeher gelegenen punkt als der hoechstgelegene punkt des staates mit der groessten hauptstadt in den usa",
            "el": "πόσες πολιτείες έχουν ψηλότερο σημείο από το ψηλότερο σημείο της πολιτείας με το τη μεγαλύτερη πρωτεύουσα πόλη στις us",
            "fa": "چند ایالت نقطه ای مرتفع تر از مرتفعترین نقطه پرجمعیت ترین شهر آمریکا دارند ؟",
            "id": "berapa banyak negara bagian memiliki titik lebih tinggi dari titik tertinggi dari negara bagian dengan ibukota terbesar di as ?",
            "sv": "hur många stater har en högre punkt än den högsta punkten i staten med den största huvudstaden i usa ?",
            "th": "รัฐ ใด บ้าง ที่ มี จุด สูง กว่า จุด สูง สุด ของ รัฐ ที่ มี เมืองหลวง ใหญ่ ที่สุด ใน สหรัฐ",
            "zh": "在 美国 有 多少 州 有 比 首府 城市 最大 的 州 的 最高 点 高 的 地区"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH > 750 AND TRAVERSE = \"florida\"",
            "prolog": "answer(A,(major(A),river(A),loc(A,B),const(B,stateid(florida))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (river:<r,t> $0) (loc:<lo,<lo,t>> $0 florida:s)))",
            "funql": "answer(major(river(loc_2(stateid('florida')))))"
        },
        "question": {
            "en": "name the major rivers in florida",
            "de": "nenne die wichtigsten fluesse in florida",
            "el": "ονόμασε τα κύρια ποτάμια στη florida",
            "fa": "رودخانه های عمده فلوریدا را نام ببر .",
            "id": "nama sungai-sungai besar di florida .",
            "sv": "namnge de stora floderna i florida .",
            "th": "จง บอก ชื่อ แม่น้ำ สาย หลัก ใน รัฐ ฟลอริดา",
            "zh": "说出 在 佛罗里达 州 的 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH > 750 AND TRAVERSE = \"ohio\"",
            "prolog": "answer(A,(major(A),river(A),loc(A,B),const(B,stateid(ohio))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (river:<r,t> $0) (loc:<lo,<lo,t>> $0 ohio:s)))",
            "funql": "answer(major(river(loc_2(stateid('ohio')))))"
        },
        "question": {
            "en": "what are the major rivers in ohio",
            "de": "wie lauten die wichtigsten fluesse in ohio",
            "el": "ποια είναι τα κύρια ποτάμια του ohio",
            "fa": "رودخانه های عمده اوهایو کدامند ؟",
            "id": "apa sungai-sungai besar di ohio ?",
            "sv": "vilka är de stora floderna i ohio ?",
            "th": "แม่น้ำ สาย หลัก ใน รัฐ โอไฮโอ มี อะไร บ้าง",
            "zh": "在 俄亥俄 州 有 哪些 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"texas\" ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,(longest(B,(river(B),loc(B,C),const(C,stateid(texas)))),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 texas:s))) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(traverse_1(longest(river(loc_2(stateid('texas')))))))"
        },
        "question": {
            "en": "through which states does the longest river in texas run",
            "de": "durch welche staaten fliesst der laengste fluss in texas",
            "el": "πόσες πολιτείες διασχίζει το μεγαλύτερο ποτάμι στο texas",
            "fa": "طولانی ترین رودخانه تگزاس از کدام ایالت ها میگذرد ؟",
            "id": "negara-negara bagian manakah yang dilalui sungai terpanjang di texas ?",
            "sv": "genom vilka stater löper den längsta floden i texas genom ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด ใน รัฐ เท็กซัส ไหล ผ่าน รัฐ ใด บ้าง",
            "zh": "在 德克萨斯 州 的 最长 的 河流 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(capital(A),city(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s) (city:<c,t> $0)))",
            "funql": "answer(capital(city(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the capital city in texas",
            "de": "was ist die hauptstadt des staates texas",
            "el": "ποια είναι η πρωτεύουσα πόλη του texas",
            "fa": "مرکز شهر تگزاس کدام است ؟",
            "id": "apa ibukota di texas ?",
            "sv": "vilken är huvudstad i texas ?",
            "th": "เมืองหลวง ของ รัฐ เท็กซัส ชื่อ ว่า อะไร",
            "zh": "德克萨斯 州 的 首府 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(california))))",
            "lambda": "(capital:<s,c> california:s)",
            "funql": "answer(capital(loc_2(stateid('california'))))"
        },
        "question": {
            "en": "what is the capital of california",
            "de": "wie lautet die hauptstadt von california",
            "el": "ποια είναι η πρωτεύουσα της california",
            "fa": "مرکز کالیفرنیا کجاست ؟",
            "id": "apa ibukota california ?",
            "sv": "vilken är huvudstaden i kalifornien ?",
            "th": "เมืองหลวง ของ รัฐ แคลิฟอร์เนีย ชื่อ อะไร",
            "zh": "加利福尼亚 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"colorado\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(colorado))))",
            "lambda": "(capital:<s,c> colorado:s)",
            "funql": "answer(capital(loc_2(stateid('colorado'))))"
        },
        "question": {
            "en": "what is the capital of colorado",
            "de": "welches ist die hauptstadt von colorado",
            "el": "ποια είναι η πρωτεύουσα του colorado",
            "fa": "مرکز کلرادو کجاست ؟",
            "id": "apa ibukota colorado ?",
            "sv": "vilken är huvudstaden i colorado ?",
            "th": "รัฐ โคโลราโด มี เมืองหลวง ชื่อ อะไร",
            "zh": "科罗拉多 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"illinois\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(illinois))))",
            "lambda": "(capital:<s,c> illinois:s)",
            "funql": "answer(capital(loc_2(stateid('illinois'))))"
        },
        "question": {
            "en": "what is the capital of illinois",
            "de": "wie lautet die hauptstadt von illinois",
            "el": "ποια είναι η πρωτεύουσα του illinois",
            "fa": "مرکز ایالت ایلینوی کجاست ؟",
            "id": "apa ibukota illinois ?",
            "sv": "vilken är huvudstaden i illinois ?",
            "th": "เมืองหลวง ของ รัฐ อิลลินอยส์ ชื่อ ว่า อะไร",
            "zh": "伊利诺伊 州 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))",
            "lambda": "(capital:<s,c> iowa:s)",
            "funql": "answer(capital(loc_2(stateid('iowa'))))"
        },
        "question": {
            "en": "what is the capital of iowa",
            "de": "welches ist die hauptstadt von iowa",
            "el": "ποια είναι η πρωτεύουσα της iowa",
            "fa": "مرکز ایالت آیووا کجاست ؟",
            "id": "apa ibukota iowa ?",
            "sv": "vilken är huvudstaden i iowa ?",
            "th": "เมือง หลวง ของ รัฐ ไอโอวา ชื่อ ว่า อะไร",
            "zh": "艾奥瓦 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"massachusetts\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(massachusetts))))",
            "lambda": "(capital:<s,c> massachusetts:s)",
            "funql": "answer(capital(loc_2(stateid('massachusetts'))))"
        },
        "question": {
            "en": "what is the capital of massachusetts",
            "de": "wie lautet die hauptstadt von massachusetts",
            "el": "ποια είναι η πρωτεύουσα της massachusetts",
            "fa": "مرکز ایالت ماساچوست کجاست ؟",
            "id": "apa ibukota massachusetts ?",
            "sv": "vilken är huvudstaden i massachusetts ?",
            "th": "เมืองหลวง ของ รัฐ แมสซาชูเซ็ตต์ ชื่อ อะไร",
            "zh": "马萨诸塞 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"new jersey\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid('new jersey'))))",
            "lambda": "(capital:<s,c> new_jersey:s)",
            "funql": "answer(capital(loc_2(stateid('new jersey'))))"
        },
        "question": {
            "en": "what is the capital of new jersey",
            "de": "wie lautet die hauptstadt von new jersey",
            "el": "ποια είναι η πρωτεύουσα του new jersey",
            "fa": "مرکز ایالت نیوجرسی کجاست ؟",
            "id": "apa ibukota new jersey ?",
            "sv": "vilken är huvudstaden i new jersey ?",
            "th": "เมืองหลวง ของ รัฐ นิวเจอร์ซี ชื่อ ว่า อะไร",
            "zh": "新泽西 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"new york\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid('new york'))))",
            "lambda": "(capital:<s,c> new_york:s)",
            "funql": "answer(capital(loc_2(stateid('new york'))))"
        },
        "question": {
            "en": "what is the capital of new york",
            "de": "welches ist die hauptstadt von new york",
            "el": "ποια είναι η πρωτεύουσα της new york",
            "fa": "مرکز ایالت نیویوک کجاست ؟",
            "id": "apa ibukota new york ?",
            "sv": "vilken är huvudstaden i new york ?",
            "th": "เมืองหลวง ของ รัฐ นิวยอร์ค ชื่อ อะไร",
            "zh": "纽约 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"north dakota\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid('north dakota'))))",
            "lambda": "(capital:<s,c> north_dakota:s)",
            "funql": "answer(capital(loc_2(stateid('north dakota'))))"
        },
        "question": {
            "en": "what is the capital of north dakota",
            "de": "wie lautet die hauptstadt von north dakota",
            "el": "ποια είναι η πρωτεύουσα της north dakota",
            "fa": "مرکز ایالت داکوتای شمالی کجاست ؟",
            "id": "apa ibukota north dakota ?",
            "sv": "vilken är huvudstaden i north dakota ?",
            "th": "เมืองหลวง ของ รัฐ นอร์ธดาโกตา ชื่อ ว่า อะไร",
            "zh": "北达科他 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"ohio\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(ohio))))",
            "lambda": "(capital:<s,c> ohio:s)",
            "funql": "answer(capital(loc_2(stateid('ohio'))))"
        },
        "question": {
            "en": "what is the capital of ohio",
            "de": "wie lautet die hauptstadt von ohio",
            "el": "ποια είναι η πρωτεύουσα του ohio",
            "fa": "مرکز ایالت اوهایو کجاست ؟",
            "id": "apa ibukota ohio ?",
            "sv": "vilken är huvudstaden i ohio ?",
            "th": "รัฐ โอไฮโอ มี เมืองหลวง ชื่อ อะไร",
            "zh": "俄亥俄 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"florida\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(florida)),state(B)))",
            "lambda": "(capital:<s,c> florida:s)",
            "funql": "answer(capital(loc_2(state(stateid('florida')))))"
        },
        "question": {
            "en": "what is the capital of the florida state",
            "de": "wie lautet die hauptstadt von florida state",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας florida",
            "fa": "مرکز ایالت فلوریدا کجاست ؟",
            "id": "apa ibukota negara bagian florida ?",
            "sv": "vilken är huvudstaden i staten florida ?",
            "th": "เมืองหลวง ของ รัฐ ฟลอริดา ชื่อ อะไร",
            "zh": "佛罗里达 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.BORDER WHERE T2.STATE_NAME = \"missouri\"",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(missouri))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 missouri:s) (capital:<s,<c,t>> $1 $0))))))",
            "funql": "answer(capital(loc_2(state(next_to_2(stateid('missouri'))))))"
        },
        "question": {
            "en": "what are the capitals of states that border missouri",
            "de": "wie lauten die hauptstaedte der staaten welche an missouri grenzen",
            "el": "ποιες είναι οι πρωτεύουσες των πολιτειών που συνορεύουν με το missouri",
            "fa": "مراکز ایالت های همجوار میسوری کدامند ؟",
            "id": "apa ibukota negara-negara bagian yang berbatasan dengan missouri ?",
            "sv": "vilka är huvudstäderna i de stater som gränsar till missouri ?",
            "th": "รัฐ ที่ ล้อมรอบ รัฐ มิสซูรี มี เมืองหลวง ชื่อ อะไร บ้าง",
            "zh": "与 密苏里 接壤 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(city(A),loc(A,B),state(B),traverse(C,B),const(C,riverid(mississippi))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(city(loc_2(state(traverse_1(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what are the cities in states through which the mississippi runs",
            "de": "wie lauten die staedte in den staaten durch welchder mississippi fluss verlaeuft",
            "el": "ποιες είναι οι πόλεις στις πολιτείες τις οποίες διασχίζει ο mississippi",
            "fa": "شهرهای ایالت هایی که میسیسپی از آنها میگذرد کدامند ؟",
            "id": "apa kota-kota di negara-negara bagian yang dilalui mississippi ?",
            "sv": "vilka är städerna i de stater genom vilka mississippifloden löper ?",
            "th": "รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี เมือง อะไร บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 的 城市 有 哪些"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME IN ( SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1) )",
            "prolog": "answer(A,(city(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (place:<p,t> $2)) (lambda $2:e (elevation:<lo,i> $2))) $1)))))))",
            "funql": "answer(city(loc_2(state(loc_1(highest(place(all)))))))"
        },
        "question": {
            "en": "what are the cities of the state with the highest point",
            "de": "welches sind die staedte des staates mit der hoechsten erhebung",
            "el": "ποιες είναι οι πόλεις της πολιτείας με το ψηλότερο σημείο",
            "fa": "شهر های ایالتی که بیشترین نقاط مرتفع را دارد کدامند ؟",
            "id": "apa kota-kota di negara bagian dengan titik tertinggi ?",
            "sv": "vilka är städerna i staten med den högsta punkten ?",
            "th": "รัฐ ที่ มี จุด สูง สุด มี เมือง อะไร บ้าง",
            "zh": "最高 点 所在 州 有 什么 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (place:<p,t> $0)) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(state(all)))))"
        },
        "question": {
            "en": "what are the highest points of all the states",
            "de": "wie lauten die hoechsten punkte aller staaten",
            "el": "ποια είναι τα ψηλότερα σημεία όλων των πολιτειών",
            "fa": "بلندترین نقطه در میان همه ایالت ها کدام است ؟",
            "id": "apa saja titik tertinggi dari semua negara bagian ?",
            "sv": "vilka är de högsta punkterna i alla stater ?",
            "th": "จุด สูง สุด ของ แต่ละ รัฐ มี อะไร บ้าง",
            "zh": "所有 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"alabama\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(alabama))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 alabama:s)))",
            "funql": "answer(major(city(loc_2(stateid('alabama')))))"
        },
        "question": {
            "en": "what are the major cities in alabama",
            "de": "welches sind die grossen staedte in alabama",
            "el": "ποιες είναι οι κύριες πόλεις στην alabama",
            "fa": "شهر های مجاور آلاباما کدامند ؟",
            "id": "apa kota-kota besar di alabama ?",
            "sv": "vilka är de stora städerna i alabama ?",
            "th": "เมือง หลัก ของ รัฐ อลาบามา มี อะไร บ้าง",
            "zh": "阿拉巴马 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(alaska))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 alaska:s)))",
            "funql": "answer(major(city(loc_2(stateid('alaska')))))"
        },
        "question": {
            "en": "what are the major cities in alaska",
            "de": "wie lauten die wichtigsten staedte in alaska",
            "el": "ποιες είναι οι κύριες πόλεις στην alaska",
            "fa": "شهرهای مجاور آلاسکا کدامند ؟",
            "id": "apa kota-kota besar di alaska ?",
            "sv": "vilka är de stora städerna i alaska ?",
            "th": "เมือง หลัก ของ รัฐ อลาสกา มี อะไร บ้าง",
            "zh": "阿拉斯加 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"new york\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new york'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 new_york:s)))",
            "funql": "answer(major(city(loc_2(stateid('new york')))))"
        },
        "question": {
            "en": "what are the major cities in new york",
            "de": "welches sind grosse staedte in new york",
            "el": "ποιες είναι οι κύριες πόλεις στη new york",
            "fa": "شهره های عمده نیویورک کدامند ؟",
            "id": "apa kota-kota besar di new york ?",
            "sv": "vilka är de stora städerna i new york ?",
            "th": "รัฐ นิวยอร์ค มี เมือง เอก อะไร บ้าง",
            "zh": "纽约 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"california\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),state(B),const(B,stateid(california))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 california:s)))",
            "funql": "answer(major(city(loc_2(state(stateid('california'))))))"
        },
        "question": {
            "en": "what are the major cities in the state of california",
            "de": "wie lauten die wichtigsten staedte in california",
            "el": "ποιες είναι οι κύριες πόλεις στην πολιτεία της california",
            "fa": "شهرهای عمده ایالت کالیفرنیا کدامند ؟",
            "id": "apa kota-kota besar di negara bagian california ?",
            "sv": "vilka är de stora städerna i delstaten kalifornien ?",
            "th": "เมือง เอก ของ รัฐ แคลิฟอร์เนีย มี อะไร บ้าง",
            "zh": "美国 加利福尼亚 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"vermont\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(vermont))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 vermont:s)))",
            "funql": "answer(major(city(loc_2(stateid('vermont')))))"
        },
        "question": {
            "en": "what are the major cities in vermont",
            "de": "welches sind grosse staedte in vermont",
            "el": "ποιες είναι οι κύριες πόλεις στο vermont",
            "fa": "شهرهای عمده ورمونت کدامند ؟",
            "id": "apa kota-kota besar di vermont ?",
            "sv": "vilka är de stora städerna i vermont ?",
            "th": "เมืองหลัก ของ รัฐ เวอร์มอนต์ มี อะไร บ้าง",
            "zh": "佛蒙特 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"pennsylvania\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(pennsylvania))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 pennsylvania:s)))",
            "funql": "answer(major(city(loc_2(stateid('pennsylvania')))))"
        },
        "question": {
            "en": "what major cities are located in pennsylvania",
            "de": "welche grossen staedte gibt es in pennsylvania",
            "el": "ποιες κύριε πόλεις βρίσκονται στην pennsylvania",
            "fa": "چه شهرهای عمده ای در پنسیلوانیا واقع شده اند ؟",
            "id": "apa kota-kota besar yang terletak di pennsylvania ?",
            "sv": "vilka stora städer ligger i pennsylvania ?",
            "th": "มี เมือง หลัก ใด บ้าง ที่ ตั้ง อยู่ ใน รัฐ เพนซิลเวเนีย",
            "zh": "有 哪些 主要 城市 位于 宾夕法尼亚 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH > 750 AND RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),state(B),traverse(C,B),const(C,riverid(mississippi))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(major(city(loc_2(state(traverse_1(riverid('mississippi')))))))"
        },
        "question": {
            "en": "what are the major cities in states through which the mississippi runs",
            "de": "welches sind grosse staedte in den staaten durch die der mississippi fliesst",
            "el": "ποιες είναι οι κύριες πόλεις στις πολιτείεςτις οποίες διατρέχει ο mississippi",
            "fa": "شهرهای عمده ایالت هایی که میسیسیپی از آنها میگذرد کدامند ؟",
            "id": "apa kota-kota besar di negara-negara bagian yang dilalui mississippi ?",
            "sv": "vilka är de stora städerna i de stater genom vilka mississippifloden löper ?",
            "th": "รัฐ ต่างๆ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี เมือง หลัก อะไร บ้าง",
            "zh": "密西西比 河 贯穿 的 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(major(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what are the major cities in the usa",
            "de": "wie lauten die wichtigen staedte der usa",
            "el": "ποιες είναι οι κύριες πόλεις στις ηπα",
            "fa": "شهرهای عمده ایالات متحده کدامند ؟",
            "id": "apa kota-kota besar di amerika serikat ?",
            "sv": "vilka är de stora städerna i usa ?",
            "th": "เมือง เอก ของ อเมริกา มี อะไรบ้าง",
            "zh": "在 美国 有 什么 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE",
            "prolog": "answer(A,(density(B,A),state(B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (density:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(density_1(state(all)))"
        },
        "question": {
            "en": "what are the population densities of each us state",
            "de": "welches sind die bevoelkerungsdichten der us staaten",
            "el": "ποιες είναι οι πυκνότητες πληθυσμού καθεμίας από τις πολιτείες των ηπα",
            "fa": "تمرکز جمعیت همه ایالت های آمریکا را به من بگو .",
            "id": "berapa kepadatan penduduk masing-masing negara bagian as ?",
            "sv": "vad är befolkningstätheten i varje stat i usa ?",
            "th": "รัฐ แต่ละ รัฐ มี ความ หนาแน่น ของ ประชากร เท่าไหร่ บ้าง",
            "zh": "美国 各 州 的 人口 密度 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what are the populations of the states through which the mississippi river runs",
            "de": "wie gross ist die bevoelkerungszahl der staaten durch die der mississippi fliesst",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi",
            "fa": "جمعیت های همه شهرهای عمده تگزاس را به من بگو .",
            "id": "berapa populasi negara bagian yang dilalui sungai mississippi ?",
            "sv": "vad är folkmängden i de stater genom vilka mississippifloden rinner ?",
            "th": "รัฐ แต่ละ รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าใด บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(riverid('mississippi')))))"
        },
        "question": {
            "en": "what are the populations of states through which the mississippi runs",
            "de": "was sind die bevoelkerungen der staaten durch deren den mississippi fluss fliesst",
            "el": "ποιοι είναι οι πληθυσμού των πολιτειών τις οποίες διασχίζει ο mississippi",
            "fa": "جمعیت های همه ایالت های عمده ای که میسیسیپی از آنها میگذرد را به من بگو .",
            "id": "berapa populasi negara-negara bagian yang dilalui mississippi ?",
            "sv": "vad är folkmängden i de stater som mississippifloden löper genom ?",
            "th": "รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าใด",
            "zh": "密西西比 河 所 贯穿 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.POPULATION FROM STATE AS T1 JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.BORDER WHERE T2.STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),state(B),next_to(B,C),const(C,stateid(texas))))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(next_to_2(stateid('texas')))))"
        },
        "question": {
            "en": "what are the populations of states which border texas",
            "de": "wie gross sind die bevoelkerungen der staaten welche an texas grenzen",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών που συνορεύουν με το texas",
            "fa": "جمعیت های همه ایالت های عمده مجاور تگزاس را به من بگو .",
            "id": "berapa populasi negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vad är folkmängden i de stater som gränsar texas ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส มี ประชากร เท่าไหร่ บ้าง",
            "zh": "与 德 州 接壤 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(texas))))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (major:<lo,t> $1) (loc:<lo,<lo,t>> $1 texas:s) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(major(city(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what are the populations of the major cities of texas",
            "de": "welches sind die einwohnerzahlen der grossen staedte in texas",
            "el": "ποιοι είναι οι πληθυσμοί των κύριων πόλεων του texas",
            "fa": "جمعیت های همه شهرهای عمده تگزاس را به من بگو .",
            "id": "berapa populasi kota-kota besar texas ?",
            "sv": "vad är folkmängden i de stora städerna i texas ?",
            "th": "เมือง หลัก ของ รัฐ เท็กซัส มี ประชากร เท่าไร บ้าง",
            "zh": "德克萨斯 州 的 主要 城市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(city(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (city:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(all))))"
        },
        "question": {
            "en": "what city has the most people",
            "de": "welche stadt hat die meisten leute",
            "el": "ποια πόλη έχει τους περισσότερους κατοίκους",
            "fa": "کدام شهر بیشترین جمعیت را دارد ؟",
            "id": "apa kota yang memiliki jumlah orang terbanyak ?",
            "sv": "vilken stad har flest människor ?",
            "th": "เมือง ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 城市 拥有 最多 的 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(population(A,B),city(A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (city:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(all))))"
        },
        "question": {
            "en": "what is the most populous city",
            "de": "wie lautet die stadt mit der groessten bevoelkerung",
            "el": "ποια είναι η πιο πολυπληθής πόλη",
            "fa": "پرجمعیت ترین شهر چه نام دارد ؟",
            "id": "apa kota terpadat ?",
            "sv": "vilken är den folkrikaste staden ?",
            "th": "เมือง ใด มี ประชากร มาก ที่สุด",
            "zh": "人口 最多 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T2.LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),loc(C,B),lowest(C,place(C))))",
            "lambda": "(capital:<s,c> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (place:<p,t> $1)) (lambda $1:e (elevation:<lo,i> $1))) $0) (state:<s,t> $0)))))",
            "funql": "answer(capital(loc_2(state(loc_1(lowest(place(all)))))))"
        },
        "question": {
            "en": "what is capital of the state with the lowest point",
            "de": "welches ist die hauptstadt des staates mit dem tiefstgelegenen punkt",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας με το χαμηλότερο σημείο",
            "fa": "مرکز ایالتی که کم ارتفاع ترین نقاط را داراست کجاست ؟",
            "id": "apa ibukota negara bagian dengan titik terendah ?",
            "sv": "vilken är huvudstaden i delstaten med den lägsta punkten ?",
            "th": "เมืองหลวง ของ รัฐ ที่ มี จุด ต่ำ สุด ชื่อ ว่า อะไร",
            "zh": "最低 点 所在 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT T2.CITY_NAME FROM RIVER AS T1 JOIN CITY AS T2 ON T1.TRAVERSE = T2.STATE_NAME WHERE T2.POPULATION = ( SELECT T2.POPULATION FROM RIVER AS T1 JOIN CITY AS T2 ON T1.TRAVERSE = T2.STATE_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),state(B),loc(C,B),river(C))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (river:<r,t> $2) (loc:<lo,<lo,t>> $2 $1))))))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(state(loc_1(river(all)))))))"
        },
        "question": {
            "en": "what is the biggest american city in a state with a river",
            "de": "wie lautet die groesste amerikanische stadt in einem staat mit einem fluss",
            "el": "ποια είναι η μεγαλύτερη αμερικανική πόλη σε πολιτεία με ποτάμι",
            "fa": "بزگترین شهر آمریکایی که در ایالتی که در آن رودخانه ای وجود دارد واقع شده است کدام است ؟",
            "id": "apa kota amerika terbesar di negara bagian yang memiliki sungai ?",
            "sv": "vilken är den största amerikanska staden i en stat med en flod ?",
            "th": "เมือง ใด เป็น เมือง ที่ ใหญ่ ที่สุด ใน รัฐ ที่ มี แม่น้ำ ด้วย",
            "zh": "在 美国 所有 有 河流 的 州 里 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (capital:<c,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(capital(city(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the biggest capital city in the us",
            "de": "welches ist die groesste hauptstadt in den usa",
            "el": "ποια είναι η μεγαλύτερη πρωτεύουσα πόλη στις us",
            "fa": "بزرگترین مرکز استان در ایالت متحده کدام است ؟",
            "id": "apa ibukota terbesar di as ?",
            "sv": "vilken är den största huvudstaden i usa ?",
            "th": "เมืองหลวง ใด เป็น เมืองหลวง ที่ ใหญ่ ที่สุด ใน อเมริกา",
            "zh": "美国 最大 的 首府 城市 是 哪个 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(capital(A),city(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (capital:<c,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(capital(city(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the largest capital city in the usa",
            "de": "wie lautet die groesste hauptstadt in den usa",
            "el": "ποια είναι η μεγαλύτερη πρωτεύουσα πόλη στις ηπα",
            "fa": "بزرگترین مرکز ایالت در ایالات متحده کجاست ؟",
            "id": "apa ibukota terbesar di amerika serikat ?",
            "sv": "vilken är den största huvudstaden i usa ?",
            "th": "เมืองหลวง ใด ใหญ่ ที่สุด ใน สหรัฐ",
            "zh": "美国 最大 的 首府 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN CITY AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T2.CITY_NAME = \"durham\"",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),loc(C,B),city(C),const(C,cityid(durham,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (city:<c,t> $2) (named:<e,<n,t>> $2 durham:n) (loc:<lo,<lo,t>> $2 $1)))) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(capital(loc_2(state(loc_1(city(cityid('durham', _)))))))"
        },
        "question": {
            "en": "what is the capital of states that have cities named durham",
            "de": "wie lauten die hauptstadte der staaten welche staedte mit dem namen durham haben",
            "el": "ποια είναι η πρωτεύουσα των πολιτειών που έχουν πόλεις που ονομάζονται durham",
            "fa": "مرکز ایالت هایی را که شهری به نام دورهام دارند را نام ببر .",
            "id": "apa ibukota negara-negara bagian yang memiliki kota bernama durham ?",
            "sv": "vilka är huvudstäderna i staterna som har en stad som heter durham ?",
            "th": "รัฐ ที่ มี เมือง ชื่อ เดอแรม มี เมืองหลวง ชื่อ อะไร",
            "zh": "含有 城市 名为 达勒姆 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),smallest(B,state(B))))",
            "lambda": "(capital:<s,c> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(capital(loc_2(smallest(state(all)))))"
        },
        "question": {
            "en": "what is the capital of the smallest state",
            "de": "welches ist die hauptstadt des kleinsten staates",
            "el": "ποια είναι η πρωτεύουσα της μικρότερης πολιτείας",
            "fa": "مرکز کوچکترین ایالت کجاست ؟",
            "id": "apa ibukota negara bagian terkecil ?",
            "sv": "vilken är huvudstaden i den minsta staten ?",
            "th": "รัฐ ที่ มี ขนาด เล็ก ที่สุด มี เมืองหลวง ชื่อ อะไร",
            "zh": "最小 的 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT CAPITAL FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),largest(C,(state(B),density(B,C)))))",
            "lambda": "(capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0))))",
            "funql": "answer(capital(loc_2(largest_one(density_1(state(all))))))"
        },
        "question": {
            "en": "what is the capital of the state with the largest population density",
            "de": "wie lautet die hauptstadt des staat mit dem groessten bevoelkerungsdichte",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας με την μεγαλύτερη πυκνότητα πληθυσμού",
            "fa": "مرکز ایالتی که بیشترین چگالی جمعیت را دارد کجاست ؟",
            "id": "apa ibukota negara bagian dengan kepadatan penduduk terbesar ?",
            "sv": "vilken är huvudstaden i delstaten med den största befolkningstätheten ?",
            "th": "รัฐ ที่ มี ความ หนาแน่น ของ ประชากร มาก ที่สุด มี เมืองหลวง ชื่อ อะไร",
            "zh": "人口 密度 最大 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),largest(C,(state(B),population(B,C)))))",
            "lambda": "(capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0))))",
            "funql": "answer(capital(loc_2(largest_one(population_1(state(all))))))"
        },
        "question": {
            "en": "what is the capital of the state with the largest population",
            "de": "wie lautet die hauptstadt des staat mit den meisten einwohnern",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας με το μεγαλύτερο πληθυσμό",
            "fa": "مرکز ایالتی که بیشترین جمعیت را دارد کجاست ؟",
            "id": "apa ibukota negara bagian dengan populasi terbesar ?",
            "sv": "vilken är huvudstaden i delstaten med den största befolkningen ?",
            "th": "รัฐ ที่ มี ประชากร มาก ที่สุด มี เมืองหลวง ชื่อ อะไร",
            "zh": "人口 最多 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),largest(C,(state(B),population(B,C)))))",
            "lambda": "(capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0))))",
            "funql": "answer(capital(loc_2(largest_one(population_1(state(all))))))"
        },
        "question": {
            "en": "what is the capital of the state with the most inhabitants",
            "de": "wie lautet die hauptstadt des staat mit der groessten bevoelkerung",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας με τους περισσότερους κατοίκους",
            "fa": "مرکز ایالتی که بیشترین ساکنین را دارد کجاست ؟",
            "id": "apa ibukota negara bagian dengan jumlah penduduk terbesar ?",
            "sv": "vilken är huvudstaden i delstaten med flest invånare ?",
            "th": "เมืองหลวง ใด มี ประชากร มาก ที่สุด",
            "zh": "居民 数 最多 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) )",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),loc(C,B),longest(C,(river(C)))))",
            "lambda": "(capital:<s,c> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))))",
            "funql": "answer(capital(loc_2(state(loc_1(longest(river(all)))))))"
        },
        "question": {
            "en": "what is the capital of the state with the longest river",
            "de": "welches ist die hauptstadt des staates mit dem laengsten fluss",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας με το μεγαλύτερο ποτάμι",
            "fa": "مرکز ایالتی که بلندترین رود را دارد کجاست ؟",
            "id": "apa ibukota negara bagian dengan sungai terpanjang ?",
            "sv": "vilken är huvudstaden i delstaten med den längsta floden ?",
            "th": "เมือง หลวง ของ รัฐ ที่ มี แม่น้ำ สาย ที่ ยาว ที่สุด มี ชื่อ ว่า อะไร",
            "zh": "最长 的 河流 的 所在 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( AREA ) FROM STATE",
            "prolog": "answer(A,sum(B,(area(C,B),state(C)),A))",
            "lambda": "(sum:<<e,t>,<<e,i>,i>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(sum(area_1(state(all))))"
        },
        "question": {
            "en": "what is the combined area of all 50 states",
            "de": "wie gross ist die gesamte flaeche aller staaten",
            "el": "πόσο είναι το συνδυαστικό εμβαδό των 50 πολιτειών",
            "fa": "جمعیت همه 50 ایالت با هم چقدر است ؟",
            "id": "berapa luas gabungan dari seluruh 50 negara bagian ?",
            "sv": "vad är den kombinerade arean av alla 50 stater ?",
            "th": "เมื่อ นำ รัฐ ทั้ง 50 รัฐ มา รวม กัน จะ มี พื้นที่ เท่าไหร่",
            "zh": "所有 50 个 州 的 总 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE STATE_NAME = \"new york\"",
            "prolog": "answer(A,(density(B,A),const(B,stateid('new york'))))",
            "lambda": "(density:<lo,i> new_york:s)",
            "funql": "answer(density_1(stateid('new york')))"
        },
        "question": {
            "en": "what is the density of the new york",
            "de": "welches ist die dichte von new york",
            "el": "ποια είναι η πυκνότητας της new york",
            "fa": "چگالی جمعیتی نیویورک چقدر است ؟",
            "id": "berapa kepadatan new york ?",
            "sv": "vad är tätheten av new york ?",
            "th": "รัฐ นิวยอร์ค มี ความ หนาแน่น ประชากร เท่าใด",
            "zh": "纽约 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE STATE_NAME = \"maine\"",
            "prolog": "answer(A,(density(B,A),const(B,stateid(maine))))",
            "lambda": "(density:<lo,i> maine:s)",
            "funql": "answer(density_1(stateid('maine')))"
        },
        "question": {
            "en": "what is the population density of maine",
            "de": "welches ist die bevoelkerungsdichte von maine",
            "el": "ποια είναι η πυκνότητα πληθυσμού του maine",
            "fa": "چگالی جمعیت مین چقدر است ؟",
            "id": "berapa kepadatan penduduk dari maine ?",
            "sv": "vad är befolkningstätheten i maine ?",
            "th": "รัฐ เมน มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "缅因 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT MOUNTAIN_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(mountain(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest mountain in the us",
            "de": "welches ist der hoechste berg der vereinigten staaten",
            "el": "ποιο είναι το ψηλότερο βουνό στις us",
            "fa": "بلندترین کوه در ایالات متحده کجاست ؟",
            "id": "apa gunung tertinggi di as ?",
            "sv": "vad är det högsta berget i usa ?",
            "th": "ภูเขา ไหน สูง ที่สุด ใน สหรัฐอเมริกา",
            "zh": "美国 最高 的 山峰 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT MOUNTAIN_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(mountain(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest mountain in us",
            "de": "welches ist der hoechste berg in den usa",
            "el": "ποιο είναι το ψηλότερο βουνό στις ηπα",
            "fa": "بلندترین کوه در ایالات متحده چیست ؟",
            "id": "apa gunung tertinggi di as ?",
            "sv": "vad är usa : s högsta berg ?",
            "th": "ภูเขา ที่ สูง ที่สุด ใน สหรัฐอเมริกา มี ชื่อ ว่า อะไร",
            "zh": "美国 最高 的 山峰 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"austin\" )",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid(austin,_)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (capital2:<s,<c,t>> $1 austin_tx:c))))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(state(loc_1(capital(cityid('austin', _))))))))"
        },
        "question": {
            "en": "what is the highest point in the state with capital austin",
            "de": "wie lautet der hoechste punkt in dem staat mit der hauptstadt austin",
            "el": "ποιο είναι το ψηλότερο σημείο στην πολιτεία με πρωτεύουσα το austin",
            "fa": "بلندترین نقطه در ایالتی مرکز آن آسیتن است کجاست ؟",
            "id": "apa titik tertinggi di negara bagian dengan ibukota austin ?",
            "sv": "vad är den högsta punkten i delstaten med huvudstaden austin ?",
            "th": "จุด สูง สุด ของ รัฐ ที่ มี เมืองหลวง ชื่อ ออสติน อยู่ ที่ใด",
            "zh": "奥斯汀 首府 所在 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest point in the usa",
            "de": "wie lautet der hoechste punkt in den usa",
            "el": "ποιο είναι το ψηλότερο σημείο στις ηπα",
            "fa": "بلندترین نقطه در ایالات متحده کجاست ؟",
            "id": "apa titik tertinggi di amerika serikat ?",
            "sv": "vad är den högsta punkten i usa ?",
            "th": "จุด สูง สุด ของ อเมริกา อยู่ ตรงไหน",
            "zh": "美国 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest point of the usa",
            "de": "wie lautet die hoechste erhebung der usa",
            "el": "ποιο είναι το ψηλότερο σημείο στις ηπα",
            "fa": "بلندترین نقطه در ایالتی که بیشترین چگالی جمعیت را دارد کجاست ؟",
            "id": "apa titik tertinggi dari amerika serikat ?",
            "sv": "vad är den högsta punkten i usa ?",
            "th": "จุด สูง สุด ของ อเมริกา อยู่ ที่ไหน",
            "zh": "美国 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1) )",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),density(B,C))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (density:<lo,i> $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(smallest_one(density_1(state(all)))))))"
        },
        "question": {
            "en": "what is the highest point of the state with the smallest population density",
            "de": "wie lautet der hoechste punkt des staat mit der gerinsten bevoelkerungsdichte",
            "el": "ποιο είναι το ψηλότερο σημείο της πολιτείας με τη μικρότερη πυκνότητα πληθυσμού",
            "fa": "بلندترین نقطه در ایالتی که بیشترین چگالی جمعیت را دارد کجاست ؟",
            "id": "apa titik tertinggi negara bagian dengan kepadatan penduduk terkecil ?",
            "sv": "vad är den högsta punkten i den stat med den lägsta befolkningstätheten ?",
            "th": "รัฐ ที่ มี ความ หนาแน่น ของ ประชากร น้อย ที่สุด มี จุด สูง สุด อยู่ ที่ ใด",
            "zh": "人口 密度 最小 的 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" ) AND AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" ) ORDER BY AREA LIMIT 1) ) ORDER BY POPULATION DESC LIMIT 1",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),smallest(B,(state(B),const(C,riverid(mississippi)),traverse(C,B))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1))) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(smallest(state(traverse_1(riverid('mississippi'))))))))"
        },
        "question": {
            "en": "what is the largest city in smallest state through which the mississippi runs",
            "de": "welches ist die groesste stadt im kleinsten staat durch den der mississippi fliesst",
            "el": "ποια είναι η μεγαλύτερη πόλη στη μικρότερη πολιτεία την οποία διασχίζει ο mississippi",
            "fa": "بزرگترین شهر در کوچکترین ایالتی که میسیسیپی از آن میگذرد کجاست ؟",
            "id": "apa kota terbesar di negara bagian terkecil yang dilalui mississippi ?",
            "sv": "vad är den största staden i den minsta staten genom vilken mississippi rinner ?",
            "th": "เมือง ใหญ่ ที่สุด ใน รัฐ ที่ เล็ก ที่สุด ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน ชื่อ ว่า อะไร",
            "zh": "密西西比 河 贯穿 的 最小 州 的 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))"
        },
        "question": {
            "en": "what is the largest city in the smallest state in the usa",
            "de": "welches ist die groesste stadt des kleinsten staates in den usa",
            "el": "ποια είναι η μεγαλύτερη πόλη στη μικρότερη πολιτεία στις ηπα",
            "fa": "بزرگترین شهر در کوچکترین ایالت آمریکا کجاست ؟",
            "id": "apa kota terbesar di negara bagian terkecil di amerika serikat ?",
            "sv": "vad är den största staden i den minsta staten i usa ?",
            "th": "เมือง ใด เป็น เมือง ใหญ่ ที่สุด ใน รัฐ ที่ เล็ก ที่สุด ใน อเมริกา",
            "zh": "美国 最小 的 州 里 最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"arkansas\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"arkansas\" )",
            "prolog": "answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(arkansas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 arkansas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(next_to_2(stateid('arkansas')))))"
        },
        "question": {
            "en": "what is the largest state bordering arkansas",
            "de": "welches ist der groesste an arkansas grenzende staat",
            "el": "ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με το arkansas",
            "fa": "بزرگترین ایالتی همجوار آرکانزاس کجاست ؟",
            "id": "apa negara bagian terbesar yang berbatasan dengan arkansas ?",
            "sv": "vilken är den största delstaten som gränsar till arkansas ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด ที่ อยู่ ติด กับ รัฐ อาร์คันซอ",
            "zh": "与 阿肯色 州 接壤 的 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(next_to_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the largest state that borders texas",
            "de": "welcher der an texas grenzenden staaten ist der groesste",
            "el": "ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με το texas",
            "fa": "بزرگترین ایالتی همجوار تگزاس کجاست ؟",
            "id": "apa negara bagian terbesar yang berbatasan dengan texas ?",
            "sv": "vilken är den största delstaten som gränsar till texas ?",
            "th": "รัฐ ใด เป็น รัฐ ใหญ่ ที่สุด ที่ ติด กับ รัฐ เท็กซัส",
            "zh": "与 得克萨斯 州 接壤 的 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = ( SELECT RIVER_NAME FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias0 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))",
            "lambda": "(len:<r,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(len(most(river(traverse_2(state(all))))))"
        },
        "question": {
            "en": "what is the length of the river that flows through the most states",
            "de": "wie lang ist der fluss welcher durch die misten staaten fliesst",
            "el": "ποιο είναι του ποταμού που διασχίζει τις περισσότερες πολιτείες",
            "fa": "طول رودخانه ای که از بیشتر ایالات میگذرد چقدر است ؟",
            "id": "berapa panjang dari sungai yang mengalir melalui paling banyak negara bagian ?",
            "sv": "vad är längden på floden som flyter genom flest antal stater ?",
            "th": "แม่น้ำ ที่ ไหล ผ่าน จำนวน รัฐ มาก ที่สุด มี ความ ยาว เท่าไหร่",
            "zh": "流经 最多 州 的 河流 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = ( SELECT RIVER_NAME FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias0 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))",
            "lambda": "(len:<r,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(len(most(river(traverse_2(state(all))))))"
        },
        "question": {
            "en": "what is the length of the river that runs through the most states",
            "de": "was ist die laenge des flusses der durch die groessten anzahl staaten fliesst",
            "el": "ποιο είναι το μήκος του ποταμού που διασχίζει τις περισσότερες πολιτείες",
            "fa": "طول رودخانه ای که از بیشتر ایالات میگذرد چقدر است ؟",
            "id": "berapa panjang dari sungai yang melalui paling banyak negara bagian ?",
            "sv": "vad är längden på floden som rinner genom flest stater ?",
            "th": "แม่น้ำ สาย ที่ ไหล ผ่าน จำนวน รัฐ มาก ที่สุด มี ความ ยาว เท่าไหร่",
            "zh": "贯穿 最多 州 的 河流 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) ) ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),largest(B,state(B)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(largest(state(all))))))"
        },
        "question": {
            "en": "what is the longest river in the largest state",
            "de": "welches ist der laengste fluss im groessten staat",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στη μεγαλύτερη πολιτεία",
            "fa": "بلندترین رودخانه بزرگترین ایالت کدامست ؟",
            "id": "apa sungai terpanjang di negara bagian terbesar ?",
            "sv": "vad är den längsta floden i den största staten ?",
            "th": "แม่น้ำ สาย ใด เป็น แม่น้ำ สาย ที่ ยาว ที่สุด ใน รัฐ ที่ ใหญ่ ที่สุด",
            "zh": "在 最大 的 州 最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"nebraska\" ) ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"nebraska\" )",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(nebraska)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 nebraska:s) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(state(next_to_2(stateid('nebraska')))))))"
        },
        "question": {
            "en": "what is the longest river in the states that border nebraska",
            "de": "wie lautet der laengste fluss in den staaten welcher an nebraska grenzt",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στις πολιτείες που συνορεύουν με τη nebraska",
            "fa": "بلندترین رودخانه در ایالت مجاور نبراسکا کدامست ؟",
            "id": "apa sungai terpanjang di negara-negara bagian yang berbatasan dengan nebraska ?",
            "sv": "vilka är de längsta floderna i de stater som gränsar till nebraska ?",
            "th": "แม่น้ำ ใด ยาว ที่สุด ใน บรรดา รัฐ ที่ อยู่ ติด กับ รัฐ เนบราสกา",
            "zh": "与 内布拉斯加 州 接壤 的 最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"indiana\" ) ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"indiana\" )",
            "prolog": "answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(indiana)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 indiana:s) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(traverse_2(state(next_to_2(stateid('indiana')))))))"
        },
        "question": {
            "en": "what is the longest river that flows through a state that borders indiana",
            "de": "wie lautet der laengste fluss welcher durch einen staat verlaeuft der an indiana grenzt",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι που διασχίζει μια πολιτεία που συνορεύει με την indiana",
            "fa": "نام بلندترین رودخانه ای که از ایالتی میگذرد که همجوار ایندیاناست چیست ؟",
            "id": "apa sungai terpanjang yang mengalir melalui negara bagian yang berbatasan dengan indiana ?",
            "sv": "vilken är den längsta floden som rinner genom en stat som gränsar till indiana ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด ที่ ไหล ผ่าน รัฐ ที่ ติด กับ รัฐ อินเดียนา คือ แม่น้ำ ใด",
            "zh": "流经 与 印第安纳 州 接壤 的 州 的 最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = ( SELECT STATE_NAME FROM CITY WHERE POPULATION > 150000 GROUP BY STATE_NAME ORDER BY COUNT( CITY_NAME ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),most(B,C,(state(B),loc(C,B),major(C),city(C))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (major:<lo,t> $2) (city:<c,t> $2) (loc:<lo,<lo,t>> $2 $1))))))))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(most(state(loc_1(major(city(all)))))))))"
        },
        "question": {
            "en": "what is the longest river in the state with the most major cities",
            "de": "welches ist der laengste fluss im staat mit der groessten anzahl grosser staedte",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στην πολιτεία με τις περισσότερες κύριες πόλεις",
            "fa": "بلندترین رودخانه در ایالتی که بیشترین شهرها در آن واقع شده اند کدامست ؟",
            "id": "apa sungai terpanjang di negara bagian dengan jumlah kota besar terbanyak ?",
            "sv": "vad är den längsta floden i staten med flest stora städer ?",
            "th": "รัฐ ที่ มี เมือง หลัก มาก ที่สุด มี แม่น้ำ สาย ยาว ที่สุด ชื่อ อะไร",
            "zh": "在 主要 城市 最多 的 州 里 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"arkansas\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(arkansas)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 arkansas:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('arkansas')))))"
        },
        "question": {
            "en": "what is the lowest point in arkansas",
            "de": "welches ist der tiefstgelegene punkt in arkansas",
            "el": "ποιο είναι το χαμηλότερο σημείο στο arkansas",
            "fa": "کمترین ارتفاع در آرکانزاس چقدر است ؟",
            "id": "apa titik terendah di arkansas ?",
            "sv": "vad är den lägsta punkten i arkansas ?",
            "th": "จุด ต่ำ สุด ของ รัฐ อาร์คันซอ คือ จุด ไหน",
            "zh": "阿肯色 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"massachusetts\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(massachusetts)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 massachusetts:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('massachusetts')))))"
        },
        "question": {
            "en": "what is the lowest point in massachusetts",
            "de": "wie lautet der niedrigste punkt in massachusetts",
            "el": "ποιο είναι το χαμηλότερο σημείο στη massachusetts",
            "fa": "پایین ترین نقطه در ماساچوست کدامست ؟",
            "id": "apa titik terendah di massachusetts ?",
            "sv": "vad är den lägsta punkten i massachusetts ?",
            "th": "จุด ต่ำ สุด ของ รัฐ แมสซาชูเซ็ตต์ อยู่ ที่ไหน",
            "zh": "马萨诸塞 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"mississippi\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(mississippi)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 mississippi:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('mississippi')))))"
        },
        "question": {
            "en": "what is the lowest point in mississippi",
            "de": "welches ist der tiefste punkt in mississippi",
            "el": "ποιο είναι το χαμηλότερο σημείο στο mississippi",
            "fa": "پایین ترین نقطه در می سی سی پی کدامست ؟",
            "id": "apa titik terendah di mississippi ?",
            "sv": "vad är den lägsta punkten i mississippi ?",
            "th": "จุด ต่ำ สุด ของ รัฐ มิสซิสซิปปี อยู่ ที่ไหน",
            "zh": "密西西比 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"nebraska\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(nebraska)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 nebraska:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('nebraska')))))"
        },
        "question": {
            "en": "what is the lowest point in nebraska in meters",
            "de": "wie hoch ist die niedrigste erhebung von nebraska",
            "el": "ποιο είναι το χαμηλότερο σημείο στη nebraska σε μέτρα",
            "fa": "ارتفاع کم ارتفاع ترین نقطه نبراسکا به متر چیست ؟",
            "id": "apa titik terendah di nebraska dalam meter ?",
            "sv": "vad är den lägsta punkten i nebraska i meter ?",
            "th": "จุด ต่ำ สุด ของ รัฐ เนบราสกา คือ จุด ใด เมื่อ วัด ใน หน่วย เมตร",
            "zh": "内布拉斯加 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(california)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 california:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(state(stateid('california'))))))"
        },
        "question": {
            "en": "what is the lowest point in the state of california",
            "de": "wie lautet der niedrigste punkt in dem staat california",
            "el": "ποιο είναι το χαμηλότερο σημείο στην πολιτεία της california",
            "fa": "نام پایینترین نقطه در ایالت کالیفرنیا چیست ؟",
            "id": "apa titik terendah di negara bagian california ?",
            "sv": "vad är den lägsta punkten i delstaten kalifornien ?",
            "th": "จุด ต่ำ สุด ของ รัฐ แคลิฟอร์เนีย คือ จุด ไหน",
            "zh": "加利福尼亚 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"maryland\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(maryland)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 maryland:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('maryland')))))"
        },
        "question": {
            "en": "where is the lowest point in maryland",
            "de": "wie lautet der niedrigste punkt in maryland",
            "el": "που είναι το χαμηλότερο σημείο στο maryland",
            "fa": "پایین ترین نقطه در مریلند کجا است ؟",
            "id": "di mana titik terendah di maryland ?",
            "sv": "vart ligger den lägsta punkten i maryland ?",
            "th": "จุด ต่ำ สุด ของ รัฐ แมรีแลนด์ อยู่ ที่ไหน",
            "zh": "哪里 是 马里兰 州 的 最低 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the lowest point in usa",
            "de": "wie lautet der niedrigste punkt in den usa",
            "el": "ποιο είναι το χαμηλότερο σημείο στις usa",
            "fa": "نام پایینترین نقطه در ایالات متحده چیست ؟",
            "id": "apa titik terendah di amerika serikat ?",
            "sv": "vad är den lägsta punkten i usa ?",
            "th": "ที่ ใด เป็น จุด ต่ำ สุด ของ สหรัฐ",
            "zh": "美国 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"colorado\" ) ORDER BY LOWEST_ELEVATION LIMIT 1",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(colorado)),river(C),traverse(C,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> colorado_river:r $1) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))"
        },
        "question": {
            "en": "what is the lowest point of all states through which the colorado river runs through",
            "de": "welches ist der tiefste punkt aller staaten durch die der fluss colorado fliesst",
            "el": "ποιο είναι το χαμηλότερο σημείο όλων των πολιτειών τις οποίες διασχίζει ο ποταμός colorado",
            "fa": "تمام نقاط کم ارتفاعی را که رودخانه کلرادو از آنها عبور میکند نام ببر .",
            "id": "apa titik terendah dari semua negara bagian yang dilalui sungai colorado ?",
            "sv": "vad är de lägsta punkterna i alla stater genom vilka coloradofloden rinner genom ?",
            "th": "รัฐ ที่ แม่น้ำ โคโลราโด ไหล ผ่าน มี จุด ต่ำ สุด ที่ใด บ้าง",
            "zh": "科罗拉多 河 贯穿 的 所有 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(density(A,B),state(A),loc(A,C),const(C,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the most dense state in the usa",
            "de": "welches ist der dichteste staat in den usa",
            "el": "ποια είναι η πιο πυκνή πολιτεία στις ηπα",
            "fa": "پر تراکم ترین نقطه از نظر جمعیت در ایالات متحده کجاست ؟",
            "id": "apa negara bagian paling padat di amerika serikat ?",
            "sv": "vilken är mest tätbefolkade staten i usa ?",
            "th": "รัฐ ใด ใน อเมริกา ที่ มี ประชากร หนาแน่น ที่สุด",
            "zh": "美国 最 密集 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the highest population density",
            "de": "welcher staat hat die groesste dichte",
            "el": "ποια πολιτεία έχει τη ψηλότερη πυκνότητα πληθυσμού",
            "fa": "بیشترین تمرکز جمعیت در کدام ایالت واقع شده است ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk tertinggi ?",
            "sv": "vilken stat har den högsta befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร สูง สุด",
            "zh": "哪个 州 有 最高 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,largest(B,(population(A,B),state(A),const(C,riverid(mississippi)),traverse(C,A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what is the most populous state through which the mississippi runs",
            "de": "welcher staat durch den der mississippi fliesst hat die groesste bevoelkerung",
            "el": "ποια είναι η πιο πολυπληθής πολιτεία που διασχίζει ο mississippi",
            "fa": "پرجمعیت ترین ایالتی که میسیسیپی از آن میگذرد کدام است ؟",
            "id": "apa negara bagian terpadat yang dilalui mississippi ?",
            "sv": "vilken är den folkrikaste staten genom vilken mississippi rinner ?",
            "th": "รัฐ ใด มี แม่น้ำ มิสซิสซิปปี ไหล ผ่าน และ มี ประชากร มาก ที่สุด",
            "zh": "密西西比 河 贯穿 的 人口 最多 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,(density(B,A),largest(B,state(B))))",
            "lambda": "(density:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(density_1(largest(state(all))))"
        },
        "question": {
            "en": "what is the population density of the largest state",
            "de": "welches ist die bevoelkerungsdichte des groessten staates",
            "el": "ποια είναι η πυκνότητα πληθυσμού της μεγαλύτερης πολιτείας",
            "fa": "چگالی جمعیت بزرگترین ایالت چقدر است ؟",
            "id": "berapa kepadatan penduduk dari negara bagian terbesar ?",
            "sv": "vad är befolkningstätheten i den största staten ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "最大 的 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,(population(B,A),largest(B,(city(B),loc(B,C),largest(D,(state(C),area(C,D)))))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (area:<lo,i> $1)))))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(population_1(largest(city(loc_2(largest_one(area_1(state(all))))))))"
        },
        "question": {
            "en": "what is the population of the largest city in the state with the largest area",
            "de": "was ist die bevoelkerungszahl der groessten stadt des staates mit der groessten flaechenausdehnung",
            "el": "ποιος είναι ο πληθυσμός της μεγαλύτερης πόλης στην πολιτεία με τη μεγαλύτερη επιφάνεια",
            "fa": "جمعیت بزرگترین شهر ایالت دارای بیشترین وسعت چقدر است ؟",
            "id": "berapa populasi kota terbesar di negara bagian dengan luas wilayah terbesar ?",
            "sv": "vad är folkmängden i den största staden i staten med den största arean ?",
            "th": "เมือง ใหญ่ ที่สุด ของ รัฐ ที่ มี พื้นที่ มาก ที่สุด มี ประชากร เท่าไหร่",
            "zh": "面积 最大 的 州 的 最大 的 城市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,(smallest(B,state(B)),population(B,A)))",
            "lambda": "(population:<lo,i> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(smallest(population_1(state(all))))"
        },
        "question": {
            "en": "what is the population of the smallest state",
            "de": "welches ist die einwohnerzahl des kleinsten staates",
            "el": "ποιος είναι ο πληθυσμός της μικρότερης πολιτείας",
            "fa": "جمعیت کوچکترین ایالت چقدر است ؟",
            "id": "berapa populasi negara bagian terkecil ?",
            "sv": "vad är folkmängden i den minsta staten ?",
            "th": "รัฐ ที่ เล็ก ที่สุด มี ประชากร กี่ คน",
            "zh": "最小 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT( 1 ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT BORDER , COUNT( 1 ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY BORDER ) ORDER BY DERIVED_FIELDalias0 DESC LIMIT 1) )",
            "prolog": "answer(A,(population(B,A),most(B,C,(state(B),next_to(B,C),state(C)))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(population_1(most(state(next_to_2(state(all))))))"
        },
        "question": {
            "en": "what is the population of the state that borders the most states",
            "de": "wie lautet die bevoelkerung des staat welche an die meisten staaten grenzt",
            "el": "ποιος είναι ο πληθυσμός της πολιτείας που συνορεύει με τις περισσότερες πολιτείες",
            "fa": "جمعیت ایالتی که با اکثر ایالات هم مرز است چقدر است ؟",
            "id": "berapa populasi dari negara bagian yang berbatasan dengan paling banyak negara bagian ?",
            "sv": "vad är folkmängden i den stat som gränsar till flest stater ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ ที่ ติด กับ รัฐ อื่น มาก ที่สุด มี ประชากร กี่ คน",
            "zh": "和 最多 的 州 接壤 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0))))",
            "funql": "answer(population_1(largest_one(density_1(state(all)))))"
        },
        "question": {
            "en": "what is the population of the state with the highest population density",
            "de": "wie viele leute wohnen in den staat mit der groessten bevoelkerungsdichte",
            "el": "ποιος είναι ο πληθυσμός της πολιτείας με την ψηλότερη πυκνότητα πληθυσμού",
            "fa": "جمعیت ایالتی که بیشترین تراکم جمعیت را دارد چقدر است ؟",
            "id": "berapa populasi dari negara bagian dengan kepadatan penduduk tertinggi ?",
            "sv": "vad är folkmängden i staten med den högsta befolkningstätheten ?",
            "th": "รัฐ ที่ มี ความ หนาแน่น ของ ประชากร มาก ที่สุด มี ประชากร กี่ คน",
            "zh": "人口 密度 最高 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the smallest city in the usa",
            "de": "wie lautet die kleinste stadt in den us",
            "el": "ποια είναι η μικρότερη πόλη στις ηπα",
            "fa": "نام کوچکترین شهرستان در ایالات متحده آمریکا چیست ؟",
            "id": "apa kota terkecil di amerika serikat ?",
            "sv": "vad är den minsta staden i usa ?",
            "th": "เมือง ที่ เล็ก ที่สุด ใน สหรัฐ คือ เมือง ใด",
            "zh": "在 美国 最小 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the smallest city in the us",
            "de": "welches ist die kleinste stadt der usa",
            "el": "ποια είναι η μικρότερη πόλη στις ηπα",
            "fa": "نام کوچکترین شهرستان در ایالات متحده چیست ؟",
            "id": "apa kota terkecil di as ?",
            "sv": "vilken är den minsta staden i usa ?",
            "th": "เมือง ที่ เล็ก ที่สุด ใน สหรัฐ คือ เมือง ใด",
            "zh": "在 美国 最小 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( DISTINCT BORDER ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT STATE_NAME , COUNT( DISTINCT BORDER ) DERIVED_FIELDalias1 FROM BORDER_INFO GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) ) ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,smallest(A,most(A,B,(state(A),next_to(A,B),state(B)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (in:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (next_to:<lo,<lo,t>> $2 $1)))))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(most(state(next_to_2(state(all))))))"
        },
        "question": {
            "en": "what is the smallest state that borders the most states",
            "de": "welches ist der kleinste staat der am meisten staaten angrenzt",
            "el": "ποια είναι η μικρότερη πολιτεία που συνορεύει τις περισσότερες πολιτείες",
            "fa": "نام کوچکترین ایالت هم مرز با بیشتر ایالات چیست ؟",
            "id": "apa negara bagian terkecil yang berbatasan dengan paling banyak negara bagian ?",
            "sv": "vilken är det minsta staten som gränsar till flest stater ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ เล็ก ที่สุด และ อยู่ ติด กับ รัฐ อื่น มาก ที่สุด",
            "zh": "与 最多 的 州 接壤 而且 面积 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"wyoming\" ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"wyoming\" )",
            "prolog": "answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(wyoming)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 wyoming:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(next_to_2(stateid('wyoming')))))"
        },
        "question": {
            "en": "what is the smallest state bordering wyoming",
            "de": "wie lautet der kleinste staat welcher an wyoming grenzt",
            "el": "ποια είναι η μικρότερη πολιτεία που συνορεύει με το wyoming",
            "fa": "کوچکترین ایالت هم مرز وایومینگ کدام است ؟ .",
            "id": "apa negara bagian terkecil yang berbatasan dengan wyoming ?",
            "sv": "vilken är den minsta staten som gränsar till wyoming ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ เล็ก ที่สุด ที่ อยู่ ติด กับ รัฐ ไวโอมิง",
            "zh": "与 怀俄明 州 接壤 的 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,smallest(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what is the smallest state that the mississippi river runs through",
            "de": "welches ist der kleinste staat durch den der mississippi fliesst",
            "el": "ποια είναι η μικρότερη πολιτεία την οποία διασχίζει ο ποταμός mississippi",
            "fa": "کوچکترین ایالتی که رودخانه می سی سی پی از آن عبور میکند کدام است ؟",
            "id": "apa negara bagian terkecil yang dilalui sungai mississippi ?",
            "sv": "vilken är den minsta staten som mississippifloden rinner genom ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ เล็ก ที่สุด ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน",
            "zh": "密西西比 河 贯穿 的 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),area(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(smallest_one(area_1(state(all))))"
        },
        "question": {
            "en": "what is the state with the smallest area",
            "de": "welcher ist der kleinste staat nach flaeche",
            "el": "ποια είναι η πολιτεία με την μικρότερη επιφάνεια",
            "fa": "ایالتی که کمترین مساحت را دارد کدامست ؟",
            "id": "apa negara bagian dengan luas wilayah terkecil ?",
            "sv": "vilken stat har den minsta arean ?",
            "th": "รัฐ ใด มี พื้นที่ น้อย ที่สุด",
            "zh": "最小 的 面积 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,smallest(A,state(A)))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(all)))"
        },
        "question": {
            "en": "which is the smallest state",
            "de": "wie lautet der kleinste staat",
            "el": "ποια είναι η μικρότερη πολιτεία",
            "fa": "کوچکترین ایالت کدام است ؟",
            "id": "apa negara bagian terkecil ?",
            "sv": "vilken är den minsta staten ?",
            "th": "รัฐ ใด มี ขนาด เล็ก ที่สุด",
            "zh": "哪个 是 最小 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,smallest(A,state(A)))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(all)))"
        },
        "question": {
            "en": "which state is the smallest",
            "de": "welcher staat ist am kleinsten",
            "el": "ποια πολιτεία είναι η μικρότερη",
            "fa": "کوچکترین ایالت کدام است ؟",
            "id": "apa negara bagian terkecil ?",
            "sv": "vilken stat är den minsta ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ มี ขนาด เล็ก ที่สุด",
            "zh": "哪个 州 是 最小 的"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( LENGTH ) FROM ( SELECT DISTINCT RIVER_NAME , LENGTH FROM RIVER )",
            "prolog": "answer(A,sum(B,(len(C,B),river(C)),A))",
            "lambda": "(sum:<<e,t>,<<e,i>,i>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(sum(len(river(all))))"
        },
        "question": {
            "en": "what is the total length of all rivers in the usa",
            "de": "welches ist die gesamtlaenge aller flüsse in den usa",
            "el": "ποιο είναι το συνολικό μήκος όλων των ποταμών στις ηπα",
            "fa": "مجموع طول تمام رودخانه ها در ایالات متحده آمریکا چقدر است ؟",
            "id": "berapa panjang total dari semua sungai di amerika serikat ?",
            "sv": "vad är den totala längden av alla floder i usa ?",
            "th": "แม่น้ำ ทุก สาย ของ อเมริกา มี ความ ยาว รวม กัน เท่าไหร่",
            "zh": "美国 所有 的 河流 的 总 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT TRAVERSE ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(river(A),traverse(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(river(traverse_2(state(all)))))"
        },
        "question": {
            "en": "what river flows through the most states",
            "de": "welcher fluss fliesst durch die groesste anzahl an staaten",
            "el": "ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες",
            "fa": "چه رودخانه ای از ایالت های بیشتری میگذرد ؟",
            "id": "apa sungai yang mengalir melalui paling banyak negara bagian ?",
            "sv": "vilken flod flyter genom flest stater ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ต่างๆ มาก ที่สุด",
            "zh": "什么 河流 流经 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT TRAVERSE ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(river(A),traverse(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(river(traverse_2(state(all)))))"
        },
        "question": {
            "en": "which river goes through the most states",
            "de": "welcher fluss fliesst durch die meisten staaten",
            "el": "ποιο ποτάμι περνάει από τις περισσότερες πολιτείες",
            "fa": "کدام رودخانه از ایالت های بیشتری عبور میکند ؟",
            "id": "apa sungai yang melewati paling banyak negara bagian ?",
            "sv": "vilken flod går genom flest stater ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน จำนวน รัฐ มาก ที่สุด",
            "zh": "哪个 河流 流经 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT TRAVERSE ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(river(A),traverse(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(river(traverse_2(state(all)))))"
        },
        "question": {
            "en": "which river runs through most states",
            "de": "welcher fluss fliesst durch die meisten staaten",
            "el": "ποιο ποτάμι διατρέχει τις περισσότερες πολιτείες",
            "fa": "کدام رودخانه از ایالت های بیشتری عبور میکند ؟",
            "id": "apa sungai yang melalui paling banyak negara bagian ?",
            "sv": "vilken flod rinner genom flest stater ?",
            "th": "แม่น้ำ สาย ใด ไหล ผ่าน รัฐ มาก ที่สุด",
            "zh": "哪个 河流 贯穿 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT TRAVERSE ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(river(A),traverse(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(river(traverse_2(state(all)))))"
        },
        "question": {
            "en": "which river traverses most states",
            "de": "welcher fluss durchquert die meisten staaten",
            "el": "ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες",
            "fa": "کدام رودخانه از ایالت های بیشتری میگذرد ؟",
            "id": "apa sungai yang melintasi paling banyak negara bagian ?",
            "sv": "vilken flod korsar flest stater ?",
            "th": "แม่น้ำ สาย ใด ไหล ผ่าน รัฐ จำนวน มาก ที่สุด",
            "zh": "哪个 河流 流经 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( 1 ) DERIVED_FIELDalias0 FROM CITY GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 FROM CITY GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),most(B,C,(state(B),loc(C,B),city(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (city:<c,t> $2) (loc:<lo,<lo,t>> $2 $1)))))))))",
            "funql": "answer(river(traverse_2(most(state(loc_1(city(all)))))))"
        },
        "question": {
            "en": "what river runs through the state with the most cities",
            "de": "welcher fluss fliesst durch den staat mit den meisten staedten",
            "el": "ποιο ποτάμι διασχίζει την πολιτεία με τις περισσότερες πόλεις",
            "fa": "چه رودخانه ای از ایالتی با بیشترین شهرها میگذرد ؟",
            "id": "apa sungai yang melalui negara bagian dengan paling banyak kota ?",
            "sv": "vilken flod rinner genom staten med flest städer ?",
            "th": "แม่น้ำ สาย ใด บ้าง ที่ ไหล ผ่าน รัฐ ที่ มี จำนวน เมือง มาก ที่สุด",
            "zh": "哪条 河流 贯穿 城市 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(river(loc_2(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what rivers are in states that border texas",
            "de": "welche flüsse gibt es in an texas grenzende staaten",
            "el": "ποια ποτάμια είναι στις πολιτείες που συνορεύουν με το texas",
            "fa": "رودخانه های ایالت های هم مرز تگزاس کدامند ؟",
            "id": "apa saja sungai-sungai di negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka floder är i stater som gränsar texas ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส มี แม่น้ำ อะไร บ้าง",
            "zh": "与 得克萨斯 州 接壤 的 州 里 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT( 1 ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT BORDER , COUNT( 1 ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY BORDER ) ORDER BY DERIVED_FIELDalias0 DESC LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (next_to:<lo,<lo,t>> $1 $2)))))))))",
            "funql": "answer(river(traverse_2(most(state(next_to_2(state(all)))))))"
        },
        "question": {
            "en": "what rivers traverses the state which borders the most states",
            "de": "welcher fluss verlauft durch den staat welcher an die meisten staaten grenzt",
            "el": "ποια ποτάμια διασχίζουν την πολιτεία που συνορεύει με τις περισσότερες πολιτείες",
            "fa": "کدام رودخانه ای از ایالتی که با بیشترین ایالات مرز مشترک دارد میگذرد ؟",
            "id": "apa saja sungai-sungai yang melintasi negara bagian yang berbatasan dengan paling banyak negara bagian ?",
            "sv": "vilka floder korsar staten som gränsar till flest stater ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ อื่น มาก ที่สุด",
            "zh": "什么 河流 流经 与 其它 州 接壤 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT( 1 ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT BORDER , COUNT( 1 ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY BORDER ) ORDER BY DERIVED_FIELDalias0 DESC LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (next_to:<lo,<lo,t>> $1 $2)))))))))",
            "funql": "answer(river(traverse_2(most(state(next_to_2(state(all)))))))"
        },
        "question": {
            "en": "what river traverses the state which borders the most states",
            "de": "welcher fluss verlaeuft durch den staat welcher an die meisten staaten grenzt",
            "el": "ποιο ποτάμι διασχίζει την πολιτεία που συνορεύει με τις περισσότερες πολιτείες",
            "fa": "کدام رودخانه از ایالتی عبور میکند که با ایالتهای بیشتری همجوار است ؟",
            "id": "apa sungai yang melintasi negara bagian yang berbatasan dengan paling banyak negara bagian ?",
            "sv": "vilken flod korsar den stat som gränsar till flest stater ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ อื่น มาก ที่สุด",
            "zh": "什么 河流 流经 与 最多 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"nevada\" ) ORDER BY POPULATION DESC LIMIT 1",
            "prolog": "answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(nevada)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 nevada:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(next_to_2(stateid('nevada'))))))"
        },
        "question": {
            "en": "what state bordering nevada has the largest population",
            "de": "welcher an nevada grenzende staat hat die groesste bevoelkerungszahl",
            "el": "ποια πολιτεία που συνορεύει με τη nevada έχει τον μεγαλύτερο πληθυσμό",
            "fa": "کدام ایالت همجوار نوادا دارای بیشترین جمعیت است ؟",
            "id": "apa negara bagian yang berbatasan nevada yang memiliki populasi terbesar ?",
            "sv": "vilken stat som gränsar till nevada har den största befolkningen ?",
            "th": "ใน บรรดา รัฐ ที่ อยู่ ติด กับ รัฐ เนวาดา รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "与 内华达 州 接壤 的 哪个 州 具有 最多 的 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"pennsylvania\" ) ORDER BY POPULATION DESC LIMIT 1",
            "prolog": "answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(pennsylvania)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 pennsylvania:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(next_to_2(stateid('pennsylvania'))))))"
        },
        "question": {
            "en": "which of the states bordering pennsylvania has the largest population",
            "de": "welcher der staaten welche an pennsylvania grenzt hat die groesste bevoelkerung",
            "el": "ποια από τις πολιτείες που συνορεύουν με την pennsylvania έχει το μεγαλύτερο πληθυσμό",
            "fa": "کدامیک از ایالت هایی که با پنسلیوانیا همجوار هستند دارای جمعیت بیشتری میباشند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan pennsylvania yang memiliki populasi terbesar ?",
            "sv": "vilken av de stater som gränsar till pennsylvania har den största befolkningen ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ เพ็นซิลเวเนีย รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "与 宾夕法尼亚 州 接壤 的 州 里 哪个 有 最多 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"colorado\" ) ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),state(C),const(D,riverid(colorado)),river(D),traverse(D,C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (loc:<lo,<lo,t>> $1 $2) (loc:<lo,<lo,t>> colorado_river:r $2)))))) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))))"
        },
        "question": {
            "en": "what state contains the highest point of those the colorado river traverses",
            "de": "welcher der staaten durch die der colorado fliesst hat die hoechste erhebung",
            "el": "ποια πολιτεία από αυτές που διασχίζει ο ποταμός colorado περιέχει το ψηλότερο σημείο",
            "fa": "کدام ایالت بلندترین نقطه ای که رود کلرادو از آن میگذرد را دربردارد ؟",
            "id": "apa negara bagian yang memiliki titik tertinggi di mana sungai colorado melintas ?",
            "sv": "vilken stat har den högsta punkten av de som coloradofloden korsar ?",
            "th": "ใน บรรดา รัฐ ที่ แม่น้ำ โคโลราโด ไหล ผ่าน รัฐ ใด มี จุด ที่ สูง ที่สุด",
            "zh": "美国 哪个 州 包含 科罗拉多 河 穿越 的 最高 点 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),largest(B,capital(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (capital:<c,t> $1)) (lambda $1:e (size:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(largest(capital(all)))))"
        },
        "question": {
            "en": "what state has the largest capital",
            "de": "welcher staat hat die groesste hauptstadt",
            "el": "ποια πολιτεία έχει τη μεγαλύτερη πρωτεύουσα",
            "fa": "کدام ایالت بزرگترین مرکز ایالت را دارد ؟",
            "id": "apa negara bagian yang memiliki ibukota terbesar ?",
            "sv": "vilken stat har den största huvudstaden ?",
            "th": "รัฐ ใด มี เมืองหลวง ใหญ่ ที่สุด",
            "zh": "哪个 州 拥有 最大 的 首府"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(C,(state(C),loc(B,C),largest(B,(capital(A,B),city(B),state(A)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (capital2:<s,<c,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (capital:<c,t> $1)) (lambda $1:e (size:<lo,i> $1))))))",
            "funql": "answer(state(loc_1(largest(city(capital_1(state(all)))))))"
        },
        "question": {
            "en": "which state 's capital city is the largest",
            "de": "welcher staat hat die groesste hauptstadt",
            "el": "ποιας πολιτείας η πρωτεύουσα πόλη είναι η μεγαλύτερη",
            "fa": "مرکز کدام ایالت بزرگتر است ؟",
            "id": "apa negara bagian dengan ibukota terbesar ?",
            "sv": "vilken stats huvudstad är den största ?",
            "th": "รัฐ ใด มี เมืองหลวง ใหญ่ ที่สุด",
            "zh": "哪个 州 的 首府 城市 是 最大 的"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT DISTINCT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),longest(B,river(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(loc_1(longest(river(all)))))"
        },
        "question": {
            "en": "what state has the longest river",
            "de": "welches sind die staaten welche vom laengsten fluss durchflossen werden",
            "el": "ποια πολιτεία έχει το μακρύτερο ποτάμι",
            "fa": "کدام ایالت دارای بلند ترین رودخانه است ؟",
            "id": "apa negara bagian yang memiliki sungai terpanjang ?",
            "sv": "vilken stat har den längsta flod ?",
            "th": "รัฐ ใด ที่ มี แม่น้ำ ที่ ยาว ที่สุด ไหล ผ่าน",
            "zh": "哪个 州 拥有 最长 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION > 150000 GROUP BY STATE_NAME ORDER BY COUNT( 1 ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),loc(B,A),major(B),city(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (major:<lo,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(loc_1(major(city(all))))))"
        },
        "question": {
            "en": "what state has the most major cities",
            "de": "welcher staat hat die meisten wichtigsten staedte",
            "el": "ποια πολιτεία έχει τις περισσότερες κύριες πόλεις",
            "fa": "کدام ایالت بیشترین تعداد شهرهای عمده را دارد ؟",
            "id": "apa negara bagian yang memiliki paling banyak kota besar ?",
            "sv": "vilken stat har flest stora städer ?",
            "th": "รัฐ ใด มี เมือง เอก มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION > 150000 GROUP BY STATE_NAME ORDER BY COUNT( 1 ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),loc(B,A),major(B),city(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (city:<c,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(loc_1(major(city(all))))))"
        },
        "question": {
            "en": "which state has the most major cities",
            "de": "welcher staat hat die meisten wichtigsten staedte",
            "el": "ποια πολιτεία έχει τις περισσότερες κύριες πόλεις",
            "fa": "بیشتر شهرهای عمده در کدام ایالت واقع شده اند ؟",
            "id": "apa negara bagian yang memiliki paling banyak kota-kota besar ?",
            "sv": "vilken stat har flest stora städer ?",
            "th": "รัฐ ใด มี เมือง เอก มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY GROUP BY STATE_NAME ORDER BY SUM( POPULATION ) LIMIT 1",
            "prolog": "answer(A,smallest(B,(state(A),population(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(smallest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what state has the smallest urban population",
            "de": "welches ist der bevoelkerungsaermste staat",
            "el": "ποια πολιτεία έχει το μικρότερο αστικό πληθυσμό",
            "fa": "کدام ایالت کوچکترین جمعیت شهری را دارد ؟",
            "id": "apa negara bagian yang memiliki penduduk perkotaan terkecil ?",
            "sv": "vilken stat har den minsta stadsbefolkningen ?",
            "th": "รัฐ ใด มี ประชากร อาศัย อยู่ ใน เมือง น้อย ที่สุด",
            "zh": "哪个 州 具有 最少 的 城镇 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"mississippi\" )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(mississippi))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 mississippi:s) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(state(next_to_2(state(next_to_2(stateid('mississippi'))))))"
        },
        "question": {
            "en": "what states border states that border mississippi",
            "de": "welche staaten grenzen an staaten welche an mississippi grenzen",
            "el": "ποιες πολιτείες συνορεύουν πολιτείες που συνορεύουν με το mississippi",
            "fa": "کدام ایالات همجوار ایالت هایی هستند که با میسیسیپی هم مرز هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan mississippi ?",
            "sv": "vilka stater gränsar till de stater som gränsar till mississippi ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ที่ ติด กับ รัฐ มิสซิสซิปปี",
            "zh": "哪些 州 与 和 密西西比 州 接壤 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"ohio\" )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(ohio)),traverse(C,B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> ohio_river:r $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(state(next_to_2(state(traverse_1(riverid('ohio'))))))"
        },
        "question": {
            "en": "what states border states that the ohio runs through",
            "de": "welche staaten grenzen staaten durch welche der ohio fluss verlaeuft",
            "el": "ποιες πολιτείες συνορεύουν με πολιτείες που διασχίζει ο ohio",
            "fa": "کدام ایالت ها هم مرز ایالت هایی هستند که اوهایو از آنها میگذرد ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang dilalui ohio ?",
            "sv": "vilka stater gränsar till stater som ohio rinner genom ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ที่ แม่น้ำ โอไฮโอ ไหล ผ่าน",
            "zh": "什么 州 和 俄亥俄 河 贯穿 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM BORDER_INFO WHERE BORDER = \"texas\" AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH > 750 )",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(texas)),loc(C,A),major(C),river(C)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(intersection(state(next_to_2(stateid('texas'))), loc_1(major(river(all)))))"
        },
        "question": {
            "en": "what states border texas and have a major river",
            "de": "welche staaten grenzen texas und haben einen wichtigen fluss",
            "el": "ποιες πολιτείες συνορεύουν με το texas και έχουν κύρια ποτάμια",
            "fa": "کدام ایالت ها هم مرز تگزاس هستند و یک رودخانه عمده دارند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan texas dan memiliki sungai besar ?",
            "sv": "vilka stater gränsar till texas och har en stor flod ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ เท็กซัส และ มี แม่น้ำ สาย หลัก",
            "zh": "什么 州 与 得克萨斯 州 接壤 并 有 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),largest(C,(population(B,C),state(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1))))))",
            "funql": "answer(state(next_to_2(largest_one(population_1(state(all))))))"
        },
        "question": {
            "en": "what states border the most populous state",
            "de": "welche staaten grenzen an den bevoelkerungsreichsten staat",
            "el": "ποιες πολιτείες συνορεύουν την πιο πολυπληθή πολιτεία",
            "fa": "کدام ایالت ها همجوار پرجمعیت ترین ایالت هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara bagian yang paling padat penduduknya ?",
            "sv": "vilka stater gränsar till folkrikaste staten ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ที่ มี ประชากร มาก ที่สุด",
            "zh": "什么 州 与 人口 最多 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT( 1 ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT BORDER , COUNT( 1 ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY BORDER ) ORDER BY DERIVED_FIELDalias0 DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (next_to:<lo,<lo,t>> $1 $2)))))))))",
            "funql": "answer(state(next_to_2(most(state(next_to_2(state(all)))))))"
        },
        "question": {
            "en": "what states border the state that borders the most states",
            "de": "welcher staat grenzt dem staat welche an die meisten staaten grenzt",
            "el": "ποιες πολιτείες συνορεύουν με την πολιτεία που συνορεύει με τις περισσότερες πολιτείες",
            "fa": "کدام ایالت ها با ایالتی که با بیشترین ایالتها هم مرز است همجوار است ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara bagian yang berbatasan dengan paling banyak negara bagian ?",
            "sv": "vilka stater gränsar till staten som gränsar till flest stater ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ที่ อยู่ ติด กับ รัฐ อื่น มาก ที่สุด",
            "zh": "哪些 州 和 与 最多 州 接壤 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( 1 ) DERIVED_FIELDalias0 FROM CITY GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 FROM CITY GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),most(B,C,(state(B),loc(C,B),city(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (city:<c,t> $2) (loc:<lo,<lo,t>> $2 $1)))))))))",
            "funql": "answer(state(next_to_2(most(state(loc_1(city(all)))))))"
        },
        "question": {
            "en": "what states border the state with the most cities",
            "de": "welche staaten grenzen dem staat mit den meisten staedten",
            "el": "ποιες πολιτείες συνορεύουν με την πολιτεία με τις περισσότερες πόλεις",
            "fa": "کدام ایالت ها با ایالتی با بیشترین تعداد شهرها هم مرز هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara bagian dengan paling banyak kota ?",
            "sv": "vilka stater gränsar till staten med flest antal städer ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ที่ มี เมือง มาก ที่สุด",
            "zh": "什么 州 和 拥有 最多 城市 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( 1 ) DERIVED_FIELDalias0 FROM CITY WHERE POPULATION > 150000 GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 FROM CITY WHERE POPULATION > 150000 GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),most(B,C,(state(B),loc(C,B),major(C),city(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (major:<lo,t> $2) (city:<c,t> $2) (loc:<lo,<lo,t>> $2 $1)))))))))",
            "funql": "answer(state(next_to_2(most(state(loc_1(major(city(all))))))))"
        },
        "question": {
            "en": "what states border the state with the most major cities",
            "de": "welche staaten grenzen dem staat mit den meisten wichtigsten staedten",
            "el": "ποιες πολιτείες συνορεύουν με την πολιτεία με τις περισσότερες κύριες πόλεις",
            "fa": "کدام ایالت ها با ایالتی با بیشترین تعداد شهرهای عمده همجوار هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara bagian dengan paling banyak kota besar ?",
            "sv": "vilka stater gränsar till staten med flest antal stora städer ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ที่ มี เมือง เอก มาก ที่สุด",
            "zh": "什么 州 和 拥有 最多 主要 城市 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),smallest(C,(state(B),area(B,C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (area:<lo,i> $1))))))",
            "funql": "answer(state(next_to_2(smallest_one(area_1(state(all))))))"
        },
        "question": {
            "en": "what states border the state with the smallest area",
            "de": "welcher staat grenzt an den staat mit der kleinsten flaeche",
            "el": "ποιες πολιτείες συνορεύουν με την πολιτεία με το μικρότερο εμβαδό",
            "fa": "کدام ایالت ها با کوچکترین ایالت همجوار هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara bagian dengan luas wilayah terkecil ?",
            "sv": "vilka stater gränsar till staten med minsta arean ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ที่ มี พื้นที่ เล็ก ที่สุด",
            "zh": "什么 州 和 面积 最小 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),smallest(C,(state(B),area(B,C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (area:<lo,i> $1))))))",
            "funql": "answer(state(next_to_2(smallest_one(area_1(state(all))))))"
        },
        "question": {
            "en": "which states border the state with the smallest area",
            "de": "welche staaten grenzen an den staat mit der kleinsten flaechenausdehnung",
            "el": "ποιες πολιτείες συνορεύουν με την πολιτεία με τη μικρότερη επιφάνεια",
            "fa": "کدام ایالت ها هم مرز کوچکترین ایالت هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara bagian dengan luas wilayah terkecil ?",
            "sv": "vilka stater gränsar till staten med minsta arean ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ที่ มี พื้นที่ น้อย ที่สุด",
            "zh": "哪些 州 与 面积 最小 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT TRAVERSE FROM RIVER WHERE LENGTH > 750",
            "prolog": "answer(A,(state(A),loc(B,A),major(B),river(B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (>:<i,<i,t>> (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0)))) 0:i)))",
            "funql": "answer(state(loc_1(major(river(all)))))"
        },
        "question": {
            "en": "what states contain at least one major rivers",
            "de": "durch welche staaten fliesst mindestens einer der hauptflüsse",
            "el": "ποιες πολιτείες περιέχουν τουλάχιστον ένα κύριο ποτάμι",
            "fa": "کدام ایالت ها حداقل یک رودخانه عمده دارند ؟",
            "id": "apa negara-negara bagian yang memiliki setidaknya satu sungai besar ?",
            "sv": "vilka stater har minst en stor flod ?",
            "th": "รัฐ ใด มี แม่น้ำ สาย หลัก อย่างน้อย หนึ่ง สาย",
            "zh": "哪些 州 包含 至少 一个 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM MOUNTAIN",
            "prolog": "answer(A,(loc(B,A),mountain(B)))",
            "lambda": "(lambda $0:e (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (mountain:<m,t> $1) (loc:<lo,<lo,t>> $1 $0)))))",
            "funql": "answer(loc_1(mountain(all)))"
        },
        "question": {
            "en": "where are mountains",
            "de": "wo gibt es berge",
            "el": "που υπάρχουν βουνά",
            "fa": "کوهستان ها در کجا واقع شده اند ؟",
            "id": "di mana gunung-gunung ?",
            "sv": "vart finns det berg ?",
            "th": "ภูเขา อยู่ ตรงไหน บ้าง",
            "zh": "山 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (mountain:<m,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (elevation:<lo,i> $1)))",
            "funql": "answer(highest(mountain(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "where is the highest mountain of the united states",
            "de": "wo liegt der hoechste berg der usa",
            "el": "που είναι το ψηλότερο βουνό στις ηνωμένες πολιτείες",
            "fa": "بلندترین کوه ایالات متحده کجاست ؟",
            "id": "di mana gunung tertinggi di amerika serikat ?",
            "sv": "vart ligger det högsta berget i usa ?",
            "th": "ภูเขา ใด เป็น ภูเขา ที่ สูง ที่สุด ใน สหรัฐอเมริกา",
            "zh": "美国 最高 的 山峰 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,(loc(B,A),smallest(B,city(B))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (city:<c,t> $1)) (lambda $1:e (size:<lo,i> $1))) $0))",
            "funql": "answer(loc_1(smallest(city(all))))"
        },
        "question": {
            "en": "where is the smallest city",
            "de": "wo liegt die kleinste stadt",
            "el": "ποια είναι η μικρότερη πόλη",
            "fa": "کوچکترین شهرستان در کجا واقع شده است ؟",
            "id": "di mana kota terkecil ?",
            "sv": "vart är den minsta staden ?",
            "th": "เมือง ใด เป็น เมือง ที่ เล็ก ที่สุด",
            "zh": "最小 的 城市 是 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) )",
            "prolog": "answer(A,(density(B,A),state(B),longest(C,(river(C),loc(C,D),const(D,countryid(usa)))),traverse(C,B)))",
            "lambda": "(density:<lo,i> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (loc:<lo,<lo,t>> $1 usa:co) (river:<r,t> $1))) (lambda $1:e (size:<lo,i> $1))) $0) (state:<s,t> $0)))))",
            "funql": "answer(density_1(state(traverse_1(longest(river(loc_2(countryid('usa'))))))))"
        },
        "question": {
            "en": "which is the density of the state that the largest river in the united states runs through",
            "de": "welches ist die dichte des staates durch den der groesste fluss der usa fliesst",
            "el": "ποια είναι η πυκνότητα της πολιτείας την οποία διασχίζει το μεγαλύτερο ποτάμι στις ηνωμένες πολιτείες",
            "fa": "تراکم جمعیت ایالتی که بزرگترین رود در ایالات متحده از آن عبور میکند چقدر است ؟",
            "id": "berapa kepadatan penduduk negara bagian yang dilalui sungai terbesar di amerika serikat ?",
            "sv": "vad är tätheten av den stat som den största floden i usa rinner genom ?",
            "th": "รัฐ ที่ แม่น้ำ สาย ที่ ใหญ่ ที่สุด ใน สหรัฐอเมริกา ไหล ผ่าน มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "被 美国 的 最大 河流 贯穿 的 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT MOUNTAIN_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN WHERE STATE_NAME != \"alaska\" ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(mountain(A),not((loc(A,B),const(B,stateid(alaska)))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (not:<t,t> (loc:<lo,<lo,t>> $0 alaska:s)))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(exclude(mountain(all),  loc_2(stateid('alaska')))))"
        },
        "question": {
            "en": "which is the highest peak not in alaska",
            "de": "wie lautet der hoechste gipfel der nicht in alaska liegt",
            "el": "ποια είναι η ψηλότερη κορυφή εκτός της alaska",
            "fa": "بزرگترین قله ای که در آلاسکا واقع نشده است کدام است ؟",
            "id": "apa puncak tertinggi yang tidak berada di alaska ?",
            "sv": "vilken är den högsta toppen som inte är i alaska ?",
            "th": "ยอดเขา ใด เป็น ยอดเขา ที่ สูง ที่สุด ที่ ไม่ได้ อยู่ ใน รัฐ อลาสกา",
            "zh": "哪个 是 不 在 阿拉斯加 州 的 最高 山峰"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE RIVER_NAME NOT IN ( SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\" )",
            "prolog": "answer(A,(river(A),not((traverse(A,B),const(B,stateid(texas))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (not:<t,t> (loc:<lo,<lo,t>> $0 texas:s))))",
            "funql": "answer(exclude(river(all), traverse_2(stateid('texas'))))"
        },
        "question": {
            "en": "which rivers do not run through texas",
            "de": "welche flüsse fliessen nicht durch texas",
            "el": "ποια ποτάμια δεν διασχίζουν το texas",
            "fa": "کدام رودخانه ها از تگزاس نمیگذرند ؟",
            "id": "apa sungai-sungai yang tidak melalui texas ?",
            "sv": "vilka floder rinner inte genom texas ?",
            "th": "แม่น้ำ สาย ใด ไม่ได้ ไหล ผ่าน รัฐ เท็กซัส",
            "zh": "哪些 河流 不 贯穿 得克萨斯"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE COUNTRY_NAME != \"usa\"",
            "prolog": "answer(A,(river(A),not((traverse(A,B),const(B,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (not:<t,t> (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(exclude(river(all), traverse_2(countryid('usa'))))"
        },
        "question": {
            "en": "which rivers do not run through usa",
            "de": "welche flüsse fliessen durch die usa",
            "el": "ποια ποτάμια δε διασχίζουν τις usa",
            "fa": "کدام روخانه ها از ایالات متحده آمریکا نمیگذرند ؟",
            "id": "apa sungai-sungai yang tidak melalui amerika serikat ?",
            "sv": "vilka floder rinner inte genom usa ?",
            "th": "แม่น้ำ สาย ใด ไม่ได้ ไหล ผ่าน ประเทศ สหรัฐอเมริกา",
            "zh": "哪些 河流 不 贯穿 美国"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"austin\" ) )",
            "prolog": "answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(austin,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (capital2:<s,<c,t>> $2 austin_tx:c))))) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('austin', _)))))))))"
        },
        "question": {
            "en": "which rivers run through states that border the state with the capital austin",
            "de": "welcher fluss verlaeuft durch staaten welche dem staat mit der hauptstadt austin grenzen",
            "el": "ποια ποτάμια διασχίζουν την πολιτεία που συνορεύει με την πολιτεία με την πρωτεύουσα austin",
            "fa": "کدام رودخانه ها از ایالت هایی میگذرند که با استانی با مرکزیت آستین همجوار است ؟",
            "id": "apa sungai-sungai yang mengalir melalui negara-negara bagian yang berbatasan dengan negara bagian dengan ibukota austin ?",
            "sv": "vilka floder rinner genom stater som gränsar till staten med huvudstaden austin ?",
            "th": "แม่น้ำ สาย ใด ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ ที่ มี เมืองหลวง ชื่อ ออสติน",
            "zh": "哪些 河流 贯穿 与 以 奥斯汀 为 首府 的 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( 1 ) DERIVED_FIELDalias0 FROM CITY GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 FROM CITY GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),fewest(B,C,(state(B),loc(C,B),city(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (city:<c,t> $2) (loc:<lo,<lo,t>> $2 $1)))))))))",
            "funql": "answer(river(traverse_2(fewest(state(loc_1(city(all)))))))"
        },
        "question": {
            "en": "which rivers run through states with fewest cities",
            "de": "welche flüsse gehen durch staaten mit am wenigsten staedten",
            "el": "ποια ποτάμια διασχίζουν πολιτείες με τις λιγότερες πόλεις",
            "fa": "کدام رودخانه ها از ایالت هایی که کمترین شهرها را دارند میگذرند ؟",
            "id": "apa sungai-sungai yang mengalir melalui negara-negara bagian dengan paling sedikit kota ?",
            "sv": "vilka floder löper genom stater med minst antal städer ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ที่ มี จำนวน เมือง น้อย ที่สุด",
            "zh": "哪些 河流 贯穿 拥有 最少 城市 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION LIMIT 1)",
            "prolog": "answer(A,smallest(B,(capital(A),population(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (capital:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(smallest_one(population_1(capital(all))))"
        },
        "question": {
            "en": "which state capital has the smallest population",
            "de": "welcher hauptstadt hat die kleinste bevoelkerung",
            "el": "ποια πρωτεύουσα πολιτείας έχει το μικρότερο πληθυσμό",
            "fa": "کدام مرکز ایالت دارای کمترین جمعیت است ؟",
            "id": "apa ibukota negara bagian yang memiliki populasi terkecil ?",
            "sv": "vilken stats hvuudstad har den minsta befolkningen ?",
            "th": "เมืองหลวง ใด มี ประชากร น้อย ที่สุด",
            "zh": "哪个 首府 有 最少 的 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,(place(B)))))",
            "lambda": "(lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (place:<p,t> $0)) (lambda $0:e (elevation:<lo,i> $0))) $1)))",
            "funql": "answer(state(loc_1(highest(place(all)))))"
        },
        "question": {
            "en": "which state has the highest elevation",
            "de": "welche staat hat die hoechste erhoehung",
            "el": "ποια πολιτεία έχει το μεγαλύτερο υψόμετρο",
            "fa": "کدام ایالت بیشترین ارتفاع را داراست ؟",
            "id": "apa negara bagian yang memiliki elevasi tertinggi ?",
            "sv": "vilken stat har den högsta höjden ?",
            "th": "รัฐ ใด มี จุด สูง สุด ของ ประเทศ อยู่",
            "zh": "哪个 州 有 最高 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,place(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (place:<p,t> $1)) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(place(all)))))"
        },
        "question": {
            "en": "which state has the highest point",
            "de": "welcher staat beinhaltet den hoechsten punkt",
            "el": "ποια πολιτεία έχει το ψηλότερο σημείο",
            "fa": "بلندترین نقطه در کدام ایالت واقع شده است ؟",
            "id": "apa negara bagian yang memiliki titik tertinggi ?",
            "sv": "vilken stat har den högsta punkten ?",
            "th": "รัฐ ใด มี ภูเขา ที่ สูง ที่สุด",
            "zh": "哪个 州 有 最高 的 海拔"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),lowest(B,place(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (place:<p,t> $0)) (lambda $0:e (elevation:<lo,i> $0))) $0)))",
            "funql": "answer(state(loc_1(lowest(place(all)))))"
        },
        "question": {
            "en": "which state has the lowest elevation",
            "de": "in welchem staat liegt der tiefste punkt",
            "el": "ποια πολιτεία έχει το χαμηλότερο υψόμετρο",
            "fa": "کدام ایالت کمترین ارتفاع را دارد ؟",
            "id": "apa negara bagian yang memiliki elevasi terendah ?",
            "sv": "vilken stat har den lägsta höjden ?",
            "th": "รัฐ ใด มี ที่สูง ต่ำ ที่สุด",
            "zh": "哪个 州 有 最低 海拔"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"idaho\" ) ORDER BY LOWEST_ELEVATION LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"idaho\" )",
            "prolog": "answer(D,(state(D),loc(B,D),lowest(B,(place(B),state(A),loc(B,A),next_to(A,C),const(C,stateid(idaho))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (loc:<lo,<lo,t>> $1 $2) (next_to:<lo,<lo,t>> $2 idaho:s)))))) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(lowest(place(loc_2(next_to_2(stateid('idaho'))))))))"
        },
        "question": {
            "en": "which state has the lowest point that borders idaho",
            "de": "in welchem stadt liegt der tiefste an idaho grenzende punkt",
            "el": "ποια πολιτεία έχει το χαμηλότερο που συνορεύει με το idaho",
            "fa": "کدام ایالت همجوار اوهایو کمترین جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki titik terendah yang berbatasan dengan idaho ?",
            "sv": "vilken stat har den lägsta punkten som gränsar till idaho ?",
            "th": "รัฐ ใด มี จุด ต่ำ สุด อยู่ ติด กับ รัฐ ไอดาโฮ",
            "zh": "哪个 州 有 与 爱达荷 州 接壤 的 最低 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH > 750 GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(loc_1(major(river(all))))))"
        },
        "question": {
            "en": "which state has the most major rivers",
            "de": "durch welchen staat fliessen am meisten grosse flüsse",
            "el": "ποια πολιτεία έχει τα περισσότερα κύρια ποτάμια",
            "fa": "بیشتر رودهای عمده در کدام ایالت واقع شده اند ؟",
            "id": "apa negara bagian yang memiliki paling banyak sungai-sungai besar ?",
            "sv": "vilken stat har flest stora floder ?",
            "th": "รัฐ ใด มี แม่น้ำ สาย หลัก มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH > 750 GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),major(B),river(B),traverse(B,A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(traverse_1(major(river(all))))))"
        },
        "question": {
            "en": "which state has the most major rivers running through it",
            "de": "welcher staat hat die meisten wichtigen fluesse",
            "el": "ποια πολιτεία έχει τα περισσότερα κύρια ποτάμια που τη διατρέχουν",
            "fa": "بیشتر رودهای عمده از کدام ایالت عبور میکنند ؟",
            "id": "apa negara bagian yang paling banyak dilalui sungai-sungai besar ?",
            "sv": "vilken stat har flest stora floder som rinner genom den ?",
            "th": "รัฐ ใด มี แม่น้ำ สาย หลัก ไหล ผ่าน มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 流经 它的 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY GROUP BY STATE_NAME ORDER BY AVG ( POPULATION ) LIMIT 1",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the smallest average urban population",
            "de": "welcher staat hat die geringste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει το μικρότερο μέσο αστικό πληθυσμό",
            "fa": "کدام دولت است که کوچکترین متوسط جمعیت شهری ؟",
            "id": "apa negara bagian yang memiliki rata-rata penduduk perkotaan terkecil ?",
            "sv": "vilken stat har den minsta genomsnittliga urbana befolkningen ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร ต่ำ ที่สุด",
            "zh": "哪个 州 有 最少 的 平均 城市 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM MOUNTAIN WHERE MOUNTAIN_NAME = \"mckinley\"",
            "prolog": "answer(A,(state(A),const(B,placeid('mount mckinley')),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mount_mckinley:p $0)))",
            "funql": "answer(state(loc_1(placeid('mount mckinley'))))"
        },
        "question": {
            "en": "which state is mount mckinley in",
            "de": "in welchem staat liegt mount mckinley",
            "el": "σε ποια πολιτεία είναι το όρος mckinley",
            "fa": "کوه مونت مک کینلی در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian apakah gunung mckinley berada ?",
            "sv": "vilken stat är mount mckinley i ?",
            "th": "ภูเขา แมคคินลีย์ อยู่ ใน รัฐ ใด",
            "zh": "麦金利 山 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT TRAVERSE FROM RIVER",
            "prolog": "answer(A,(state(A),loc(B,A),river(B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(river(all))))"
        },
        "question": {
            "en": "which states have a river",
            "de": "durch welche staaten fliessen fluesse",
            "el": "ποιες πολιτείες έχουν ποτάμι",
            "fa": "کدام ایالت ها رودخانه دارند ؟",
            "id": "apa negara-negara bagian yang memiliki sungai ?",
            "sv": "vilka stater har en flod ?",
            "th": "รัฐ ใด มี แม่น้ำ บ้าง",
            "zh": "哪些 州 有 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),loc(B,A),river(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(loc_1(river(all)))))"
        },
        "question": {
            "en": "what state has the most rivers",
            "de": "welcher staat hat die meisten fluesse",
            "el": "ποια πολιτεία έχει τα περισσότερα ποτάμια",
            "fa": "کدام ایالت رودهای بیشتری دارد ؟",
            "id": "apa negara bagian yang memiliki paling banyak sungai ?",
            "sv": "vilken stat har flest floder ?",
            "th": "รัฐ ใด มี แม่น้ำ เยอะ ที่สุด",
            "zh": "哪个 州 有 最多 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),loc(B,A),river(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(loc_1(river(all)))))"
        },
        "question": {
            "en": "which state has the most rivers",
            "de": "durch welchen staat fliessen am meisten fluesse",
            "el": "ποια πολιτεία έχει τα περισσότερα ποτάμια",
            "fa": "کدام ایالت بیشترین تعداد رودها را دارد ؟",
            "id": "apa negara bagian yang memiliki paling banyak sungai ?",
            "sv": "vilken stat har flest floder ?",
            "th": "รัฐ ใด มี แม่น้ำ มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 河流"
        }
    }
]