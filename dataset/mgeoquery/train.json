[
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"nebraska\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"nebraska\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 nebraska:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('nebraska')))))"
        },
        "question": {
            "en": "what is the biggest city in nebraska",
            "de": "welches ist die groesste stadt in nebraska",
            "el": "ποια είναι η μεγαλύτερη πόλη στη nebraska",
            "fa": "بزرگترین شهر نبراسکا کدام است ؟",
            "id": "apa kota terbesar di nebraska ?",
            "sv": "vilken är den största staden i nebraska ?",
            "th": "เมือง ใด ใหญ่ ที่สุด ใน รัฐ เนบราสก้า",
            "zh": "内布拉斯加 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"wyoming\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"wyoming\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 wyoming:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('wyoming')))))"
        },
        "question": {
            "en": "what is the biggest city in wyoming",
            "de": "welches ist die groesste stadt in wyoming",
            "el": "ποια είναι η μεγαλύτερη πόλη στο wyoming",
            "fa": "بزرگترین شهر وایومینگ کدام است ؟",
            "id": "apa kota terbesar di wyoming ?",
            "sv": "vilken är den största staden i wyoming ?",
            "th": "เมือง ที่ ใหญ่ ที่สุด ของ รัฐ ไวโอมิง คือ เมือง ใด",
            "zh": "在 怀俄明 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"michigan\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"michigan\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(michigan)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 michigan:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('michigan')))))"
        },
        "question": {
            "en": "what is the largest city in michigan",
            "de": "welches ist die groesste stadt in michigan",
            "el": "ποια είναι η μεγαλύτερη πόλη στο michigan",
            "fa": "بزرگترین شهر در میشیگان کجاست ؟",
            "id": "apa kota terbesar di michigan ?",
            "sv": "vad är den största staden i michigan ?",
            "th": "เมือง ใด เป็น เมือง ที่ ใหญ่ ที่สุด ของ รัฐ มิชิแกน",
            "zh": "密歇根 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"texas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the largest city in texas",
            "de": "welches ist die groesste stadt in texas",
            "el": "ποια είναι η μεγαλύτερη πόλη στο texas",
            "fa": "بزرگترین شهر در تگزاس کجاست ؟",
            "id": "apa kota terbesar di texas ?",
            "sv": "vad är den största staden i texas ?",
            "th": "เมือง ใหญ่ ที่สุด ของ รัฐ เท็กซัส คือ เมือง ใด",
            "zh": "德克萨斯 州 最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"texas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what cities in texas have the highest number of citizens",
            "de": "welche staedte in texas die groesste bevoelkerung",
            "el": "ποιες πόλεις στο texas έχουν τον μεγαλύτερο αριθμό πολιτών",
            "fa": "کدامیک از شهرهای تگزاس بیشرین تعداد شهروند را دارند ؟",
            "id": "kota-kota apa di texas memiliki jumlah warga tertinggi ?",
            "sv": "vilka städer i texas har flest medborgare ?",
            "th": "เมือง ใด เป็น เมือง ที่ มี ประชากร สูง สุด ใน รัฐ เท็กซัส",
            "zh": "在 得克萨斯 州 哪个 城市 的 市民 人数 最多"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"texas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what cities in texas have the highest populations",
            "de": "welche stadt in texas hat die groesste bevoelkerung",
            "el": "ποιες πόλεις στο texas έχουν τους μεγαλύτερους πληθυσμούς",
            "fa": "کدامیک از شهرهای تگزاس بیشرین تعداد شهروند را دارند ؟",
            "id": "kota-kota apa di texas dengan populasi tertinggi ?",
            "sv": "vilka städer i texas har den största folkmängden ?",
            "th": "เมือง ใด ใน รัฐ เท็กซัส มี ประชากร จำนวน มาก ที่สุด",
            "zh": "在 得克萨斯 州 人口 最多 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"texas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"texas\"",
            "prolog": "answer(B,largest(A,(population(B,A),city(B),loc(B,C),const(C,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the most populous city in texas",
            "de": "welche texanische stadt hat die groesste bevoelkerungszahl",
            "el": "ποια είναι η πιο πολυπληθής πόλη στο texas",
            "fa": "پرجمعیت ترین شهر تگزاس کدام است ؟",
            "id": "apa kota terpadat di texas ?",
            "sv": "vilken är den folkrikaste staden i texas ?",
            "th": "เมือง ใด ใน รัฐ เท็กซัส มี จำนวน พลเมือง มาก ที่สุด",
            "zh": "在 得克萨斯 州 人口 最多 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"minnesota\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"minnesota\"",
            "prolog": "answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(minnesota)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 minnesota:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('minnesota'))))))"
        },
        "question": {
            "en": "what is the largest city in minnesota by population",
            "de": "welches ist die bevoelkerungsreichste stadt in minnesota",
            "el": "ποια είναι η μεγαλύτερη πολιτεία στη minnesota βάσει πληθυσμού",
            "fa": "بزرگترین شهر در مینه سوتا کجاست ؟",
            "id": "apa kota terbesar di minnesota menurut jumlah penduduk ?",
            "sv": "vad är den största staden i minnesota enligt befolkning ?",
            "th": "เมือง ใด เป็น เมือง ที่ ใหญ่ ที่สุด ใน รัฐ มินเนโซตา เมื่อ เทียบ โดย ประชากร แล้ว",
            "zh": "明尼苏达 州 人口 最多 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"texas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the biggest city in texas",
            "de": "wie lautet die groesste stadt in texas",
            "el": "ποια είναι η μεγαλύτερη πόλη στο texas",
            "fa": "بزرگترین شهر در تگزاس کدام است ؟",
            "id": "apa kota terbesar di texas ?",
            "sv": "vilken är den största staden i texas ?",
            "th": "เมือง ใด ใหญ่ ที่สุด ใน รัฐ เท็กซัส",
            "zh": "在 德克萨斯 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"alabama\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"alabama\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(alabama)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 alabama:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('alabama')))))"
        },
        "question": {
            "en": "what is the largest city in alabama",
            "de": "welcher ist der groesste stadt in alabama",
            "el": "ποια είναι η μεγαλύτερη πόλη στην alabama",
            "fa": "بزرگترین شهر در آلاباما کجاست ؟",
            "id": "apa kota terbesar di alabama ?",
            "sv": "vad är den största staden i alabama ?",
            "th": "เมือง ใหญ่ ที่สุด ใน รัฐ อลาบามา คือ เมือง ใด",
            "zh": "阿拉巴马 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"oregon\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"oregon\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 oregon:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('oregon')))))"
        },
        "question": {
            "en": "what is the biggest city in oregon",
            "de": "welches ist die groesste stadt in oregon",
            "el": "ποια είναι η μεγαλύτερη πόλη στο oregon",
            "fa": "بزرگترین شهر اورگان کدام است ؟",
            "id": "apa kota terbesar di oregon ?",
            "sv": "vilken är den största staden i oregon ?",
            "th": "เมือง ที่ ใหญ่ ที่สุด ใน รัฐ โอเรกอน คือ เมือง ใด",
            "zh": "在 俄勒冈 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"georgia\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"georgia\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 georgia:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('georgia')))))"
        },
        "question": {
            "en": "what is the biggest city in georgia",
            "de": "was ist die groesste stadt georgias",
            "el": "ποια είναι η μεγαλύτερη πόλη στην georgia",
            "fa": "بزرگترین شهر جورجیا کدام است ؟",
            "id": "apa kota terbesar di georgia ?",
            "sv": "vilken är den största staden i georgia ?",
            "th": "เมือง ใหญ่ สุด ใน รัฐ จอร์เจีย ชื่อ ว่า อะไร",
            "zh": "佐治亚 州 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"wisconsin\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"wisconsin\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 wisconsin:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('wisconsin')))))"
        },
        "question": {
            "en": "what is the largest city in wisconsin",
            "de": "wie lautet die groesste stadt in wisconsin",
            "el": "ποια είναι η μεγαλύτερη πόλη στο wisconsin",
            "fa": "بزرگترین شهر در ویسکونسین کجاست ؟",
            "id": "apa kota terbesar di wisconsin ?",
            "sv": "vad är den största staden i wisconsin ?",
            "th": "เมือง ใด เป็น เมือง ที่ ใหญ่ ที่สุด ใน รัฐ วิสคอนซิน",
            "zh": "威斯康星 州 最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"kansas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"kansas\"",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 kansas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(stateid('kansas')))))"
        },
        "question": {
            "en": "what is the largest city of kansas",
            "de": "wie lautet die groesste stadt in kansas",
            "el": "ποια είναι η μεγαλύτερη πόλη στο kansas",
            "fa": "بزرگترین شهر کانزاس کجاست ؟",
            "id": "apa kota terbesar kansas ?",
            "sv": "vad är den största staden i kansas ?",
            "th": "เมือง ใหญ่ ที่สุด ใน รัฐ แคนซัส คือ เมือง ใด",
            "zh": "堪萨斯 州 最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"texas\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the city in texas with the largest population",
            "de": "welche staedte in texas haben die hoechste einwohnerzahl",
            "el": "ποια είναι η πόλη στο texas με τον μεγαλύτερο πληθυσμό",
            "fa": "کدام شهر تگزاس بیشترین جمعیت را دارد ؟",
            "id": "apa kota di texas dengan populasi terbesar ?",
            "sv": "vilken är den stad i texas med den största befolkningen ?",
            "th": "เมือง ใด ใน รัฐ เท็กซัส ที่ มี ประชากร มาก ที่สุด",
            "zh": "德克萨斯 州 人口 最多 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"wyoming\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"wyoming\"",
            "prolog": "answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(wyoming)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 wyoming:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(loc_2(stateid('wyoming'))))))"
        },
        "question": {
            "en": "what is the most populous city in wyoming",
            "de": "was ist die meist bevoelkerte stadt in wyoming",
            "el": "ποια είναι η πολυπληθέστερη πόλη στην wyoming",
            "fa": "نام پرجمعیت ترین شهر در وایومینگ چیست ؟",
            "id": "apa kota terpadat di wyoming ?",
            "sv": "vilken är den folkrikaste staden i wyoming ?",
            "th": "เมือง ใด เป็น เมือง ที่ มี ประชากร มาก ที่สุด ใน รัฐ ไวโอมิง",
            "zh": "在 怀俄明 州 人口 最多 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid(texas))))",
            "lambda": "(size:<lo,i> texas:s)",
            "funql": "answer(size(stateid('texas')))"
        },
        "question": {
            "en": "what is the size of texas",
            "de": "welche flaeche hat texas",
            "el": "ποιο είναι το μέγεθος του texas",
            "fa": "به اندازه ایالت تگزاس چقدر است .",
            "id": "berapa luas texas ?",
            "sv": "vad är storleken på texas ?",
            "th": "รัฐ เท็กซัส มี พื้นที่ เท่าไหร่",
            "zh": "得克萨斯 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"maryland\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(maryland))))",
            "lambda": "(area:<lo,i> maryland:s)",
            "funql": "answer(area_1(stateid('maryland')))"
        },
        "question": {
            "en": "what is the area of maryland in square kilometers",
            "de": "wie gross ist die flaeche von maryland in quadratkilometer",
            "el": "ποιο είναι το εμβαδό του maryland σε τετραγωνικά χιλιόμετρα",
            "fa": "مساحت مریلند برحسب کیلومتر مربع چقدر است ؟",
            "id": "berapa luas dari maryland dalam kilometer persegi ?",
            "sv": "vad är marylands area i kvadratkilometer ?",
            "th": "รัฐ แมรีแลนด์ มี พื้นที่ กี่ ตาราง กิโลเมตร",
            "zh": "马里兰 州 的 面积 是 多少 平方公里"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"maine\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(maine))))",
            "lambda": "(area:<lo,i> maine:s)",
            "funql": "answer(area_1(stateid('maine')))"
        },
        "question": {
            "en": "what is the area of maine",
            "de": "wie gross ist die flaeche von maine",
            "el": "ποιο είναι το εμβαδό του maine",
            "fa": "مساحت ماین چقدر است ؟",
            "id": "berapa luas dari maine ?",
            "sv": "vad är maines area ?",
            "th": "รัฐ เมน มี พื้นที่ เท่าไหร่",
            "zh": "缅因 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"florida\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid(florida))))",
            "lambda": "(size:<lo,i> florida:s)",
            "funql": "answer(size(stateid('florida')))"
        },
        "question": {
            "en": "what is the size of florida",
            "de": "wie gross ist florida",
            "el": "ποιο είναι το μέγεθος της florida",
            "fa": "اندازه فلوریدا چقدر است ؟",
            "id": "berapa luas florida ?",
            "sv": "vad är storleken på florida ?",
            "th": "รัฐ ฟลอริดา มี ขนาด เท่าไหร่",
            "zh": "佛罗里达 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"south carolina\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid('south carolina'))))",
            "lambda": "(area:<lo,i> south_carolina:s)",
            "funql": "answer(area_1(stateid('south carolina')))"
        },
        "question": {
            "en": "what is the area of south carolina",
            "de": "welches ist die flaeche von south carolina",
            "el": "πόσο είναι το εμβαδό της south carolina",
            "fa": "مساحت کالیفرنیای جنوبی چقدر است ؟",
            "id": "berapa luas dari carolina selatan ?",
            "sv": "vad är south carolinas area ?",
            "th": "รัฐ เซาท์แคโรไลนา มี พื้นที่ เท่าไหร่",
            "zh": "南卡罗来纳 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid(california))))",
            "lambda": "(size:<lo,i> california:s)",
            "funql": "answer(size(stateid('california')))"
        },
        "question": {
            "en": "what is the size of california",
            "de": "wie gross ist kalifornien",
            "el": "ποιο είναι το μέγεθος της california",
            "fa": "اندازه کالیفرنیا چقدر است ؟",
            "id": "berapa luas california ?",
            "sv": "vad är storleken på california ?",
            "th": "รัฐ แคลิฟอร์เนีย มี ขนาด เท่าใด",
            "zh": "加 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid(alaska))))",
            "lambda": "(size:<lo,i> alaska:s)",
            "funql": "answer(size(stateid('alaska')))"
        },
        "question": {
            "en": "how big is alaska",
            "de": "wie gross ist alaska",
            "el": "πόσο μεγάλη είναι η alaska",
            "fa": "وسعت آلاسکا چقدر است ؟",
            "id": "seberapa besarkah alaska ?",
            "sv": "hur stort är alaska ?",
            "th": "รัฐ อลาสกา มี ขนาด เท่าไหร่",
            "zh": "阿拉斯加 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"idaho\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(idaho))))",
            "lambda": "(area:<lo,i> idaho:s)",
            "funql": "answer(area_1(stateid('idaho')))"
        },
        "question": {
            "en": "what is the area of idaho",
            "de": "welche flaeche hat idaho",
            "el": "ποιο είναι το εμβαδό του idaho",
            "fa": "مساحت آیداهو چقدر است ؟",
            "id": "berapa luas dari idaho ?",
            "sv": "vad är idahos area ?",
            "th": "รัฐ ไอดาโฮ มี พื้นที่ เท่าใด",
            "zh": "爱达荷 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(alaska))))",
            "lambda": "(area:<lo,i> alaska:s)",
            "funql": "answer(area_1(stateid('alaska')))"
        },
        "question": {
            "en": "what is the area of alaska",
            "de": "welches ist die flaechenausdehnung von alaska",
            "el": "ποιο είναι το εμβαδό της alaska",
            "fa": "مساحت آلاسکا چقدر است ؟",
            "id": "berapa luas dari alaska ?",
            "sv": "vad är alaskas area ?",
            "th": "รัฐ อลาสก้า มี พื้นที่ เท่าไหร่",
            "zh": "阿拉斯加 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid(texas))))",
            "lambda": "(area:<lo,i> texas:s)",
            "funql": "answer(area_1(stateid('texas')))"
        },
        "question": {
            "en": "what is the area of texas",
            "de": "wie gross ist die flaeche von texas",
            "el": "ποιο είναι το εμβαδό του texas",
            "fa": "مساحت تگزاس چقدر است ؟",
            "id": "berapa luas dari texas ?",
            "sv": "vad är texas area ?",
            "th": "รัฐ เท็กซัส มี พื้นที่ เท่าไหร่",
            "zh": "得克萨斯 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"north dakota\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid('north dakota'))))",
            "lambda": "(size:<lo,i> north_dakota:s)",
            "funql": "answer(size(stateid('north dakota')))"
        },
        "question": {
            "en": "how big is north dakota",
            "de": "wie gross ist north dakota",
            "el": "πόσο μεγάλη είναι η north dakota",
            "fa": "وسعت نورث داکوتا چقدر است ؟",
            "id": "seberapa besarkah north dakota ?",
            "sv": "hur stort är north dakota ?",
            "th": "รัฐ นอร์ธดาโกต้า มี ขนาด เท่าไหร่",
            "zh": "北达科他 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"massachusetts\"",
            "prolog": "answer(A,(size(B,A),const(B,stateid(massachusetts))))",
            "lambda": "(size:<lo,i> massachusetts:s)",
            "funql": "answer(size(stateid('massachusetts')))"
        },
        "question": {
            "en": "how big is massachusetts",
            "de": "wie gross ist massachusetts",
            "el": "πόσο μεγάλη είναι η massachusetts",
            "fa": "وسعت ماساچوست چقدر است ؟",
            "id": "seberapa besarkah massachusetts ?",
            "sv": "hur stort är massachusetts ?",
            "th": "รัฐ แมสซาชูเซ็ต มี ขนาด เท่าไหร่",
            "zh": "马萨诸塞 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE STATE_NAME = \"new mexico\"",
            "prolog": "answer(A,(area(B,A),const(B,stateid('new mexico'))))",
            "lambda": "(area:<lo,i> new_mexico:s)",
            "funql": "answer(area_1(stateid('new mexico')))"
        },
        "question": {
            "en": "what is the area of new mexico",
            "de": "was ist die flaeche new mexicos",
            "el": "ποια είναι η επιφάνεια του new mexico",
            "fa": "مساحت نیومکزیکو چقدر است ؟",
            "id": "berapa luas dari new mexico ?",
            "sv": "vad är new mexicos area ?",
            "th": "รัฐ นิวเม็กซิโก มี พื้นที่ เท่าใด",
            "zh": "新墨西哥 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"new mexico\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('new mexico'))))",
            "lambda": "(population:<lo,i> new_mexico:s)",
            "funql": "answer(population_1(stateid('new mexico')))"
        },
        "question": {
            "en": "how many people live in new mexico",
            "de": "welches ist die einwohnerzahl von neu mexiko",
            "el": "πόσοι άνθρωποι ζουν στο new mexico",
            "fa": "چند نفر در نیومکزیکو زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di new mexico ?",
            "sv": "hur många människor bor i new mexico ?",
            "th": "มี ประชากร กี่ คน อาศัย อยู่ ใน รัฐ นิวเม็กซิโก",
            "zh": "有 多少 人 住 在 新墨西哥 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"new york\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('new york'))))",
            "lambda": "(population:<lo,i> new_york:s)",
            "funql": "answer(population_1(stateid('new york')))"
        },
        "question": {
            "en": "what is the population of new york",
            "de": "wie viele leute leben in new york",
            "el": "ποιος είναι ο πληθυσμός της new york",
            "fa": "جمعیت نیویورک چقدر است ؟",
            "id": "berapa populasi new york ?",
            "sv": "vad är folkmängden i new york ?",
            "th": "นิวยอร์ค มี คน อยู่ เท่าไหร่",
            "zh": "纽约 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(california))))",
            "lambda": "(population:<lo,i> california:s)",
            "funql": "answer(population_1(stateid('california')))"
        },
        "question": {
            "en": "what is the population of california",
            "de": "wie viele leute leben in kalifornien",
            "el": "ποιος είναι ο πληθυσμός της california",
            "fa": "جمعیت کالیفرنیا چقدر است ؟",
            "id": "berapa populasi california ?",
            "sv": "vad är folkmängden i kalifornien ?",
            "th": "รัฐ แคลิฟอร์เนีย มี ประชากร กี่ คน",
            "zh": "加 州 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"maine\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(maine))))",
            "lambda": "(population:<lo,i> maine:s)",
            "funql": "answer(population_1(stateid('maine')))"
        },
        "question": {
            "en": "what is the population of maine",
            "de": "was ist die bevoelkerung von maine",
            "el": "ποιος είναι ο πληθυσμός του maine",
            "fa": "جمعیت مین چقدر است ؟",
            "id": "berapa populasi maine ?",
            "sv": "vad är folkmängden i maine ?",
            "th": "รัฐ เมน มี ประชากร เท่าไหร่",
            "zh": "缅因 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"nevada\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(nevada))))",
            "lambda": "(population:<lo,i> nevada:s)",
            "funql": "answer(population_1(state(stateid('nevada'))))"
        },
        "question": {
            "en": "how many people are in the state of nevada",
            "de": "wie viele einwohner hat nevada",
            "el": "πόσοι άνθρωποι υπάρχουν στην πολιτεία της nevada",
            "fa": "چند نفر در ایالت نوادا زندگی میکنند ؟",
            "id": "berapa banyak orang di negara bagian nevada ?",
            "sv": "hur många personer finns det i delstaten nevada ?",
            "th": "รัฐ เนวาดา มี ประชากร เท่าไหร่",
            "zh": "在 内华达 州 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"missouri\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(missouri))))",
            "lambda": "(population:<lo,i> missouri:s)",
            "funql": "answer(population_1(stateid('missouri')))"
        },
        "question": {
            "en": "what can you tell me about the population of missouri",
            "de": "was koennen sie mir zur bevoelkerung missouris sagen",
            "el": "τι μπορείς να μου πεις για τον πληθυσμό του missouri",
            "fa": "در مورد جمعیت میسوری چه میتوانی به من بگویی ؟",
            "id": "apa yang bisa anda ceritakan tentang populasi missouri ?",
            "sv": "vad kan du berätta om befolkningen i missouri ?",
            "th": "บอก ข้อมูล เกี่ยวกับ ประชากร ของ รัฐ มิสซูรี มา หน่อย",
            "zh": "你 能 告诉 我 密苏里 州 的 人口 是 多少 吗"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"rhode island\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('rhode island'))))",
            "lambda": "(population:<lo,i> rhode_island:s)",
            "funql": "answer(population_1(stateid('rhode island')))"
        },
        "question": {
            "en": "what is the population of rhode island",
            "de": "wie gross ist die bevoelkerung von rhode island",
            "el": "ποιος είναι ο πληθυσμός του rhode island",
            "fa": "جمعیت رود آیلند چقدر است ؟",
            "id": "berapa populasi rhode island ?",
            "sv": "vad är folkmängden i rhode island ?",
            "th": "รัฐ โรดไอแลนด์ มี ประชากร อาศัย อยู่ เท่าไหร่",
            "zh": "罗得岛 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"new york\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('new york'))))",
            "lambda": "(population:<lo,i> new_york:s)",
            "funql": "answer(population_1(stateid('new york')))"
        },
        "question": {
            "en": "how many people are there in new york",
            "de": "wie viele leute gibt es in new york",
            "el": "πόσοι άνθρωποι είναι στη new york",
            "fa": "چند نفر در نیویورک زندگی میکنند ؟",
            "id": "berapa banyak orang yang ada di new york ?",
            "sv": "hur många personer finns det i new york ?",
            "th": "รัฐ นิวยอร์ค มี ประชากร กี่ คน",
            "zh": "在 纽约 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"oregon\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(oregon))))",
            "lambda": "(population:<lo,i> oregon:s)",
            "funql": "answer(population_1(stateid('oregon')))"
        },
        "question": {
            "en": "what is the population of oregon",
            "de": "wie viele einwohner hat oregon",
            "el": "ποιος είναι ο πληθυσμός του oregon",
            "fa": "جمعیت اورگان چقدر است ؟",
            "id": "berapa populasi oregon ?",
            "sv": "vad är folkmängden i oregon ?",
            "th": "รัฐ โอเรกอน มี ประชากร กี่ คน",
            "zh": "俄勒冈 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"illinois\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(illinois))))",
            "lambda": "(population:<lo,i> illinois:s)",
            "funql": "answer(population_1(stateid('illinois')))"
        },
        "question": {
            "en": "what is the population of illinois",
            "de": "wie gross ist die bevoelkerungszahl von illinois",
            "el": "ποιος είναι ο πληθυσμός του illinois",
            "fa": "جمعیت ایلینوی چقدر است ؟",
            "id": "berapa populasi illinois ?",
            "sv": "vad är folkmängden i illinois ?",
            "th": "รัฐ อิลลินอยส์ มี ประชากร เท่าไหร่",
            "zh": "伊利诺伊 州 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"south dakota\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('south dakota'))))",
            "lambda": "(population:<lo,i> south_dakota:s)",
            "funql": "answer(population_1(stateid('south dakota')))"
        },
        "question": {
            "en": "how many people live in south dakota",
            "de": "wie viele leute wohnen in sud dakota",
            "el": "πόσοι άνθρωποι ζουν στη νότια dakota",
            "fa": "چند نفر در داکوتای جنوبی زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di south dakota ?",
            "sv": "hur många människor bor i south dakota ?",
            "th": "รัฐ เซาท์ดาโกตา มี ประชากร ทั้งหมด เท่าไหร่",
            "zh": "有 多少 人 住 在 南达科他 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(hawaii))))",
            "lambda": "(population:<lo,i> hawaii:s)",
            "funql": "answer(population_1(stateid('hawaii')))"
        },
        "question": {
            "en": "how many people live in hawaii",
            "de": "wie hoch ist die bevoelkerung von hawaii",
            "el": "πόσοι άνθρωποι ζουν στην hawaii",
            "fa": "چند نفر در هاوایی زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di hawaii ?",
            "sv": "hur många människor bor på hawaii ?",
            "th": "มี ประชากร อาศัย อยู่ ใน รัฐ ฮาวาย เท่าไหร่",
            "zh": "有 多少 人 生活 在 夏威夷"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"idaho\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(idaho))))",
            "lambda": "(population:<lo,i> idaho:s)",
            "funql": "answer(population_1(stateid('idaho')))"
        },
        "question": {
            "en": "what is the population of idaho",
            "de": "wie viele einwohner hat idaho",
            "el": "ποιος είναι ο πληθυσμός του idaho",
            "fa": "جمعیت آیداهو چقدر است ؟",
            "id": "berapa populasi idaho ?",
            "sv": "vad är folkmängden i idaho ?",
            "th": "รัฐ ไอดาโฮ มี ประชากร เท่าไหร่",
            "zh": "爱达荷 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"montana\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(montana))))",
            "lambda": "(population:<lo,i> montana:s)",
            "funql": "answer(population_1(stateid('montana')))"
        },
        "question": {
            "en": "how many people live in montana",
            "de": "wie viele leute wohnen in montana",
            "el": "πόσοι άνθρωποι μένουν στη montana",
            "fa": "چند نفر در مونتانا زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di montana ?",
            "sv": "hur många människor bor i montana ?",
            "th": "รัฐ มอนตานา มี ประชากร เท่าไหร่",
            "zh": "有 多少 人 住 在 蒙大拿 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(iowa))))",
            "lambda": "(population:<lo,i> iowa:s)",
            "funql": "answer(population_1(stateid('iowa')))"
        },
        "question": {
            "en": "how many people are there in iowa",
            "de": "wie viele leute gibt es in iowa",
            "el": "πόσοι άνθρωποι υπάρχουν στην iowa",
            "fa": "چند نفر در آیووا زندگی میکنند ؟",
            "id": "berapa banyak orang yang ada di iowa ?",
            "sv": "hur många personer finns det i iowa ?",
            "th": "รัฐ ไอโอวา มี ประชากร เท่าใด",
            "zh": "在 爱荷华 州 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"kansas\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(kansas))))",
            "lambda": "(population:<lo,i> kansas:s)",
            "funql": "answer(population_1(stateid('kansas')))"
        },
        "question": {
            "en": "how many people live in kansas",
            "de": "wie viele leute wohnen in kansas",
            "el": "πόσοι άνθρωποι ζουν στο kansas",
            "fa": "چند نفر در کانزاس زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di kansas ?",
            "sv": "hur många människor bor i kansas ?",
            "th": "รัฐ แคนซัส มี ประชากร เท่าไหร่",
            "zh": "有 多少 人 生活 在 堪萨斯 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(california))))",
            "lambda": "(population:<lo,i> california:s)",
            "funql": "answer(population_1(stateid('california')))"
        },
        "question": {
            "en": "how many people live in california",
            "de": "wie viele einwohner hat kalifornien",
            "el": "πόσοι άνθρωποι ζουν στην california",
            "fa": "چند نفر در کالیفرنیا زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di california ?",
            "sv": "hur många människor bor i kalifornien ?",
            "th": "รัฐ แคลิฟอร์เนีย มี พลเมือง อาศัย อยู่ เท่าไหร่",
            "zh": "有 多少 人 生活 在 加利福尼亚"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"montana\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(montana))))",
            "lambda": "(population:<lo,i> montana:s)",
            "funql": "answer(population_1(stateid('montana')))"
        },
        "question": {
            "en": "what is the population of montana",
            "de": "wie gross ist die bevoelkerung von montana",
            "el": "ποιος είναι ο πληθυσμός της montana",
            "fa": "جمعیت مونتانا چقدر است ؟",
            "id": "berapa populasi montana ?",
            "sv": "vad är folkmängden i montana ?",
            "th": "รัฐ มอนตานา มี ประชากร อาศัย อยู่ กี่ คน",
            "zh": "蒙大拿 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"new hampshire\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('new hampshire'))))",
            "lambda": "(population:<lo,i> new_hampshire:s)",
            "funql": "answer(population_1(stateid('new hampshire')))"
        },
        "question": {
            "en": "how many people live in new hampshire",
            "de": "wie viele leute wohnen in new hampshire",
            "el": "πόσοι άνθρωποι κατοικούν στο new hampshire",
            "fa": "چند نفر در نیوهمپشایر زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di new hampshire ?",
            "sv": "hur många människor bor i new hampshire ?",
            "th": "มี ประชากร กี่ คน อาศัย อยู่ ใน รัฐ นิวแฮมพ์เชียร์",
            "zh": "有 多少 人 生活 在 新罕布什尔 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"new york\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('new york'))))",
            "lambda": "(population:<lo,i> new_york:s)",
            "funql": "answer(population_1(stateid('new york')))"
        },
        "question": {
            "en": "how many people live in new york",
            "de": "wie viele einwohner hat new york",
            "el": "πόσοι άνθρωποι ζουν στη new york",
            "fa": "چند نفر در نیویورک زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di new york ?",
            "sv": "hur många människor bor i new york ?",
            "th": "รัฐ นิวยอร์ค มี ประชากร เท่าไหร่",
            "zh": "有 多少 人 住 在 纽约"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"alabama\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(alabama))))",
            "lambda": "(population:<lo,i> alabama:s)",
            "funql": "answer(population_1(stateid('alabama')))"
        },
        "question": {
            "en": "how many citizens in alabama",
            "de": "wie viele bewohner hat alabama",
            "el": "πόσοι πολίτες στην alabama",
            "fa": "آلاباما چند شهروند دارد ؟",
            "id": "berapa banyak warga di alabama ?",
            "sv": "hur många medborgare i alabama ?",
            "th": "รัฐ อลาบามา มี ประชากร กี่ คน",
            "zh": "在 阿拉巴马 州 有 多少 公民"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"arizona\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(arizona))))",
            "lambda": "(population:<lo,i> arizona:s)",
            "funql": "answer(population_1(stateid('arizona')))"
        },
        "question": {
            "en": "what is the population of arizona",
            "de": "wie gross ist die bevoelkerung von arizona",
            "el": "ποιος είναι ο πληθυσμός της arizona",
            "fa": "جمعیت آریزونا چقدر است ؟",
            "id": "berapa populasi arizona ?",
            "sv": "vad är folkmängden i arizona ?",
            "th": "ประชากร ของ รัฐ แอริโซนา มี เท่าไหร่",
            "zh": "亚利桑那 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"south dakota\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid('south dakota'))))",
            "lambda": "(population:<lo,i> south_dakota:s)",
            "funql": "answer(population_1(stateid('south dakota')))"
        },
        "question": {
            "en": "what is the population of south dakota",
            "de": "wie gross ist die bevoelkerung in south dakota",
            "el": "ποιος είναι ο πληθυσμός της south dakota",
            "fa": "جمعیت داکوتای جنوبی چقدر است ؟",
            "id": "berapa populasi south dakota ?",
            "sv": "vad är folkmängden i south dakota ?",
            "th": "รัฐ เซาธ์ดาโกตา มี ประชากร กี่ คน",
            "zh": "南达科他 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"minnesota\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(minnesota))))",
            "lambda": "(population:<lo,i> minnesota:s)",
            "funql": "answer(population_1(stateid('minnesota')))"
        },
        "question": {
            "en": "what is the population of minnesota",
            "de": "wie gross ist die bevoelkerung von minnesota",
            "el": "ποιος είναι ο πληθυσμός της minnesota",
            "fa": "جمعیت مینه سوتا چقدر است ؟",
            "id": "berapa populasi minnesota ?",
            "sv": "vad är folkmängden i minnesota ?",
            "th": "ประชากร ใน รัฐ มินเนโซตา มี เท่าไหร่",
            "zh": "明尼苏达 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(texas))))",
            "lambda": "(population:<lo,i> texas:s)",
            "funql": "answer(population_1(stateid('texas')))"
        },
        "question": {
            "en": "what is the population of texas",
            "de": "wie gross ist die bevoelkerung von texas",
            "el": "ποιο είναι ο πληθυσμός του texas",
            "fa": "جمعیت تگزاس چقدر است ؟",
            "id": "berapa populasi texas ?",
            "sv": "vad är folkmängden i texas ?",
            "th": "รัฐ เท็กซัส มี ประชากร อาศัย อยู่ เท่าไร",
            "zh": "得克萨斯 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"utah\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(utah))))",
            "lambda": "(population:<lo,i> utah:s)",
            "funql": "answer(population_1(stateid('utah')))"
        },
        "question": {
            "en": "how many people stay in utah",
            "de": "welches ist die bevoelkerungszahl von utah",
            "el": "πόσοι άνθρωποι μένουν στη utah",
            "fa": "چند نفر در یوتاه زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di utah ?",
            "sv": "hur många människor bor i utah ?",
            "th": "มี ประชากร กี่ คน อาศัย อยู่ ใน รัฐ ยูทาห์",
            "zh": "有 多少 人 住 在 犹他 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(texas))))",
            "lambda": "(population:<lo,i> texas:s)",
            "funql": "answer(population_1(stateid('texas')))"
        },
        "question": {
            "en": "how many people live in texas",
            "de": "wie gross ist die bevoelkerung von texas",
            "el": "πόσοι άνθρωποι ζουν στο texas",
            "fa": "چند نفر در تگزاس زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di texas ?",
            "sv": "hur många människor bor i texas ?",
            "th": "รัฐ เท็กซัส มี ประชากร อาศัย อยู่ เท่าไหร่",
            "zh": "有 多少 人 住 在 得克萨斯 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(population(B,A),const(B,stateid(california))))",
            "lambda": "(population:<lo,i> california:s)",
            "funql": "answer(population_1(stateid('california')))"
        },
        "question": {
            "en": "how many citizens live in california",
            "de": "wie viele staatsbuerger wohnen in california",
            "el": "πόσοι πολίτες ζουν στην california",
            "fa": "کالیفرنیا چند شهروند دارد ؟",
            "id": "berapa banyak warga yang tinggal di california ?",
            "sv": "hur många medborgare bor i kalifornien ?",
            "th": "รัฐ แคลิฟอร์เนีย มี ประชากร กี่ คน",
            "zh": "在 加利福尼亚 州 住 了 多少 公民"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),population(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(smallest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what is the state with the lowest population",
            "de": "welcher staat hat die kleinste bevoelkerung",
            "el": "ποια είναι η πολιτεία με το χαμηλότερο πληθυσμό",
            "fa": "نام کم جمعیت ترین ایالت چیست ؟",
            "id": "apa negara bagian dengan populasi terendah ?",
            "sv": "vilken stat har den minsta befolkningen ?",
            "th": "รัฐ ใด มี ประชากร น้อย ที่สุด",
            "zh": "人口 最少 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME = \"virginia\"",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 virginia:s)))",
            "funql": "answer(city(loc_2(stateid('virginia'))))"
        },
        "question": {
            "en": "give me the cities in virginia",
            "de": "gebe mir die stadte in virginia",
            "el": "δώσε μου τις πόλεις στην virginia",
            "fa": "شهرهای ویرجینیا را به من بده .",
            "id": "berikan kota-kota di virginia .",
            "sv": "ge mig städerna i virginia .",
            "th": "จง บอก ชื่อ เมือง ใน รัฐ เวอร์จิเนีย มา ให้ หมด",
            "zh": "告诉 我 在 弗吉尼亚 州 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME = \"pennsylvania\"",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,stateid(pennsylvania))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 pennsylvania:s)))",
            "funql": "answer(city(loc_2(stateid('pennsylvania'))))"
        },
        "question": {
            "en": "what cities are located in pennsylvania",
            "de": "welche staedte befinden sich in pennsylvania",
            "el": "ποιες πόλεις βρίσκονται στην pennsylvania",
            "fa": "چه شهرهایی در پنسیلوانیا واقع شده اند ؟",
            "id": "kota-kota apa yang terletak di pennsylvania ?",
            "sv": "vilka städer ligger i pennsylvania ?",
            "th": "เมือง ใด บ้าง ที่ ตั้งอยู่ ใน รัฐ เพ็นซิลเวเนีย",
            "zh": "哪些 城市 是 位于 宾夕法尼亚 州 的"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,stateid(california))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 california:s)))",
            "funql": "answer(city(loc_2(stateid('california'))))"
        },
        "question": {
            "en": "what are the cities in california",
            "de": "was sind die staedte in california",
            "el": "ποιες είναι οι πόλεις στην california",
            "fa": "شهر های کالیفرنیا کدامند ؟",
            "id": "apa kota-kota di california ?",
            "sv": "vilka är städerna i kalifornien ?",
            "th": "รัฐ แคลิฟอร์เนีย มี เมือง อะไรบ้าง",
            "zh": "在 加 州 有 什么 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(city(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "give me the cities in texas",
            "de": "sag mir welche staedte in texas sind",
            "el": "δώσε μου τις πόλεις στο texas",
            "fa": "شهرهای تگزاس را به من بده .",
            "id": "berikan kota-kota di texas .",
            "sv": "ge mig städerna i texas .",
            "th": "จง บอก ชื่อ เมือง ที่ อยู่ ใน รัฐ เท็กซัส มา ให้ หมด",
            "zh": "给 我 在 得克萨斯 州 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,stateid(california))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 california:s)))",
            "funql": "answer(city(loc_2(stateid('california'))))"
        },
        "question": {
            "en": "what cities in california",
            "de": "welche staedte in california",
            "el": "ποιες πόλεις στην california",
            "fa": "کدام شهر ها در کالیفرنیا واقع شده ند ؟",
            "id": "kota-kota apa di california ?",
            "sv": "vilka städer i kalifornien ?",
            "th": "รัฐ แคลิฟอร์เนีย มี เมือง อะไรบ้าง",
            "zh": "加 州 有 什么 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(city(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "give me the cities which are in texas",
            "de": "nenne mir staedte in texas",
            "el": "δώσε μου τις πόλεις που υπάρχουν στο texas",
            "fa": "شهرهایی را که در تگزاس هستند را به من بده .",
            "id": "berikan kota-kota yang berada di texas .",
            "sv": "ge mig de städer som ligger i texas .",
            "th": "จง บอก รายชื่อ เมือง ใน รัฐ เท็กซัส มา",
            "zh": "给 我 在 德克萨斯 州 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT LAKE_NAME FROM LAKE WHERE AREA > 750 AND STATE_NAME = \"michigan\"",
            "prolog": "answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (lake:<l,t> $0) (loc:<lo,<lo,t>> $0 michigan:s)))",
            "funql": "answer(major(lake(loc_2(stateid('michigan')))))"
        },
        "question": {
            "en": "name the major lakes in michigan",
            "de": "nenne die groessten seen in michigan",
            "el": "ονόμασε τις κύριες λίμνες στο michigan",
            "fa": "دریاچه های عمده میشیگان را نام ببر .",
            "id": "nama danau-danau besar di michigan .",
            "sv": "namnge de stora sjöarna i michigan .",
            "th": "จง บอก ชื่อ ทะเลสาบ หลัก ของ รัฐ มิชิแกน มา",
            "zh": "列出 在 密歇根 州 的 主要 湖泊"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE",
            "prolog": "answer(A,state(A))",
            "lambda": "(lambda $0:e (state:<s,t> $0))",
            "funql": "answer(state(all))"
        },
        "question": {
            "en": "list the states",
            "de": "liste alle staaten",
            "el": "σύνταξε κατάλογο των πολιτειών",
            "fa": "ایالت ها را فهرست کن .",
            "id": "daftar negara-negara bagian .",
            "sv": "lista staterna .",
            "th": "จง ไล่ รัฐ ทั้งหมด มา",
            "zh": "列举 出 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE",
            "prolog": "answer(A,(state(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(state(loc_2(countryid('usa'))))"
        },
        "question": {
            "en": "give me all the states of usa",
            "de": "nenne all staaten der usa",
            "el": "δώσε μου όλες τις πολιτείες των ηπα",
            "fa": "تمام ایالتهای ایالات متحده را نام ببر .",
            "id": "berikan semua negara bagian dari amerika serikat .",
            "sv": "ge mig alla stater i usa .",
            "th": "บอก รัฐ ทั้งหมด ของ อเมริกา มา หน่อย",
            "zh": "给 我 美国 所有 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"missouri\"",
            "prolog": "answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> missouri_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('missouri')))))"
        },
        "question": {
            "en": "what states does the missouri river run through",
            "de": "durch welche staaten verlaeuft der missouri fluss",
            "el": "ποιες πολιτείες διασχίζει ο ποταμός missouri",
            "fa": "رود میسوری از کدام ایالت ها عبور میکند ؟",
            "id": "apa negara-negara bagian yang dilalui sungai missouri ?",
            "sv": "vilka stater rinner missourifloden genom ?",
            "th": "รัฐ ใด บ้าง ที่ แม่น้ำ มิสซูรี ไหล ผ่าน",
            "zh": "密苏里 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"missouri\"",
            "prolog": "answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> missouri_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('missouri')))))"
        },
        "question": {
            "en": "which states does the missouri river pass through",
            "de": "durch welche staaten fliesst der missouri",
            "el": "ποιες πολιτείες διασχίζει ο missouri ποταμός",
            "fa": "رود میسوری از کدام ایالت ها عبور میکند ؟",
            "id": "apa negara-negara bagian yang dilewati sungai missouri ?",
            "sv": "vilka stater passerar missourifloden genom ?",
            "th": "รัฐ ใด มี แม่น้ำ มิสซูรี ไหล ผ่าน",
            "zh": "密苏里 河 流经 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0)))",
            "funql": "answer(state(traverse_1(riverid('mississippi'))))"
        },
        "question": {
            "en": "what states does the mississippi run through",
            "de": "durch welche staaten fliesst der mississippi",
            "el": "ποιες πολιτείες διασχίζει ο mississippi",
            "fa": "رود میسیسیپی از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui mississippi ?",
            "sv": "vilka stater rinner mississippi genom ?",
            "th": "แม่น้ำ มิสซิสซิปปี ไหล ผ่าน รัฐ ใด บ้าง",
            "zh": "密西西比 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,(state(A),const(B,riverid(colorado)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> colorado_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('colorado')))))"
        },
        "question": {
            "en": "which states does the colorado river run through",
            "de": "durch welche staaten verlaeuft der colorado fluss",
            "el": "ποιες πολιτείες διασχίζει ο ποταμός colorado",
            "fa": "رود کلرادو از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai colorado ?",
            "sv": "vilka stater rinner coloradofloden genom ?",
            "th": "รัฐ ใด บ้าง ที่ แม่น้ำ โคโลราโด ไหล ผ่าน",
            "zh": "科罗拉多 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"potomac\"",
            "prolog": "answer(A,(state(A),const(B,riverid(potomac)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> potomac_river:r $0)))",
            "funql": "answer(state(traverse_1(riverid('potomac'))))"
        },
        "question": {
            "en": "what are the states that the potomac runs through",
            "de": "welches sind die staaten durch die der potomac fliesst",
            "el": "ποιες είναι πολιτείες που διασχίζει ο potomac",
            "fa": "پوتوماک از چه ایالت هایی میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui potomac ?",
            "sv": "vilka är de stater som potomac går genom ?",
            "th": "รัฐ ใด มี แม่น้ำ โปโตแมค ไหล ผ่าน",
            "zh": "波托马克 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"missouri\"",
            "prolog": "answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> missouri_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('missouri')))))"
        },
        "question": {
            "en": "which states does the missouri river run through",
            "de": "durch welche staaten fliesst der missouri fluss",
            "el": "ποιες πολιτείες διασχίζει ο ποταμός missouri",
            "fa": "رود میسوری از کدام ایالت ها عبور میکند ؟",
            "id": "apa negara-negara bagian yang dilalui sungai missouri ?",
            "sv": "vilka stater rinner missourifloden genom ?",
            "th": "แม่น้ำ มิสซูรี ไหล ผ่าน รัฐ ใด บ้าง",
            "zh": "密苏里 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"red\"",
            "prolog": "answer(A,(state(A),loc(B,A),const(B,riverid(red)),river(B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> red_river:r $0)))",
            "funql": "answer(state(loc_1(river(riverid('red')))))"
        },
        "question": {
            "en": "which state has the red river",
            "de": "welcher staat hat den red fluss",
            "el": "ποια πολιτεία έχει τον red ποταμό",
            "fa": "رودخانه رد در کدام ایالت واقع شده است ؟",
            "id": "apa negara bagian yang memiliki sungai red ?",
            "sv": "vilken stat har red river ?",
            "th": "รัฐ ใด บ้าง ที่ มี แม่น้ำ เร็ด",
            "zh": "哪个 州 有 红 河"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,(state(A),loc(B,A),const(B,riverid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (named:<e,<n,t>> $1 colorado:n) (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(river(riverid('colorado')))))"
        },
        "question": {
            "en": "what states have rivers named colorado",
            "de": "wie viele staaten haben fluesse mit dem namen colorado",
            "el": "ποιες πολιτείες έχουν ποτάμια που ονομάζονται colorado",
            "fa": "کدام ایالت ها رودخانه ای به نام کلرادو دارند ؟",
            "id": "apa negara-negara bagian yang memiliki sungai-sungai bernama colorado ?",
            "sv": "vilka stater har floder som heter colorado ?",
            "th": "รัฐ ใด บ้าง มี แม่น้ำ ชื่อ ว่า โคโลราโด",
            "zh": "哪些 州 有 叫 科罗拉多 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0)))",
            "funql": "answer(state(traverse_1(riverid('mississippi'))))"
        },
        "question": {
            "en": "through which states does the mississippi flow",
            "de": "durch welche staaten verlaueft der mississippi",
            "el": "ποιες πολιτείες διασχίζει ο mississippi",
            "fa": "میسیپی از میان کدام ایالت ها میگذرد ؟",
            "id": "negara-negara bagian manakah yang dialiri mississippi ?",
            "sv": "genom vilka stater flyter floden mississippi ?",
            "th": "รัฐ ใด บ้าง ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน",
            "zh": "密西西比 河 流经 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('mississippi')))))"
        },
        "question": {
            "en": "which states does the mississippi river run through",
            "de": "durch welche staaten verlaeuft der mississippi fluss",
            "el": "ποιες πολιτείες διασχίζει ο mississippi",
            "fa": "رود میسیسیپی از کدام ایالت ها عبور میکند ؟",
            "id": "apa negara-negara bagian yang dilalui sungai mississippi ?",
            "sv": "vilka stater rinner mississippifloden genom ?",
            "th": "แม่น้ำ มิสซิสซิปปี ไหล ผ่าน รัฐ ใด บ้าง",
            "zh": "密西西比 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 mississippi:s)))",
            "funql": "answer(state(next_to_2(stateid('mississippi'))))"
        },
        "question": {
            "en": "what states are next to the mississippi",
            "de": "welche staaten grenzen an mississippi",
            "el": "ποιες πολιτείες είναι δίπλα στο mississippi",
            "fa": "کدام ایالات همجوار میسیسیپی هستند ؟",
            "id": "apa negara-negara bagian di sebelah mississippi ?",
            "sv": "vilka stater ligger bredvid mississippi ?",
            "th": "รัฐ ใด บ้าง อยู่ ถัด จาก รัฐ มิสซิสซิปปี",
            "zh": "什么 州 与 密西西比 州 相邻"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0)))",
            "funql": "answer(state(traverse_1(riverid('mississippi'))))"
        },
        "question": {
            "en": "through which states does the mississippi run",
            "de": "durch welche staaten fliesst der mississippi",
            "el": "ποιες πολιτείες διασχίζει ο mississippi",
            "fa": "میسیسیپی از کدام ایالت ها عبور میکند ؟",
            "id": "negara-negara bagian manakah yang dilalui mississippi ?",
            "sv": "genom vilka stater löper floden mississippi genom ?",
            "th": "รัฐ ใด มี แม่น้ำ มิสซิสซิปปี ไหล ผ่าน",
            "zh": "密西西比 河 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"ohio\"",
            "prolog": "answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> ohio_river:r $0)))",
            "funql": "answer(state(traverse_1(river(riverid('ohio')))))"
        },
        "question": {
            "en": "what states does the ohio river go through",
            "de": "durch \\welche staaten verlaeuft der ohio fluss",
            "el": "ποιες πολιτείες διασχίζει ο ohio ποταμός",
            "fa": "رود اوهایو از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai ohio ?",
            "sv": "vilka stater går ohiofloden genom ?",
            "th": "รัฐ ใด ที่ มี แม่น้ำ โอไฮโอ ไหล ผ่าน",
            "zh": "俄亥俄 河 经过 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what state has the most people",
            "de": "welches ist der bevoelkerungsreichste staat",
            "el": "ποια πολιτεία έχει του περισσότερους ανθρώπους",
            "fa": "کدام ایالت جمعیت بیشتری دارد ؟",
            "id": "apa negara bagian yang memiliki paling banyak orang ?",
            "sv": "vilken stat har flest människor ?",
            "th": "รัฐ ใด มี จำนวน ประชากร มาก ที่สุด",
            "zh": "哪个 州 有 最多 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "which state has the most people",
            "de": "welcher staat hat die meisten einwohner",
            "el": "ποια πολιτεία έχει τους περισσότερους ανθρώπους",
            "fa": "کدام ایالت بیشترین جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki paling banyak orang ?",
            "sv": "vilken stat har flest människor ?",
            "th": "รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(population(A,B),state(A),loc(A,C),const(C,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the most populous state in the us",
            "de": "welcher ist der meist bevoelkerte staat in den usa",
            "el": "ποια είανι η πολυπληθέστερη πολιτεία στις us",
            "fa": "پرجمعیت ترین ایالت در ایالات متحده کجاست ؟",
            "id": "apa negara bagian terpadat di as ?",
            "sv": "vilken är den folkrikaste staten i usa ?",
            "th": "รัฐ ใด มี ประชากร มาก ที่สุด ใน สหรัฐ",
            "zh": "美国 人口 最多 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what state has the highest population",
            "de": "welcher staat hat die groesste bevoelkerung",
            "el": "ποια πολιτεία έχει τον μεγαλύτερο πληθυσμό",
            "fa": "کدام ایالت بیشترین جمعیت را داراست ؟",
            "id": "apa negara bagian yang memiliki populasi tertinggi ?",
            "sv": "vilken stat har den största befolkningen ?",
            "th": "รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"illinois\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"illinois\"",
            "prolog": "answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 illinois:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('illinois')))))"
        },
        "question": {
            "en": "what is the biggest river in illinois",
            "de": "welches ist der groesste fluss in illinois",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στο illinois",
            "fa": "بزرگترین رودخانه ایلینوی کدام است ؟",
            "id": "apa sungai terbesar di illinois ?",
            "sv": "vilken är den största floden i illinois ?",
            "th": "แม่น้ำ สาย ใด ใน รัฐ อิลลินอยส์ ที่ ใหญ่ ที่สุด",
            "zh": "伊利诺伊 州 最大 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"new york\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"new york\"",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,stateid('new york')))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 new_york:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('new york')))))"
        },
        "question": {
            "en": "what is the longest river in new york",
            "de": "welches ist der laengste fluss in new york",
            "el": "ποιο είναι το μακρύτερο ποτάμι στη new york",
            "fa": "طولانی ترین رودخانه در نیویورک کدامست ؟",
            "id": "apa sungai terpanjang di new york ?",
            "sv": "vad är den längsta floden i new york ?",
            "th": "แม่น้ำ ใด ยาว ที่สุด ใน รัฐ นิวยอร์ค",
            "zh": "纽约 州 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"mississippi\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"mississippi\"",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(mississippi)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 mississippi:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('mississippi')))))"
        },
        "question": {
            "en": "what is the longest river in mississippi",
            "de": "wie lautet der laengste fluss in mississippi",
            "el": "ποιο είναι το μακρύτερο ποτάμι στο mississippi",
            "fa": "طولانی ترین رودخانه در می سی سی پی کدامست ؟",
            "id": "apa sungai terpanjang di mississippi ?",
            "sv": "vad är den längsta floden i mississippi ?",
            "th": "แม่น้ำ สาย ใด ใน รัฐ มิสซิสซิปปี เป็น แม่น้ำ ที่ ยาว ที่สุด",
            "zh": "密西西比 州 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"colorado\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"colorado\"",
            "prolog": "answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(colorado)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 colorado:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(traverse_2(stateid('colorado')))))"
        },
        "question": {
            "en": "what is the longest river that flows through colorado",
            "de": "wie lautet der laengste fluss der durch colorado verlaeuft",
            "el": "ποιο είναι το μακρύτερο ποτάμι που διασχίζει το colorado",
            "fa": "نام بلندترین رودخانه ای که از کلرادو میگذرد چیست ؟",
            "id": "apa sungai terpanjang yang mengalir melalui colorado ?",
            "sv": "vilken är den längsta flod som flyter genom colorado ?",
            "th": "แม่น้ำ สาย ใด เป็น แม่น้ำ สาย ที่ ยาว ที่สุด ที่ ไหล ผ่าน รัฐ โคโลราโด",
            "zh": "流经 科罗拉多 州 的 最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"texas\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"texas\"",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what are the biggest rivers in texas",
            "de": "welches sind die groessten fluesse in texas",
            "el": "ποια είναι τα μεγαλύτερα ποτάμια στο texas",
            "fa": "بزرگترین رودخانه های تگزاس کدامند ؟",
            "id": "apa sungai-sungai terbesar di texas ?",
            "sv": "vilka är de största floderna i texas ?",
            "th": "แม่น้ำ ที่ ใหญ่ ที่สุด ใน รัฐ เท็กซัส ชื่อ ว่า อะไร",
            "zh": "得克萨斯 州 的 最大 的 河流 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"california\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"california\"",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 california:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('california')))))"
        },
        "question": {
            "en": "what is the longest river in california",
            "de": "was ist der laengste fluss in california",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στην california",
            "fa": "طولانی ترین رودخانه کالیفرنیا کدامست ؟",
            "id": "apa sungai terpanjang di california ?",
            "sv": "vad är den längsta floden i kalifornien ?",
            "th": "แม่น้ำ ที่ ยาว ที่สุด ใน รัฐ แคลิฟอร์เนีย คือ แม่น้ำ ใด",
            "zh": "加利福尼亚 州 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"pennsylvania\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"pennsylvania\"",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(pennsylvania)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 pennsylvania:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('pennsylvania')))))"
        },
        "question": {
            "en": "what is the longest river in pennsylvania",
            "de": "wie lautet der laengste fluss in pennsylvania",
            "el": "ποιο είναι το μακρύτερο ποτάμι στην pennsylvania",
            "fa": "طولانی ترین رودخانه در پنسیلوانیا کدامست ؟",
            "id": "apa sungai terpanjang di pennsylvania ?",
            "sv": "vad är den längsta floden i pennsylvania ?",
            "th": "แม่น้ำ ที่ ยาว ที่สุด ใน รัฐ เพ็นซิลเวเนีย ชื่อ อะไร",
            "zh": "宾夕法尼亚 州 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"texas\" ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE = \"texas\"",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the longest river in texas",
            "de": "was ist der laengste fluss in texas",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στο texas",
            "fa": "طولانی ترین رودخانه در تگزاس کدامست ؟",
            "id": "apa sungai terpanjang di texas ?",
            "sv": "vad är den längsta floden i texas ?",
            "th": "แม่น้ำ ใด ยาว ที่สุด ใน รัฐ เท็กซัส",
            "zh": "德克萨斯 州 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"colorado\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 colorado:s))))",
            "funql": "answer(count(river(loc_2(stateid('colorado')))))"
        },
        "question": {
            "en": "how many rivers are in colorado",
            "de": "wie viele fluesse sind in colorado",
            "el": "πόσα ποτάμια υπάρχουν στο colorado",
            "fa": "چند رودخانه در کلرادو وجود دارد ؟",
            "id": "berapa banyak sungai di colorado ?",
            "sv": "hur många floder har colorado ?",
            "th": "มี แม่น้ำ กี่ สาย ใน รัฐ โคโลราโด",
            "zh": "在 科罗拉多 州 有 多少 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s))))",
            "funql": "answer(count(river(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "how many rivers are there in texas",
            "de": "wie viele fluesse laufen durch texas",
            "el": "πόσα ποτάμια υπάρχουν στο texas",
            "fa": "چند رودخانه در تگزاس وجود دارد ؟",
            "id": "berapa banyak sungai yang ada di texas ?",
            "sv": "hur många floder finns i texas ?",
            "th": "มี แม่น้ำ กี่ สาย ที่ ไหล ผ่าน รัฐ เท็กซัส",
            "zh": "有 多少 河流 贯穿 得克萨斯 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,count(B,(river(B),traverse(B,C),const(C,stateid(texas))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s))))",
            "funql": "answer(count(river(traverse_2(stateid('texas')))))"
        },
        "question": {
            "en": "how many rivers run through texas",
            "de": "wie viele fluesse gibt es in texas",
            "el": "πόσα ποτάμια διασχίζουν το texas",
            "fa": "چند رودخانه از تگزاس میگذرند ؟",
            "id": "berapa banyak sungai mengalir melalui texas ?",
            "sv": "hur många floder löper genom texas ?",
            "th": "รัฐ เท็กซัส มี แม่น้ำ กี่ สาย",
            "zh": "在 得克萨斯 州 有 多少 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"colorado\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 colorado:s))))",
            "funql": "answer(count(river(loc_2(stateid('colorado')))))"
        },
        "question": {
            "en": "how many rivers are found in colorado",
            "de": "wie viele fluesse gibt es in colorado",
            "el": "πόσα ποτάμια βρίσκονται στο colorado",
            "fa": "چند رودخانه در کلرادو هست ؟",
            "id": "berapa banyak sungai yang ditemukan di colorado ?",
            "sv": "hur många floder finns i colorado ?",
            "th": "รัฐ โคโลราโด มี แม่น้ำ กี่ สาย",
            "zh": "在 科罗拉多 州 被 发现 有 多少 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"washington\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 washington:s))))",
            "funql": "answer(count(river(loc_2(stateid('washington')))))"
        },
        "question": {
            "en": "how many rivers in washington",
            "de": "wie viele fluesse gibt es in washington",
            "el": "πόσα ποτάμια στη washington",
            "fa": "چند رودخانه در واشنگتن هست ؟",
            "id": "berapa banyak sungai di washington ?",
            "sv": "hur många floder i washington ?",
            "th": "รัฐ วอชิงตัน มี แม่น้ำ กี่ สาย",
            "zh": "在 华盛顿 有 多少 条 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"alaska\"",
            "prolog": "answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 alaska:s))))",
            "funql": "answer(count(river(loc_2(stateid('alaska')))))"
        },
        "question": {
            "en": "how many rivers does alaska have",
            "de": "wieviele fluesse gibt es in alaska",
            "el": "πόσα ποτάμια έχει η alaska",
            "fa": "آلاسکا چند رودخانه دارد ؟",
            "id": "berapa banyak sungai yang dimiliki alaska ?",
            "sv": "hur många floder har alaska ?",
            "th": "รัฐ อลาสก้า มี แม่น้ำ กี่ สาย",
            "zh": "阿拉斯加 州 有 多少 河流 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"missouri\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(missouri))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 missouri:s))))",
            "funql": "answer(count(river(loc_2(stateid('missouri')))))"
        },
        "question": {
            "en": "how many rivers are in missouri",
            "de": "wie viele fluesse gibt es in missouri",
            "el": "πόσα ποτάμια υπάρχουν στο missouri",
            "fa": "چند رودخانه در میسوری وجود دارد ؟",
            "id": "berapa banyak sungai di missouri ?",
            "sv": "hur många floder har missouri ?",
            "th": "แม่น้ำ ใน รัฐ มิสซูรี มี กี่ สาย",
            "zh": "在 密苏里 州 有 多少 条 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE = \"idaho\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 idaho:s))))",
            "funql": "answer(count(river(loc_2(stateid('idaho')))))"
        },
        "question": {
            "en": "how many rivers are there in idaho",
            "de": "wie viele fluesse gibt es in idaho",
            "el": "πόσα ποτάμια υπάρχουν στο idaho",
            "fa": "چند رودخانه در آیداهو وجود دارد ؟",
            "id": "berapa banyak sungai yang ada di idaho ?",
            "sv": "hur många floder finns i idaho ?",
            "th": "รัฐ ไอดาโฮ มี แม่น้ำ กี่ สาย",
            "zh": "有 多少 河流 在 爱达荷 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"missouri\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(missouri))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 missouri:s)))",
            "funql": "answer(state(next_to_2(stateid('missouri'))))"
        },
        "question": {
            "en": "what states border missouri",
            "de": "welche staaten grenzen an missouri",
            "el": "ποιες πολιτείες συνορεύουν με το missouri",
            "fa": "کدام ایالات با مسیوری همجوار هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan missouri ?",
            "sv": "vilka stater gränsar till missouri ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ มิสซูรี",
            "zh": "什么 州 与 密苏里 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"ohio\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(ohio))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 ohio:s)))",
            "funql": "answer(state(next_to_2(stateid('ohio'))))"
        },
        "question": {
            "en": "what states border ohio",
            "de": "welche staaten grenzen an ohio an",
            "el": "ποιες πολιτείες συνορεύουν με το ohio",
            "fa": "کدام ایالات همجوار اوهایو هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan ohio ?",
            "sv": "vilka stater gränsar till ohio ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ โอไฮโอ มี อะไร บ้าง",
            "zh": "什么 州 与 俄亥俄 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(state(next_to_2(stateid('texas'))))"
        },
        "question": {
            "en": "what states are next to texas",
            "de": "welche staaten grenzen an texas",
            "el": "ποιες πολιτείες είναι δίπλα στο texas",
            "fa": "کدام ایالات همجوار تگزاس هستند ؟",
            "id": "apa negara-negara bagian di sebelah texas ?",
            "sv": "vilka stater ligger bredvid texas ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "什么 州 与 得克萨斯 州 相邻"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 alaska:s)))",
            "funql": "answer(state(next_to_2(stateid('alaska'))))"
        },
        "question": {
            "en": "what states border alaska",
            "de": "welche staaten grenzen an alaska",
            "el": "ποιες πολιτείες συνορεύουν με την alaska",
            "fa": "کدام ایالات با آلاسکا هم مرزند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan alaska ?",
            "sv": "vilka stater gränsar till alaska ?",
            "th": "รัฐ อลาสกา อยู่ ติด กับ รัฐ ใด บ้าง",
            "zh": "什么 州 与 阿拉斯加 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"new york\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid('new york'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 new_york:s)))",
            "funql": "answer(state(next_to_2(stateid('new york'))))"
        },
        "question": {
            "en": "which states border new york",
            "de": "welche staaten grenzen an new york an",
            "el": "ποιες πολιτείες συνορεύουν με τη new york",
            "fa": "کدام ایالت ها هم مرز نیویورک هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan new york ?",
            "sv": "vilka stater gränsar new york ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ นิวยอร์ค",
            "zh": "哪些 州 与 纽约 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 hawaii:s)))",
            "funql": "answer(state(next_to_2(stateid('hawaii'))))"
        },
        "question": {
            "en": "what states border hawaii",
            "de": "welcher staat grenzt hawaii",
            "el": "ποιες πολιτείες συνορεύουν με τη hawaii",
            "fa": "کدام ایالات همجوار هاوایی هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan hawaii ?",
            "sv": "vilka stater gränsar till hawaii ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ ฮาวาย",
            "zh": "什么 州 与 夏威夷 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"michigan\"",
            "prolog": "answer(A,(next_to(A,B),state(A),const(B,stateid(michigan))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 michigan:s)))",
            "funql": "answer(state(next_to_2(stateid('michigan'))))"
        },
        "question": {
            "en": "what are the neighboring states for michigan",
            "de": "welches sind die nachbarstaaten von michigan",
            "el": "ποιες είναι οι γειτονικές πολιτείες για το michigan",
            "fa": "ایالات مجاور میشیگان کدامند ؟",
            "id": "apa negara-negara bagian tetangga michigan ?",
            "sv": "vilka är grannstater till michigan ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ มิชิแกน",
            "zh": "哪些 是 和 密歇根 州 相邻 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"florida\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(florida))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 florida:s)))",
            "funql": "answer(state(next_to_2(stateid('florida'))))"
        },
        "question": {
            "en": "which state borders florida",
            "de": "welcher staat grenzt an florida",
            "el": "ποια πολιτεία συνορεύει με τη florida",
            "fa": "کدام ایالت همجوار فلوریدا است ؟",
            "id": "apa negara bagian yang berbatasan dengan florida ?",
            "sv": "vilken stat gränsar till florida ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ฟลอริดา",
            "zh": "哪个 州 与 佛罗里达 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"georgia\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 georgia:s)))",
            "funql": "answer(state(next_to_2(stateid('georgia'))))"
        },
        "question": {
            "en": "what states border georgia",
            "de": "welche staaten grenzen an georgia",
            "el": "ποιες πολιτείες συνορεύουν με τη georgia",
            "fa": "کدام ایالات همجوار جورجیا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan georgia ?",
            "sv": "vilka stater gränsar till georgia ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ จอร์เจีย",
            "zh": "什么 州 与 佐治亚 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"new hampshire\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid('new hampshire'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 new_hampshire:s)))",
            "funql": "answer(state(next_to_2(stateid('new hampshire'))))"
        },
        "question": {
            "en": "what states border new hampshire",
            "de": "welche staaten grenzen an new hampshire",
            "el": "ποιες πολιτείες συνορεύουν με το new hampshire",
            "fa": "کدام ایالات همجوار نیوهمپشایر هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan new hampshire ?",
            "sv": "vilka stater gränsar till new hampshire ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ นิวแฮมพ์เชียร์",
            "zh": "什么 州 与 新罕布什尔 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"rhode island\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid('rhode island'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 rhode_island:s)))",
            "funql": "answer(state(next_to_2(stateid('rhode island'))))"
        },
        "question": {
            "en": "what states border rhode island",
            "de": "welche staaten grenzen an rhode island",
            "el": "ποιες πολιτείες συνορεύουν με  το rhode island",
            "fa": "کدام ایالات همجوار رودایلند هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan rhode island ?",
            "sv": "vilka stater gränsar till rhode island ?",
            "th": "รัฐ ใด บ้าง ที่ อยู่ ติด กับ รัฐ โรดไอแลนด์",
            "zh": "什么 州 与 罗得岛 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(state(next_to_2(stateid('texas'))))"
        },
        "question": {
            "en": "which states border texas",
            "de": "welche staaten grenzen an texas",
            "el": "ποιες πολιτείες συνορεύουν με το texas",
            "fa": "کدام ایالت ها همجوار تگزاس هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka stater gränsar till texas ?",
            "th": "รัฐ ใด บ้าง ที่ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "哪些 州 与 得克萨斯 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"michigan\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 michigan:s)))",
            "funql": "answer(state(next_to_2(stateid('michigan'))))"
        },
        "question": {
            "en": "which states border michigan",
            "de": "welcher staat grenzt an michigan an",
            "el": "ποιες πολιτείες συνορεύουν το michigan",
            "fa": "کدام ایالت ها هم مرز میشیگان هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan michigan ?",
            "sv": "vilka stater gränsar michigan ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ มิชิแกน",
            "zh": "哪些 州 与 密歇根 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 alaska:s)))",
            "funql": "answer(state(next_to_2(stateid('alaska'))))"
        },
        "question": {
            "en": "which states border alaska",
            "de": "welche staaten grenzen an alaska",
            "el": "ποιες πολιτείες συνορεύουν με την alaska",
            "fa": "کدام ایالت ها هم مرز آلاسکا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan alaska ?",
            "sv": "vilka stater gränsar alaska ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อลาสกา",
            "zh": "哪些 州 与 阿拉斯加 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"south dakota\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid('south dakota'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 south_dakota:s)))",
            "funql": "answer(state(next_to_2(stateid('south dakota'))))"
        },
        "question": {
            "en": "which states border south dakota",
            "de": "welche staaten grenzen an south dakota an",
            "el": "ποιες πολιτείες συνορεύουν με τη νότια dakota",
            "fa": "کدام ایالت ها هم مرز سوت داکوتا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan south dakota ?",
            "sv": "vilka stater gränsar south dakota ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ เซาธ์ดาโกตา",
            "zh": "哪些 州 与 南达科他 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"arkansas\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 arkansas:s)))",
            "funql": "answer(state(next_to_2(stateid('arkansas'))))"
        },
        "question": {
            "en": "what states border arkansas",
            "de": "welche staaten grenzen an arkansas",
            "el": "ποιες πολιτείες συνορεύουν το arkansas",
            "fa": "کدام ایالات با آرکانزاس هم مرز هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan arkansas ?",
            "sv": "vilka stater gränsar till arkansas ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อาร์คันซอ บ้าง",
            "zh": "什么 州 与 阿肯色 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"alabama\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 alabama:s)))",
            "funql": "answer(state(next_to_2(stateid('alabama'))))"
        },
        "question": {
            "en": "which states adjoin alabama",
            "de": "welche staaten benachbaren alabama",
            "el": "ποιες πολιτείες γειτονεύουν με την alabama",
            "fa": "کدام ایالت ها همجوار آلاباما هستند ؟",
            "id": "apa negara-negara bagian yang berdampingan dengan alabama ?",
            "sv": "vilka stater gränsar alabama ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อลาบามา",
            "zh": "哪些 州 与 阿拉巴马 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(state(next_to_2(stateid('texas'))))"
        },
        "question": {
            "en": "what states border texas",
            "de": "welche staaten grenzen an texas an",
            "el": "ποια πολιτεία συνορεύει με το texas",
            "fa": "کدام ایالت ها همجوار تگزاس هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka stater gränsar texas ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "与 得克萨斯 州 接壤 的 是 什么 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"michigan\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 michigan:s)))",
            "funql": "answer(state(next_to_2(stateid('michigan'))))"
        },
        "question": {
            "en": "what state borders michigan",
            "de": "welche staedte grenzen an michigan",
            "el": "ποια πολιτεία συνορεύει με το michigan",
            "fa": "کدام ایالت همجوار میشیگان است ؟",
            "id": "apa negara bagian yang berbatasan dengan michigan ?",
            "sv": "vilken stat gränsar till michigan ?",
            "th": "รัฐ มิชิแกน มี รัฐ เพื่อนบ้าน อะไรบ้าง",
            "zh": "哪些 州 与 密歇根 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"colorado\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 colorado:s)))",
            "funql": "answer(state(next_to_2(stateid('colorado'))))"
        },
        "question": {
            "en": "which states border colorado",
            "de": "welche staaten grenzen an colorado",
            "el": "ποιες πολιτείες συνορεύουν με το colorado",
            "fa": "کدام ایالت ها هم مرز کلرادو هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan colorado ?",
            "sv": "vilka stater gränsar colorado ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ โคโลราโด",
            "zh": "哪些 州 与 科罗拉多 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 iowa:s)))",
            "funql": "answer(state(next_to_2(stateid('iowa'))))"
        },
        "question": {
            "en": "states bordering iowa",
            "de": "staaten iowa angrenzend",
            "el": "πολιτείες που συνορεύουν με την iowa",
            "fa": "ایالت های همجوار آیووا کدامند ؟",
            "id": "negara-negara bagian yang berbatasan dengan iowa ?",
            "sv": "stater som gränsar till iowa ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ไอโอวา",
            "zh": "列出 与 艾奥瓦 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"alabama\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 alabama:s)))",
            "funql": "answer(state(next_to_2(stateid('alabama'))))"
        },
        "question": {
            "en": "which states border alabama",
            "de": "welche staaten grenzen an alabama",
            "el": "ποιες πολιτείες συνορεύουν με την alabama",
            "fa": "کدام ایالت ها هم مرز آلاباما هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan alabama ?",
            "sv": "vilka stater gränsar alabama ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อลาบามา",
            "zh": "哪些 州 与 阿拉巴马 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"kentucky\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 kentucky:s)))",
            "funql": "answer(state(next_to_2(stateid('kentucky'))))"
        },
        "question": {
            "en": "which state border kentucky",
            "de": "welche staaten grenzen an kentucky",
            "el": "ποια πολιτεία συνορεύει με το kentucky",
            "fa": "کدام ایالت همجوار کنتاکی است ؟",
            "id": "apa negara bagian yang berbatasan dengan kentucky ?",
            "sv": "vilken stat gränsar till kentucky ?",
            "th": "รัฐ ใด บ้าง ที่ อยู่ ติด กับ รัฐ เคนตักกี",
            "zh": "哪些 州 与 肯塔基 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,(next_to(A,B),state(A),const(B,stateid(california))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 california:s)))",
            "funql": "answer(state(next_to_2(stateid('california'))))"
        },
        "question": {
            "en": "what is the adjacent state of california",
            "de": "welcher staat grenzt an kalifornien",
            "el": "ποια είναι η γειτονική πολιτεία της california",
            "fa": "ایالت مجاور کالیفرنیا چیست ؟",
            "id": "apa negara bagian yang bersebelahan dengan california ?",
            "sv": "vilken är den angränsande staten till kalifornien ?",
            "th": "รัฐ ที่ อยู่ ติด กัน กับ รัฐ แคลิฟอร์เนีย คือ รัฐ ใด",
            "zh": "与 加 州 相邻 的 是 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 hawaii:s)))",
            "funql": "answer(state(next_to_2(stateid('hawaii'))))"
        },
        "question": {
            "en": "which states border hawaii",
            "de": "welche staaten grenzen an hawaii an",
            "el": "ποιές πολιτείες συνορεύουν με τη hawaii",
            "fa": "کدام ایالت ها هم مرز هاوایی هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan hawaii ?",
            "sv": "vilka stater gränsar hawaii ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ฮาวาย",
            "zh": "哪些 州 与 夏威夷 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"wisconsin\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 wisconsin:s)))",
            "funql": "answer(state(next_to_2(stateid('wisconsin'))))"
        },
        "question": {
            "en": "what states border wisconsin",
            "de": "welche staaten grenzen an wisconsin an",
            "el": "ποιες πολιτείες συνορεύουν με το wisconsin",
            "fa": "کدام ایالت ها با ویسکنسین هم مرز هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan wisconsin ?",
            "sv": "vilka stater gränsar till wisconsin ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ วิสคอนซิน",
            "zh": "与 威斯康星 州 接壤 的 州 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"arizona\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 arizona:s)))",
            "funql": "answer(state(next_to_2(stateid('arizona'))))"
        },
        "question": {
            "en": "which states border arizona",
            "de": "welche staaten grenzen an arizona",
            "el": "ποιες πολιτείες συνορεύουν με την arizona",
            "fa": "کدام ایالت ها هم مرز آریزونا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan arizona ?",
            "sv": "vilka stater gränsar arizona ?",
            "th": "รัฐ ใด อยู่ ถัด จาก รัฐ แอริโซนา",
            "zh": "哪些 州 与 亚利桑那 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"kentucky\"",
            "prolog": "answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 kentucky:s)))",
            "funql": "answer(state(next_to_2(stateid('kentucky'))))"
        },
        "question": {
            "en": "what states border kentucky",
            "de": "welche staaten grenzen an kentucky",
            "el": "ποιες πολιτείες συνορεύουν με το kentucky",
            "fa": "کدام ایالت ها هم مرز کنتاکی هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan kentucky ?",
            "sv": "vilka stater gränsar till kentucky ?",
            "th": "รัฐ ใด บ้าง ที่ อยู่ ติด กับ รัฐ เคนตักกี้",
            "zh": "什么 州 与 肯塔基 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"colorado\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 colorado:s)))",
            "funql": "answer(river(loc_2(stateid('colorado'))))"
        },
        "question": {
            "en": "name all the rivers in colorado",
            "de": "nenne alle flüsse in colorado",
            "el": "ονόμασε όλα τα ποτάμια του colorado",
            "fa": "همه رودخانه های کلورادو را نام ببر .",
            "id": "nama semua sungai di colorado .",
            "sv": "namnge alla floder i colorado .",
            "th": "แม่น้ำ ของ รัฐ โคโลราโด มี อะไร บ้าง",
            "zh": "列出 在 科罗拉多 州 所有 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"colorado\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 colorado:s)))",
            "funql": "answer(river(traverse_2(stateid('colorado'))))"
        },
        "question": {
            "en": "what rivers flow through colorado",
            "de": "nenne alle fluesse in colorado",
            "el": "ποια ποτάμια διασχίζουν το colorado",
            "fa": "چه رودخانه هایی از کلرادو میگذرند ؟",
            "id": "apa saja sungai-sungai yang mengalir melalui colorado ?",
            "sv": "vilka floder flyter genom colorado ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ โคโลราโด",
            "zh": "流经 科罗拉多 州 的 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"arizona\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 arizona:s)))",
            "funql": "answer(river(traverse_2(stateid('arizona'))))"
        },
        "question": {
            "en": "what rivers run through arizona",
            "de": "welche fluesse fliessen durch arizona",
            "el": "ποια ποτάμια διασχίζουν την arizona",
            "fa": "کدام رودخانه ها از آریزونا میگذرند ؟",
            "id": "apa saja sungai-sungai yang melalui arizona ?",
            "sv": "vilka floder löper genom arizona ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ แอริโซนา",
            "zh": "什么 河流 流经 亚利桑那 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"kansas\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(kansas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 kansas:s)))",
            "funql": "answer(river(traverse_2(stateid('kansas'))))"
        },
        "question": {
            "en": "what river flows through kansas",
            "de": "welcher fluss fliesst durch kansas",
            "el": "ποιο ποτάμι διασχίζει το kansas",
            "fa": "چه رودخانه ای از کانزاس میگذرد ؟",
            "id": "apa sungai yang mengalir melalui kansas ?",
            "sv": "vilken flod flyter genom kansas ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ แคนซัส",
            "zh": "什么 河流 流经 堪萨斯 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,(river(A),loc(A,B),state(B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(river(loc_2(state(stateid('texas')))))"
        },
        "question": {
            "en": "what are the rivers in the state of texas",
            "de": "welche fluesse gibt es in texas",
            "el": "ποια είναι τα ποτάμια στην πολιτεία του texas",
            "fa": "رودخانه های ایالت تگزاس کدامند ؟",
            "id": "apa sungai-sungai di negara bagian texas ?",
            "sv": "vilka är floderna i delstaten texas ?",
            "th": "รัฐ เท็กซัส มี แม่น้ำ อยู่ กี่ สาย",
            "zh": "得克萨斯 州 有 哪些 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"new mexico\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid('new mexico'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 new_mexico:s)))",
            "funql": "answer(river(loc_2(stateid('new mexico'))))"
        },
        "question": {
            "en": "what rivers are in new mexico",
            "de": "welche fluesse gibt es in new mexico",
            "el": "ποια ποτάμια υπάρχουν στο new mexico",
            "fa": "رودخانه های نیومکزیکو کدامند ؟",
            "id": "apa saja sungai-sungai di new mexico ?",
            "sv": "vilka floder är i new mexico ?",
            "th": "ใน รัฐ นิวเม็กซิโก มี แม่น้ำ ใด บ้าง",
            "zh": "新墨西哥 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"arkansas\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 arkansas:s)))",
            "funql": "answer(river(loc_2(stateid('arkansas'))))"
        },
        "question": {
            "en": "name the rivers in arkansas",
            "de": "nenne die fluesse in arkansas",
            "el": "ονόμασε τα ποτάμια στο arkansas",
            "fa": "رودخانه های آرکانزاس را نام ببر .",
            "id": "nama sungai-sungai di arkansas .",
            "sv": "namnge floderna i arkansas .",
            "th": "จง บอก ชื่อ แม่น้ำ ใน รัฐ อาร์คันซอ",
            "zh": "说出 在 阿肯色 州 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"louisiana\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(louisiana))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 louisiana:s)))",
            "funql": "answer(river(traverse_2(stateid('louisiana'))))"
        },
        "question": {
            "en": "what rivers run through louisiana",
            "de": "welche fluesse fliessen durch louisiana",
            "el": "ποια ποτάμια διασχίζουν τη louisiana",
            "fa": "کدام رودخانه ها از لوئیزیانا میگذرند ؟",
            "id": "apa saja sungai-sungai yang melalui louisiana ?",
            "sv": "vilka floder löper genom louisiana ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ หลุยเซียนา บ้าง",
            "zh": "什么 河流 贯穿 路易斯安那 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"west virginia\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid('west virginia'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 west_virginia:s)))",
            "funql": "answer(river(traverse_2(stateid('west virginia'))))"
        },
        "question": {
            "en": "what rivers run through west virginia",
            "de": "welche fluesse fliessen durch west virginia",
            "el": "πόσα ποτάμια διασχίζουν τη west virginia",
            "fa": "کدام رودخانه ها از وست ویرجینیا میگذرند ؟",
            "id": "apa saja sungai-sungai yang melalui virginia barat ?",
            "sv": "vilka floder löper genom west virginia ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ เวสท์เวอร์จิเนีย บ้าง",
            "zh": "什么 河流 贯穿 西弗吉尼亚 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"nevada\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 nevada:s)))",
            "funql": "answer(river(loc_2(stateid('nevada'))))"
        },
        "question": {
            "en": "what rivers are in nevada",
            "de": "welche fluesse gibt es in nevada",
            "el": "ποια ποτάμια υπάρχουν στη nevada",
            "fa": "رودخانه های نبراسکا کدامند ؟",
            "id": "apa saja sungai-sungai di nevada ?",
            "sv": "vilka floder är i nevada ?",
            "th": "ใน รัฐ เนวาดา มี แม่น้ำ อะไร บ้าง",
            "zh": "内华达 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(river(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "what rivers are in texas",
            "de": "welche fluesse verlaufen durch texas",
            "el": "πόσα ποτάμια υπάρχουν στο texas",
            "fa": "چه رودخانه های در تگزاس هستند ؟",
            "id": "apa saja sungai-sungai di texas ?",
            "sv": "vilka floder är i texas ?",
            "th": "รัฐ เท็กซัส มี แม่น้ำ อะไร บ้าง",
            "zh": "在 得克萨斯 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"utah\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(utah))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 utah:s)))",
            "funql": "answer(river(loc_2(stateid('utah'))))"
        },
        "question": {
            "en": "what rivers are in utah",
            "de": "welche fluesse gibt es in utah",
            "el": "ποια ποτάμια είναι στη utah",
            "fa": "چه رودخانه هایی در یوتاه هستند ؟",
            "id": "apa saja sungai-sungai di utah ?",
            "sv": "vilka floder är i utah ?",
            "th": "แม่น้ำ ใน รัฐ ยูทาห์ มี อะไร บ้าง",
            "zh": "在 犹他 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"indiana\"",
            "prolog": "answer(A,(river(A),loc(A,B),state(B),const(B,stateid(indiana))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 indiana:s)))",
            "funql": "answer(river(loc_2(state(stateid('indiana')))))"
        },
        "question": {
            "en": "what are the rivers in the state of indiana",
            "de": "welches sind die fluesse im staate indiana",
            "el": "ποια είναι τα ποτάμια στην πολιτεία της indiana",
            "fa": "رودخانه های ایالت ایندیانا کدامند ؟",
            "id": "apa sungai-sungai di negara bagian indiana ?",
            "sv": "vilka är floderna i delstaten indiana ?",
            "th": "ใน รัฐ อินเดียนา มี แม่น้ำ อะไรบ้าง",
            "zh": "印第安纳 州 的 河流 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"missouri\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 missouri:s)))",
            "funql": "answer(river(traverse_2(stateid('missouri'))))"
        },
        "question": {
            "en": "what rivers flow through missouri",
            "de": "welche fluesse verlaufen durch missouri",
            "el": "ποια ποτάμια διασχίζουν το missouri",
            "fa": "کدام رودخانه ها از طریق میسوری جریان دارند ؟",
            "id": "apa saja sungai-sungai yang mengalir melalui missouri ?",
            "sv": "vilka floder flyter genom missouri ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ มิสซูรี",
            "zh": "流经 密苏里 州 的 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"montana\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(montana))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 montana:s)))",
            "funql": "answer(river(loc_2(stateid('montana'))))"
        },
        "question": {
            "en": "what are the rivers of montana",
            "de": "welche sind die fluesse montanas",
            "el": "ποια είναι τα ποτάμια στη montana",
            "fa": "رودخانه های ایالت مونتانا کدامند ؟",
            "id": "apa sungai-sungai di montana ?",
            "sv": "vilka är floderna i montana ?",
            "th": "แม่น้ำ ใน รัฐ มอนตานา มี อะไร บ้าง",
            "zh": "蒙大拿 州 的 河流 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"colorado\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 colorado:s)))",
            "funql": "answer(river(traverse_2(stateid('colorado'))))"
        },
        "question": {
            "en": "what rivers run through colorado",
            "de": "welche fluesse verlaufen durch colorado",
            "el": "ποιο ποτάμι διασχίζει το colorado",
            "fa": "کدام رودخانه ها از کلرادو میگذرند ؟",
            "id": "apa saja sungai-sungai yang melalui colorado ?",
            "sv": "vilka floder löper genom colorado ?",
            "th": "จง บอก ชื่อ แม่น้ำ ทั้งหมด ของ รัฐ โคโลราโด",
            "zh": "什么 河流 贯穿 科罗拉多 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"alaska\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 alaska:s)))",
            "funql": "answer(river(loc_2(stateid('alaska'))))"
        },
        "question": {
            "en": "which rivers are in alaska",
            "de": "welcher fluss verlaeuft durch alaska",
            "el": "πόσα ποτάμια υπάρχουν στην alaska",
            "fa": "کدام رودخانه ها در آلاسکا واقع شده اند ؟",
            "id": "apa sungai-sungai yang berada di alaska ?",
            "sv": "vilka floder ligger i alaska ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ อลาสก้า",
            "zh": "哪些 河流 在 阿拉斯加"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"alaska\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 alaska:s)))",
            "funql": "answer(river(traverse_2(stateid('alaska'))))"
        },
        "question": {
            "en": "which rivers flow through alaska",
            "de": "welche fluesse gibt es in alaska",
            "el": "ποια ποτάμια διασχίζουν την alaska",
            "fa": "کدام رودخانه ها از آلاسکا میگذرند ؟",
            "id": "apa sungai-sungai yang mengalir melalui alaska ?",
            "sv": "vilka floder flyter genom alaska ?",
            "th": "รัฐ อลาสกา มี แม่น้ำ อะไร บ้าง",
            "zh": "哪些 河流 流经 阿拉斯加 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"ohio\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 ohio:s)))",
            "funql": "answer(river(traverse_2(stateid('ohio'))))"
        },
        "question": {
            "en": "what is the river that cross over ohio",
            "de": "welcher fluss fliesst durch ohio",
            "el": "ποιο είναι το ποτάμι που διασχίζει το ohio",
            "fa": "رودخانه ایی که از اوهایو عبور میکند چه نام دارد ؟",
            "id": "apa sungai yang melintasi ohio ?",
            "sv": "vilken är floden som korsar ohio ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ โอไฮโอ",
            "zh": "横贯 俄亥俄 州 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"maine\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 maine:s)))",
            "funql": "answer(river(traverse_2(stateid('maine'))))"
        },
        "question": {
            "en": "what rivers run through maine",
            "de": "welche fluesse verlaufen durch maine",
            "el": "ποια ποτάμια διασχίζουν το maine",
            "fa": "کدام رودخانه ها از مین میگذرند ؟",
            "id": "apa saja sungai-sungai yang melalui maine ?",
            "sv": "vilka floder löper genom maine ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ เมน",
            "zh": "什么 河流 贯穿 缅因 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(river(traverse_2(stateid('texas'))))"
        },
        "question": {
            "en": "what river flows through texas",
            "de": "welches flüsse gibt es in texas",
            "el": "ποιο ποτάμι διασχίζει το texas",
            "fa": "چه رودخانه ای از تگزاس میگذرد ؟",
            "id": "apa sungai yang mengalir melalui texas ?",
            "sv": "vilken flod flyter genom texas ?",
            "th": "มี แม่น้ำ อะไร บ้าง อยู่ ใน รัฐ เท็กซัส",
            "zh": "什么 河流 流经 得克萨斯 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"virginia\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 virginia:s)))",
            "funql": "answer(river(traverse_2(stateid('virginia'))))"
        },
        "question": {
            "en": "what river runs through virginia",
            "de": "welcher fluss fliesst durch virginia",
            "el": "ποια ποτάμι διασχίζει τη virginia",
            "fa": "چه رودخانه ای از ویرجینیا میگذرد ؟",
            "id": "apa sungai yang melalui virginia ?",
            "sv": "vilken flod rinner genom virginia ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ เวอร์จิเนีย",
            "zh": "哪条 河流 贯穿 弗吉尼亚"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"oregon\"",
            "prolog": "answer(A,(river(A),loc(A,B),const(B,stateid(oregon))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 oregon:s)))",
            "funql": "answer(river(loc_2(stateid('oregon'))))"
        },
        "question": {
            "en": "what rivers are in oregon",
            "de": "welche fleusse gibt es in oregon",
            "el": "ποια ποτάμια είναι στο oregon",
            "fa": "رودخانه های اورگان کدامند ؟",
            "id": "apa saja sungai-sungai di oregon ?",
            "sv": "vilka floder är i oregon ?",
            "th": "แม่น้ำ ใด บ้าง อยู่ ใน รัฐ โอเรกอน",
            "zh": "俄勒冈 州 有 什么 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"illinois\"",
            "prolog": "answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 illinois:s)))",
            "funql": "answer(river(traverse_2(stateid('illinois'))))"
        },
        "question": {
            "en": "what river runs through illinois",
            "de": "welcher fluss durchfliesst illinois",
            "el": "ποιος ποταμός διασχίζει το illinois",
            "fa": "چه رودخانه ای از ایلینوی میگذرد ؟",
            "id": "apa sungai yang melalui illinois ?",
            "sv": "vilken flod rinner genom illinois ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ อิลลินอยส์",
            "zh": "哪条 河流 贯穿 伊利诺伊 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"kalamazoo\"",
            "prolog": "answer(A,(state(A),const(B,cityid(kalamazoo,_)),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> kalamazoo_mi:c $0)))",
            "funql": "answer(state(loc_1(cityid('kalamazoo', _))))"
        },
        "question": {
            "en": "which state is kalamazoo in",
            "de": "in welcher staat ist kalamazoo",
            "el": "σε ποια πολιτεία βρίσκεται το kalamazoo",
            "fa": "کالامازو در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian apakah kalamazoo berada ?",
            "sv": "vilken stat är kalamazoo i ?",
            "th": "เมือง คาลามาซู อยู่ ใน รัฐ ใด",
            "zh": "卡拉马祖 是 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid(austin,_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> austin_tx:c $0))",
            "funql": "answer(loc_1(cityid('austin', _)))"
        },
        "question": {
            "en": "where is austin",
            "de": "wo liegt austin",
            "el": "που είναι το austin",
            "fa": "آسیتن در کجا واقع شده است ؟",
            "id": "di mana austin ?",
            "sv": "vart ligger austin ?",
            "th": "เมือง ออสติน อยู่ ที่ไหน",
            "zh": "奥斯汀 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 austin:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('austin', _)))))"
        },
        "question": {
            "en": "what states have a city named austin",
            "de": "welche staaten haben staedte mit dem namen austin",
            "el": "ποιες πολιτείες έχουν μια πόλη που ονομάζεται austin",
            "fa": "کدام ایالت ها شهری به نام آستین دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota bernama austin ?",
            "sv": "vilka stater har en stad som heter austin ?",
            "th": "รัฐ ใด บ้าง ที่ มี เมือง ชื่อ ว่า ออสติน",
            "zh": "哪些 州 有 一个 名为 奥斯汀 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"pittsburgh\"",
            "prolog": "answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> pittsburgh_pa:c $0)))",
            "funql": "answer(state(loc_1(cityid('pittsburgh', _))))"
        },
        "question": {
            "en": "what state is pittsburgh in",
            "de": "in welcher staat ist pittsburgh",
            "el": "σε ποια πολιτεία βρίσκεται το pittsburgh",
            "fa": "پطزبورگ در کدام ایالت است ؟",
            "id": "di negara bagian manakah pittsburgh berada ?",
            "sv": "vad stat ligger pittsburgh i ?",
            "th": "เมือง พิทส์เบิร์ก อยู่ ใน รัฐ ใด",
            "zh": "匹兹堡 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"flint\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> flint_mi:c $0)))",
            "funql": "answer(state(loc_1(city(cityid('flint', _)))))"
        },
        "question": {
            "en": "what state has the city flint",
            "de": "in welchem staat liegt die stadt flint",
            "el": "ποια πολιτεία έχει την πόλη flint",
            "fa": "فلینت متعلق به کدام ایالت است ؟",
            "id": "apa negara bagian yang memiliki kota flint ?",
            "sv": "vilken stat har staden flint ?",
            "th": "รัฐ ใด บ้าง มี เมือง ชื่อ ฟลินท์",
            "zh": "哪个 州 拥有 弗林特 市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"springfield\"",
            "prolog": "answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (town:<lo,t> $1) (named:<e,<n,t>> $1 springfield:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('springfield', _)))))"
        },
        "question": {
            "en": "what states have towns named springfield",
            "de": "welche staaten haben staedte mit dem namen springfield",
            "el": "ποιες πολιτείες έχουν κωμοπόλεις που ονομάζονται springfield",
            "fa": "کدام ایالت ها شهری به نام اسپرینگفیلد دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama springfield ?",
            "sv": "vilka stater har städer som heter springfield ?",
            "th": "รัฐ ใด บ้าง มี เมือง ที่ ชื่อ ว่า สปริงฟิลด์",
            "zh": "哪些 州 有 名为 斯普林菲尔德 的 小镇"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"san jose\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid('san jose',_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> san_jose_ca:c $0))",
            "funql": "answer(loc_1(cityid('san jose', _)))"
        },
        "question": {
            "en": "where is san jose",
            "de": "wo liegt san jose",
            "el": "που είναι το san jose",
            "fa": "سن خوزه در کجا است ؟",
            "id": "di mana san jose ?",
            "sv": "vart ligger san jose ?",
            "th": "เมือง ซาน โฮเซ อยู่ ตรงไหน",
            "zh": "圣何塞 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"scotts valley\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid('scotts valley',_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> scotts_valley_ca:c $0))",
            "funql": "answer(loc_1(cityid('scotts valley', _)))"
        },
        "question": {
            "en": "where is scotts valley",
            "de": "wo liegt scotts valley",
            "el": "που είναι η scotts valley",
            "fa": "اسکاتس ولی در کجا است ؟",
            "id": "di mana scotts valley ?",
            "sv": "vart ligger scotts valley ?",
            "th": "สก็อตแวลลีย์ อยู่ ตรงไหน",
            "zh": "斯科茨瓦利 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"new orleans\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid('new orleans',_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> new_orleans_la:c $0))",
            "funql": "answer(loc_1(cityid('new orleans', _)))"
        },
        "question": {
            "en": "where is new orleans",
            "de": "wo ist new orleans",
            "el": "που είναι η new orleans",
            "fa": "نیو اورلئان در کجاست ؟",
            "id": "di mana new orleans ?",
            "sv": "vart ligger new orleans ?",
            "th": "เมือง นิวออร์ลีนส์ อยู่ ตรงไหน",
            "zh": "新奥尔良 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"indianapolis\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid(indianapolis,_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> indianapolis_in:c $0))",
            "funql": "answer(loc_1(cityid('indianapolis', _)))"
        },
        "question": {
            "en": "where is indianapolis",
            "de": "wo ist indianapolis",
            "el": "που είναι η indianapolis",
            "fa": "ایندیاناپولیس در کجا واقع شده است ؟",
            "id": "di mana indianapolis ?",
            "sv": "vart ligger indianapolis ?",
            "th": "เมือง อินเดียนาโปลิส อยู่ ที่ไหน",
            "zh": "印第安纳波利斯 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"des moines\"",
            "prolog": "answer(A,(state(A),const(B,cityid('des moines',_)),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> des_moines_ia:c $0)))",
            "funql": "answer(state(loc_1(cityid('des moines', _))))"
        },
        "question": {
            "en": "what state is des moines located in",
            "de": "in welchem staat ist des moines",
            "el": "σε ποια πολιτεία βρίσκεται το des moines",
            "fa": "دس موییز در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian manakah des moines berada ?",
            "sv": "vilken stat ligger des moines i ?",
            "th": "รัฐ ใด มี เมือง ชื่อ เดส์มวง ตั้ง อยู่",
            "zh": "德梅因 位于 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 austin:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(city(cityid('austin', _)))))"
        },
        "question": {
            "en": "what states have cities named austin",
            "de": "welche staaten haben staedte die austin heissen",
            "el": "ποιες πολιτείες έχουν πόλεις με όνομα austin",
            "fa": "کدام آیالت ها شهری دارند که آستین نامیده میشود ؟",
            "id": "apa negara-negara bagian yang memiliki kota-kota bernama austin ?",
            "sv": "vilka stater har städer som heter austin ?",
            "th": "รัฐ ใด บ้าง ที่ มี เมือง ชื่อ ออสติน",
            "zh": "哪些 州 有 名为 奥斯汀 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"boston\"",
            "prolog": "answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> boston_ma:c $0)))",
            "funql": "answer(state(loc_1(cityid('boston', _))))"
        },
        "question": {
            "en": "what state is boston in",
            "de": "in welchem staat ist boston",
            "el": "σε ποια πολιτεία είναι η boston",
            "fa": "بوستون در کدام ایالت است ؟",
            "id": "di negara bagian manakah boston berada ?",
            "sv": "vad stat ligger boston i ?",
            "th": "เมือง บอสตัน ตั้งอยู่ ใน รัฐ ใด",
            "zh": "波士顿 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"fort wayne\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid('fort wayne',_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> fort_wayne_in:c $0))",
            "funql": "answer(loc_1(cityid('fort wayne', _)))"
        },
        "question": {
            "en": "where is fort wayne",
            "de": "wo is fort wayne",
            "el": "που το fort wayne",
            "fa": "فورت واین درکجا واقع شده است ؟",
            "id": "di mana fort wayne ?",
            "sv": "vart ligger fort wayne ?",
            "th": "ฟอร์ต เวยน์ อยู่ ตรงไหน",
            "zh": "韦恩堡 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"houston\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid(houston,_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> houston_tx:c $0))",
            "funql": "answer(loc_1(cityid('houston', _)))"
        },
        "question": {
            "en": "where is houston",
            "de": "wo ist houston",
            "el": "που είναι το houston",
            "fa": "هوستون در کجا واقع شده است ؟",
            "id": "di mana houston ?",
            "sv": "vart ligger houston ?",
            "th": "เมือง ฮุสตัน อยู่ ที่ไหน",
            "zh": "休斯顿 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"springfield\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid(springfield,_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> springfield_il:c $0))",
            "funql": "answer(loc_1(cityid('springfield', _)))"
        },
        "question": {
            "en": "where is springfield",
            "de": "wo ist springfield",
            "el": "που είναι το springfield",
            "fa": "اسپرینگفیلد کجا واقع شده است ؟",
            "id": "di mana springfield ?",
            "sv": "vart ligger springfield ?",
            "th": "เมือง สปริงฟิลด์ อยู่ ตรงไหน",
            "zh": "斯普林菲尔德 镇 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"baton rouge\"",
            "prolog": "answer(A,(loc(B,A),const(B,cityid('baton rouge',_))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> baton_rouge_la:c $0))",
            "funql": "answer(loc_1(cityid('baton rouge', _)))"
        },
        "question": {
            "en": "where is baton rouge",
            "de": "wo ist baton rouge",
            "el": "πού είναι το baton rouge",
            "fa": "باتون راگ در کجا واقع شده است ؟",
            "id": "di mana baton rouge ?",
            "sv": "vart ligger baton rouge ?",
            "th": "บาทงรูจ อยู่ ที่ไหน",
            "zh": "巴吞鲁日 市 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"rochester\"",
            "prolog": "answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> rochester_ny:c $0)))",
            "funql": "answer(state(loc_1(cityid('rochester', _))))"
        },
        "question": {
            "en": "in which state is rochester",
            "de": "in welchem staat liegt rochester",
            "el": "σε ποια πολιτεία είναι το rochester",
            "fa": "روچستر در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian apakah rochester ?",
            "sv": "i vilken stat ligger rochester ?",
            "th": "เมือง โรเชสเตอร์ อยู่ ใน รัฐ ไหน",
            "zh": "罗切斯特 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"denver\"",
            "prolog": "answer(A,(state(A),city(B),const(B,cityid(denver,_)),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> denver_co:c $0)))",
            "funql": "answer(state(loc_1(city(cityid('denver', _)))))"
        },
        "question": {
            "en": "which state is the city denver located in",
            "de": "in welchem staat liegt denver",
            "el": "σε ποια πολιτεία βρίσκεται η πόλη denver",
            "fa": "شهر دنور در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian apakah kota denver terletak ?",
            "sv": "vilken stat ligger staden denver i ?",
            "th": "รัฐ ใด บ้าง มี เมือง เดนเวอร์ อยู่",
            "zh": "丹佛 市 位于 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"springfield\"",
            "prolog": "answer(A,(state(A),loc(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 springfield:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(intersection(state(loc_2(countryid('usa'))), loc_1(city(cityid('springfield', _)))))"
        },
        "question": {
            "en": "what states in the united states have a city of springfield",
            "de": "welche staaten in den vereinigten staaten habe eine stadt springfield",
            "el": "ποιες πολιτείες στις ηνωμένες πολιτείες έχουν πόλη springfield",
            "fa": "کدام ایالات در ایالات متحده شهری به نام اسپرینگفیلد دارند ؟",
            "id": "negara-negara bagian apa di amerika serikat memiliki kota springfield ?",
            "sv": "vilka stater i förenta staterna har en stad springfield ?",
            "th": "รัฐ ใด บ้าง ใน สหรัฐอเมริกา ที่ มี เมือง ชื่อ สปริงฟิลด์",
            "zh": "在 美国 有 什么 州 有 一个 斯普林菲尔德 市"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,(population(B,A),largest(B,state(B))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(population_1(largest(state(all))))"
        },
        "question": {
            "en": "what is the population of the largest state",
            "de": "wie gross ist die bevoelkerung in dem groessten staat",
            "el": "ποιος είναι ο πληθυσμός της μεγαλύτερης πολιτείας",
            "fa": "جمعیت بزرگترین ایالت چقدر است ؟",
            "id": "berapa populasi dari negara bagian terbesar ?",
            "sv": "vad är folkmängden i den största staten ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด มี ประชากร กี่ คน",
            "zh": "最大 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(austin,_))))",
            "lambda": "(population:<lo,i> austin_tx:c)",
            "funql": "answer(population_1(cityid('austin', _)))"
        },
        "question": {
            "en": "what is the population of austin",
            "de": "welches ist die einwohnerzahl von austin",
            "el": "ποιος είναι ο πληθυσμός του austin",
            "fa": "جمعیت آستین چقدر است ؟",
            "id": "berapa populasi austin ?",
            "sv": "vad är folkmängden i austin ?",
            "th": "เมือง ออสติน รัฐ เท็กซัส มี ประชากร กี่ คน",
            "zh": "奥斯汀 市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"new york\"",
            "prolog": "answer(A,(size(B,A),const(B,cityid('new york',_))))",
            "lambda": "(size:<lo,i> new_york_ny:c)",
            "funql": "answer(size(city(cityid('new york', _))))"
        },
        "question": {
            "en": "how big is the city of new york",
            "de": "wie gross ist die stadt new york",
            "el": "πόση μεγάλη είναι η πόλη της new york",
            "fa": "وسعت شهر نیویورک چقدر است ؟",
            "id": "seberapa besarkah kota new york ?",
            "sv": "hur stor är staden new york ?",
            "th": "เมือง นิวยอร์ค มี ขนาด เท่าใด",
            "zh": "纽约 市 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"san francisco\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid('san francisco',_))))",
            "lambda": "(population:<lo,i> san_francisco_ca:c)",
            "funql": "answer(population_1(cityid('san francisco', _)))"
        },
        "question": {
            "en": "how many people live in san francisco",
            "de": "wie viele leute wohnen in san francisco",
            "el": "πόσοι άνθρωποι ζουν στο san francisco",
            "fa": "چند نفر در سانفرانسیسکو زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di san francisco ?",
            "sv": "hur många människor bor i san francisco ?",
            "th": "เมือง ซานฟรานซิสโก มี ประชากร กี่ คน",
            "zh": "有 多少 人 生活 在 旧金山"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"sacramento\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(sacramento,_))))",
            "lambda": "(population:<lo,i> sacramento_ca:c)",
            "funql": "answer(population_1(cityid('sacramento', _)))"
        },
        "question": {
            "en": "what is the population of sacramento",
            "de": "wie gross is die bevoelkerungszahl von sacramento",
            "el": "ποιος είναι ο πληθυσμός του sacramento",
            "fa": "جمعیت ساکرامنتو چقدر است ؟",
            "id": "berapa populasi sacramento ?",
            "sv": "vad är folkmängden i sacramento ?",
            "th": "เมือง ซาคราเม็นโต มี ประชากร กี่ คน",
            "zh": "萨克拉门托 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"denver\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(denver,_))))",
            "lambda": "(population:<lo,i> denver_co:c)",
            "funql": "answer(population_1(cityid('denver', _)))"
        },
        "question": {
            "en": "what is the population of denver",
            "de": "welches ist die bevoelkerungszahl von denver",
            "el": "ποιος είναι ο πληθυσμός του denver",
            "fa": "جمعیت دنور چقدر است ؟",
            "id": "berapa populasi denver ?",
            "sv": "vad är folkmängden i denver ?",
            "th": "เมือง เดนเวอร์ มี ประชากร เท่าไหร่",
            "zh": "丹佛 市 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"seattle\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(seattle,_))))",
            "lambda": "(population:<lo,i> seattle_wa:c)",
            "funql": "answer(population_1(cityid('seattle', _)))"
        },
        "question": {
            "en": "what is the population of seattle",
            "de": "wie lautet die bevoelkerung von seattle",
            "el": "ποιος είναι ο πληθυσμός του seattle",
            "fa": "جمعیت سیاتل چقدر است ؟",
            "id": "berapa populasi seattle ?",
            "sv": "vad är folkmängden i seattle ?",
            "th": "เมือง ซีแอตเทิล มี ประชากร กี่ คน",
            "zh": "西雅图 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boulder\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boulder,_))))",
            "lambda": "(population:<lo,i> boulder_co:c)",
            "funql": "answer(population_1(cityid('boulder', _)))"
        },
        "question": {
            "en": "population of boulder",
            "de": "leute in boulder",
            "el": "πληθυσμός του boulder",
            "fa": "جمعیت بولدر ؟",
            "id": "populasi dari boulder ?",
            "sv": "befolkning i boulder ?",
            "th": "เมือง โบลเดอร์ มี ประชากร เท่าไหร่",
            "zh": "博尔德 市 的 居民 人数 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boston\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boston,_))))",
            "lambda": "(population:<lo,i> boston_ma:c)",
            "funql": "answer(population_1(cityid('boston', _)))"
        },
        "question": {
            "en": "what is the population in boston",
            "de": "wie gross ist die bevoelkerung von boston",
            "el": "ποιος είναι ο πληθυσμός της boston",
            "fa": "جمعیت بوستون چقدر است ؟",
            "id": "berapa populasi boston ?",
            "sv": "vad är folkmängden i boston ?",
            "th": "เมือง บอสตัน มี ประชากร เท่าไหร่",
            "zh": "波士顿 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"kalamazoo\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))",
            "lambda": "(population:<lo,i> kalamazoo_mi:c)",
            "funql": "answer(population_1(cityid('kalamazoo', _)))"
        },
        "question": {
            "en": "how many people live in kalamazoo",
            "de": "wie viele menschen leben in kalamazoo",
            "el": "πόσοι άνθρωποι ζουν στο kalamazoo",
            "fa": "چند نفر در کالامازو زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di kalamazoo ?",
            "sv": "hur många människor bor i kalamazoo ?",
            "th": "เมือง คาลามาซู มี ประชากร กี่ คน",
            "zh": "有 多少 人 居住 在 卡拉马祖"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boulder\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boulder,_))))",
            "lambda": "(population:<lo,i> boulder_co:c)",
            "funql": "answer(population_1(cityid('boulder', _)))"
        },
        "question": {
            "en": "people in boulder",
            "de": "wie hoch ist die bevoelkerung von boulder",
            "el": "άνθρωποι στο boulder",
            "fa": "جمعیت بولدر ؟",
            "id": "orang-orang di boulder ?",
            "sv": "människor i boulder ?",
            "th": "จำนวน ประชากร ใน เมือง โบลเดอร์",
            "zh": "博尔德 市 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boulder\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boulder,_))))",
            "lambda": "(population:<lo,i> boulder_co:c)",
            "funql": "answer(population_1(cityid('boulder', _)))"
        },
        "question": {
            "en": "how many people in boulder",
            "de": "anzahl staatsbuerger in boulder",
            "el": "πόσοι άνθρωποι στο boulder",
            "fa": "چند نفر در بولدر زندگی میکنند ؟",
            "id": "berapa banyak orang di boulder ?",
            "sv": "hur många människor i boulder ?",
            "th": "ประชากร ใน เมือง โบลเดอร์",
            "zh": "博尔德 市 有 多少 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"montgomery\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(montgomery,_))))",
            "lambda": "(population:<lo,i> montgomery_al:c)",
            "funql": "answer(population_1(cityid('montgomery', _)))"
        },
        "question": {
            "en": "how many inhabitants does montgomery have",
            "de": "wieviele einwohner hat montgomery",
            "el": "πόσους κατοίκους έχει το montgomery",
            "fa": "چه تعداد در مونتگمری سکونت دارند ؟",
            "id": "berapa banyak penduduk yang dimiliki montgomery ?",
            "sv": "hur många invånare har montgomery ?",
            "th": "เมือง มอนต์โกเมอรี มี ผู้อยู่อาศัย จำนวน เท่าไหร่",
            "zh": "蒙哥马利 市 有 多少 居民 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"riverside\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(riverside,_))))",
            "lambda": "(population:<lo,i> riverside_ca:c)",
            "funql": "answer(population_1(cityid('riverside', _)))"
        },
        "question": {
            "en": "how many people live in riverside",
            "de": "wie viele leute wohnen in riverside",
            "el": "πόσοι άνθρωποι ζουν στην όχθη ποταμού",
            "fa": "چند نفر در رایورساید زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di riverside ?",
            "sv": "hur många människor bor i riverside ?",
            "th": "เมือง ริเวอร์ไซด์ มี ประชากร เท่าไหร่",
            "zh": "有 多少 人 住 在 里弗赛德斯塔特 市"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"atlanta\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(atlanta,_))))",
            "lambda": "(population:<lo,i> atlanta_ga:c)",
            "funql": "answer(population_1(cityid('atlanta', _)))"
        },
        "question": {
            "en": "what is the population of atlanta",
            "de": "wie gross ist die bevoelkerung von atlanta",
            "el": "ποιος είναι ο πληθυσμός της atlanta",
            "fa": "جمعیت آتلانتا چقدر است ؟",
            "id": "berapa populasi atlanta ?",
            "sv": "vad är folkmängden i atlanta ?",
            "th": "เมือง แอตแลนต้า มี ประชากร กี่ คน",
            "zh": "亚特兰大 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(austin,_))))",
            "lambda": "(population:<lo,i> austin_tx:c)",
            "funql": "answer(population_1(cityid('austin', _)))"
        },
        "question": {
            "en": "how many people live in austin",
            "de": "wie viele menschen leben in austin",
            "el": "πόσοι άνθρωποι ζουν στο austin",
            "fa": "چند نفر در آستین زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di austin ?",
            "sv": "hur många människor bor i austin ?",
            "th": "เมือง ออสติน มี ประชากร เท่าใด",
            "zh": "有 多少 人 居住 在 奥斯汀"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boulder\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boulder,_))))",
            "lambda": "(population:<lo,i> boulder_co:c)",
            "funql": "answer(population_1(cityid('boulder', _)))"
        },
        "question": {
            "en": "number of citizens in boulder",
            "de": "wie viele staatsbuerger in boulder",
            "el": "ο αριθμός των πολιτών στο boulder",
            "fa": "در بولدر چند شهروند سکونت دارند ؟",
            "id": "jumlah warga di boulder ?",
            "sv": "antal medborgare i boulder ?",
            "th": "เมือง โบลเดอร์ มี ประชากร เท่าไหร่",
            "zh": "在 博尔德 有 多少 公民"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boulder\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boulder,_))))",
            "lambda": "(population:<lo,i> boulder_co:c)",
            "funql": "answer(population_1(cityid('boulder', _)))"
        },
        "question": {
            "en": "how many citizens in boulder",
            "de": "anzahl leute in boulder",
            "el": "πόσοι πολίτες στο boulder",
            "fa": "بولدر چند شهروند دارد ؟",
            "id": "berapa banyak warga di boulder ?",
            "sv": "hur många medborgare i boulder ?",
            "th": "เมือง โบลเดอร์ มี ประชากร กี่ คน",
            "zh": "在 博尔德 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"hawaii\" ORDER BY POPULATION LIMIT 1) AND STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(hawaii)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 hawaii:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(city(loc_2(stateid('hawaii')))))"
        },
        "question": {
            "en": "what is the smallest city in hawaii",
            "de": "welches ist die kleinste stadt in hawaii",
            "el": "ποια είναι η μικρότερη πόλη στη hawaii",
            "fa": "نام کوچکترین شهرستان در هاوایی چیست ؟",
            "id": "apa kota terkecil di hawaii ?",
            "sv": "vilken är den minsta staden på hawaii ?",
            "th": "เมือง ที่ เล็ก ที่สุด ของ รัฐ ฮาวาย คือ เมือง ใด",
            "zh": "在 夏威夷 州 最小 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"washington\" ORDER BY POPULATION LIMIT 1) AND STATE_NAME = \"washington\"",
            "prolog": "answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(washington)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 washington:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(city(loc_2(stateid('washington')))))"
        },
        "question": {
            "en": "what is the smallest city in washington",
            "de": "was ist die kleinste stadt in washington",
            "el": "ποια είναι η μικρότερη πόλη στην washington",
            "fa": "نام کوچکترین شهرستان در واشنگتن چیست ؟",
            "id": "apa kota terkecil di washington ?",
            "sv": "vilken är den minsta staden i washington ?",
            "th": "เมือง ที่ เล็ก ที่สุด ใน รัฐ วอชิงตัน คือ เมือง ใด",
            "zh": "华盛顿 的 最小 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"alaska\" ORDER BY POPULATION LIMIT 1) AND STATE_NAME = \"alaska\"",
            "prolog": "answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 alaska:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(city(loc_2(stateid('alaska')))))"
        },
        "question": {
            "en": "what is the smallest city in alaska",
            "de": "was ist die kleinste stadt in alaska",
            "el": "ποια είναι η μικρότερη πόλη στην αλάσκα",
            "fa": "نام کوچکترین شهرستان در آلاسکا چیست ؟",
            "id": "apa kota terkecil di alaska ?",
            "sv": "vilken är den minsta staden i alaska ?",
            "th": "เมือง เล็ก ที่สุด ใน รัฐ อลาสกา คือ เมือง ใด",
            "zh": "在 阿拉斯加 最小 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),longest(B,(river(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(loc_1(longest(river(all)))))"
        },
        "question": {
            "en": "which state has the longest river",
            "de": "welcher staat hat den laengsten fluss",
            "el": "ποια πολιτεία έχει το μακρύτερο ποτάμι",
            "fa": "کدام ایالت بلند ترین رود را دارد ؟",
            "id": "apa negara bagian yang memiliki sungai terpanjang ?",
            "sv": "vilken stat har den längsta floden ?",
            "th": "รัฐ ใด มี แม่น้ำ สาย ยาว ที่สุด",
            "zh": "哪个 州 有 最长 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),traverse(B,A),longest(B,(river(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(traverse_1(longest(river(all)))))"
        },
        "question": {
            "en": "what are the states through which the longest river runs",
            "de": "welche staaten durchquert der laenste fluss",
            "el": "ποιες είναι οι πολιτείες τις οποίες διασχίζει ο μακρύτερος ποταμός",
            "fa": "بلندترین رود از چه ایالت هایی میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai terpanjang ?",
            "sv": "vilka är de stater genom vilka den längsta floden rinner ?",
            "th": "รัฐ ใด บ้าง ที่ แม่น้ำ สาย ที่ ยาว ที่สุด ไหล ผ่าน",
            "zh": "最长 的 河流 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),longest(B,river(B)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(traverse_1(longest(river(all)))))"
        },
        "question": {
            "en": "which states does the longest river cross",
            "de": "durch welche staaten fliesst der laengste fluss",
            "el": "ποιες πολιτείες διασχίζει το μεγαλύτερο ποτάμι",
            "fa": "بلندترین رود از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilintasi sungai terpanjang ?",
            "sv": "vilka stater rinner den längsta floden genom ?",
            "th": "รัฐ ใด มี แม่น้ำ ยาว ที่สุด",
            "zh": "最长 的 河流 穿过 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,(density(B,A),smallest(B,state(B))))",
            "lambda": "(density:<lo,i> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(density_1(smallest(state(all))))"
        },
        "question": {
            "en": "what is the population density of the smallest state",
            "de": "wie gross ist die bevoelkerungsdichte des kleinsten staates",
            "el": "ποια είναι η πυκνότητα πληθυσμού της μικρότερης πολιτείας",
            "fa": "چگالی جمعیت کوچکترین ایالت چقدر است ؟",
            "id": "berapa kepadatan penduduk dari negara bagian terkecil ?",
            "sv": "vad är befolkningstätheten i den minsta staten ?",
            "th": "รัฐ ที่ เล็ก ที่สุด มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "面积 最小 的 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION > ( SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,(state(A),loc(B,A),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(texas))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 $0) (>:<i,<i,t>> (elevation:<lo,i> $1) (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (and:<t*,t> (place:<p,t> $2) (loc:<lo,<lo,t>> $2 texas:s))) (lambda $2:e (elevation:<lo,i> $2))))))))))",
            "funql": "answer(state(loc_1(place(higher_2(highest(place(loc_2(stateid('texas')))))))))"
        },
        "question": {
            "en": "which states have points that are higher than the highest point in texas",
            "de": "welche staaten haben punkte die hoeher liegen als der hoechste punkt in texas",
            "el": "ποιες πολιτείες έχουν σημεία ψηλότερα από το ψηλότερο σημείο στο texas",
            "fa": "کدام ایالت ها نقطه ای بلند تر از بلندترین نقطه تگزاس دارند ؟",
            "id": "apa negara-negara bagian yang memiliki titik-titik yang lebih tinggi dari titik tertinggi di texas ?",
            "sv": "vilka stater har punkter som är högre än den högsta punkten i texas ?",
            "th": "รัฐ ใด มี จุด ที่ สูง กว่า จุด สูง สุด ของ รัฐ เท็กซัส บ้าง",
            "zh": "哪些 州 含有 比 德克萨斯 州 的 最高 点 高 的 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION > ( SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"colorado\" )",
            "prolog": "answer(A,(state(A),high_point(A,B),higher(B,C),high_point(D,C),const(D,stateid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (>:<i,<i,t>> (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 $0))) (lambda $1:e (elevation:<lo,i> $1)))) (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 colorado:s))) (lambda $1:e (elevation:<lo,i> $1)))))))",
            "funql": "answer(state(high_point_2(higher_2(high_point_1(stateid('colorado'))))))"
        },
        "question": {
            "en": "what state 's high point is higher than that of colorado",
            "de": "welche hoechstgelegenen punkte eines staates liegen hoeher als derjenige von colorado",
            "el": "ποιων πολιτειών το ψηλότερο σημείο είναι ψηλότερο από αυτό του colorado",
            "fa": "بلند ترین نقطه کدام ایالت از بلندترین نقطه کلرادو بلند تر است ؟",
            "id": "negara bagian apa dengan titik tinggi lebih tinggi dari titik tinggi colorado ?",
            "sv": "vilken stats högsta punkt är högre än den i colorado ?",
            "th": "จุด สูง สุด ของ รัฐ ใด ที่ สูง กว่า จุด สูง สุด ของ รัฐ โคโลราโด",
            "zh": "哪些 州 的 高点 比 科罗拉多 州 的 高点 高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"montana\"",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 montana:s))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(stateid('montana'))))))"
        },
        "question": {
            "en": "how high is the highest point in montana",
            "de": "wie hoch ist der hoechste punkt in montana",
            "el": "πόσο ψηλό είναι το ψηλότερο σημείο στη montana",
            "fa": "بلند ترین نقطه مونتانا چقدر ارتفاع دارد ؟",
            "id": "seberapa tinggikah titik tertinggi di montana ?",
            "sv": "hur hög är den högsta punkten i montana ?",
            "th": "จุด สูง สุด ของ รัฐ มอนตานา สูง เท่าไหร่",
            "zh": "蒙大拿 州 的 最高 点 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"south carolina\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('south carolina')))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 south_carolina:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('south carolina')))))"
        },
        "question": {
            "en": "what is the highest elevation in south carolina",
            "de": "welches ist die hoechste erhoehung in south carolina",
            "el": "ποιο είναι το μεγαλύτερο υψόμετρο στη south carolina",
            "fa": "بلندترین ارتفاع در کالیفرنیای جنوبی کجاست ؟",
            "id": "berapa elevasi tertinggi di carolina selatan ?",
            "sv": "vad är den högsta höjden i south carolina ?",
            "th": "จุด สูง สุด ของ รัฐ เซาท์แคโรไลนา อยู่ ตรงไหน",
            "zh": "南卡罗来纳 州 最高 海拔 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"louisiana\"",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(louisiana))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 louisiana:s))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(stateid('louisiana'))))))"
        },
        "question": {
            "en": "how high is the highest point of louisiana",
            "de": "wie hoch liegt der hoechste punkt von louisiana",
            "el": "ποιο είναι το ψηλότερο σημείο στη louisiana",
            "fa": "بلند ترین نقطه لوزانیا چقدر ارتفاع دارد ؟",
            "id": "seberapa tinggikah titik tertinggi dari louisiana ?",
            "sv": "hur hög är den högsta punkten i louisiana ?",
            "th": "จุด สูง สุด ของ รัฐ หลุยเซียนา มี ความ สูง เท่าไหร่",
            "zh": "路易斯安那 州 的 最高 点 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"delaware\"",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(delaware))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 delaware:s))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(stateid('delaware'))))))"
        },
        "question": {
            "en": "how high is the highest point of delaware",
            "de": "wie hcho liegt der hoechste punkt von delaware",
            "el": "πόσο ψηλά είναι το ψηλότερο σημείο στο delaware",
            "fa": "بلند ترین نقطه دلاور شهر چقدر ارتفاع دارد ؟",
            "id": "seberapa tinggikah titik tertinggi dari delaware ?",
            "sv": "hur hög är den högsta punkten i delaware ?",
            "th": "จุด สูง สุด ของ รัฐ เดลาแวร์ สูง เท่าไหร่",
            "zh": "特拉华 州 的 最高 点 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the longest river in america",
            "de": "welches ist der laengste fluss der vereinigten staaten",
            "el": "ποιο είναι το μακρύτερο ποτάμι στην αμερική",
            "fa": "طولانی ترین رودخانه آمریکا کدامست ؟",
            "id": "apa sungai terpanjang di amerika ?",
            "sv": "vad är den längsta floden i amerika ?",
            "th": "แม่น้ำ สาย ใด เป็น แม่น้ำ สาย ที่ ยาว ที่สุด ใน อเมริกา",
            "zh": "美国 最长 的 河流 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "name the longest river in us",
            "de": "was ist der laengste fluss in den usa",
            "el": "ονόμασε το μακρύτερο ποτάμι στις us",
            "fa": "بلندترین رودخانه ایالات متحده را نام ببر .",
            "id": "nama sungai terpanjang di as .",
            "sv": "namnge den längsta floden i usa .",
            "th": "แม่น้ำ ที่ ยาว ที่สุด ใน สหรัฐอเมริกา ชื่อ ว่า อะไร",
            "zh": "美国 最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what river is the longest one in the united states",
            "de": "welcher fluss ist der laengste in den vereinigten staaten",
            "el": "ποιο ποτάμι είναι το μακρύτερο στις ηνωμένες πολιτείες",
            "fa": "چه رودخانه ای در ایالات متحده بلندترین است ؟",
            "id": "apa sungai yang terpanjang di amerika serikat ?",
            "sv": "vilken flod är den längsta i usa ?",
            "th": "แม่น้ำ สาย ใด เป็น แม่น้ำ สาย ที่ ยาว ที่สุด ใน สหรัฐอเมริกา",
            "zh": "美国 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the longest river in the us",
            "de": "nenne den laengsten fluss in den usa",
            "el": "ποιο είναι το μακρύτερο ποτάμι στις us",
            "fa": "نام بلندترین رودخانه ایالات متحده چیست ؟",
            "id": "apa sungai terpanjang di as ?",
            "sv": "vad är den längsta floden i usa ?",
            "th": "บอก ที ว่า แม่น้ำ สาย ใด เป็น แม่น้ำ ที่ ยาว ที่สุด ที่ ไหล ผ่าน อเมริกา",
            "zh": "美国 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,longest(A,river(A)))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(all)))"
        },
        "question": {
            "en": "what is the longest river",
            "de": "was ist der laengste fluss",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι",
            "fa": "طولانی ترین رودخانه کدامست ؟",
            "id": "apa sungai terpanjang ?",
            "sv": "vad är den längsta floden ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด มี ชื่อ ว่า อะไร",
            "zh": "最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1)",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the longest river in the united states",
            "de": "welches ist der laengste fluss in amerika",
            "el": "ποιο είναι το μακρύτερο ποτάμι στις ηνωμένες πολιτείες",
            "fa": "بلندترین رودخانه ایالات متحده کدامست ؟",
            "id": "apa sungai terpanjang di amerika serikat ?",
            "sv": "vilken är den längsta floden i usa ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด ใน อเมริกา คือ แม่น้ำ ใด",
            "zh": "美国 最长 的 河流 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),largest(B,(city(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (city:<c,t> $1)) (lambda $1:e (size:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(largest(city(all)))))"
        },
        "question": {
            "en": "what state has the largest city",
            "de": "welcher staat hat die groesste stadt",
            "el": "ποια πολιτεία έχει τη μεγαλύτερη πόλη",
            "fa": "بزرگترین شهر در کدام ایالت واقع شده است ؟",
            "id": "apa negara bagian yang memiliki kota terbesar ?",
            "sv": "vilken stat har den största staden ?",
            "th": "รัฐ ใด มี เมือง ที่ ใหญ่ ที่สุด",
            "zh": "哪个 州 拥有 最大 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),largest(B,(city(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (city:<c,t> $1)) (lambda $1:e (size:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(largest(city(all)))))"
        },
        "question": {
            "en": "which state has the largest city",
            "de": "welcher staat hat die groesste stadt",
            "el": "ποια πολιτεία έχει τη μεγαλύτερη πόλη",
            "fa": "بزرگترین شهر در کدام ایالت واقع شده است ؟",
            "id": "apa negara bagian yang memiliki kota terbesar ?",
            "sv": "vilken stat har den största staden ?",
            "th": "รัฐ ใด มี เมือง ที่ ใหญ่ ที่สุด",
            "zh": "哪个 州 有 最大 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (city:<c,t> $1)) (lambda $1:e (population:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(largest_one(population_1(city(all))))))"
        },
        "question": {
            "en": "what state has the city with the most population",
            "de": "welcher staat hat die stadt mit der groessten bevoelkerung",
            "el": "ποια πολιτεία έχει την πόλη με τον περισσότερο πληθυσμό",
            "fa": "کدام ایالت شهری با بیشترین جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kota dengan populasi tertinggi ?",
            "sv": "vilken stat har staden med mest befolkning ?",
            "th": "รัฐ ใด ที่ มี เมือง ที่ มี ประชากร มาก ที่สุด",
            "zh": "哪个 州 拥有 人口 最多 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the biggest state in continental us",
            "de": "welches ist der groesste staat auf dem us -festland",
            "el": "ποια είναι η μεγαλύτερη πολιτεία στις ηπειρωτικές ηπα",
            "fa": "بزرگترین ایالت در قاره امریکا کدام است ؟",
            "id": "apa negara bagian terbesar di benua amerika ?",
            "sv": "vilken är den största staten i kontinentala usa ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด ใน สหรัฐอเมริกา",
            "zh": "美国 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),area(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(largest_one(area_1(state(all))))"
        },
        "question": {
            "en": "state the state with the largest area",
            "de": "nenne den staat mit der groessten flaeche",
            "el": "ονόμασε την πολιτεία με τη μεγαλύτερη επιφάνεια",
            "fa": "کدام ایالت بیشترین وسعت را داراست ؟",
            "id": "sebutkan negara bagian dengan luas wilayah terbesar .",
            "sv": "säg staten med den största arean .",
            "th": "จง บอก รัฐ ที่ มี พื้นที่ ใหญ่ ที่สุด มา",
            "zh": "说出 面积 最大 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the largest state in usa",
            "de": "welcher ist der groesste staat in den usa",
            "el": "ποια είναι η μεγαλύτερη πολιτεία στις ηπα",
            "fa": "بزگترین ایالت آمریکا کجاست ؟",
            "id": "apa negara bagian terbesar di amerika serikat ?",
            "sv": "vad är den största staten i usa ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด ใน อเมริกา คือ รัฐ ใด",
            "zh": "美国 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,state(A)))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(all)))"
        },
        "question": {
            "en": "what is the biggest state",
            "de": "wie lautet der groesste staat",
            "el": "ποια είναι η μεγαλύτερη πολιτεία",
            "fa": "بزرگترین ایالت کدام است ؟",
            "id": "apa negara bagian terbesar ?",
            "sv": "vilken är den största staten ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด",
            "zh": "最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the biggest state in the usa",
            "de": "wie lautet der groesste staat in den usa",
            "el": "ποια είναι η μεγαλύτερη πολιτεία στις usa",
            "fa": "بزرگترین ایالت در ایالات متحده امریکا کدام است ؟",
            "id": "apa negara bagian terbesar di amerika serikat ?",
            "sv": "vilken är den största delstaten i usa ?",
            "th": "รัฐ ใด ใหญ่ ที่สุด ใน สหรัฐ",
            "zh": "美国 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,state(A)))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(all)))"
        },
        "question": {
            "en": "give me the largest state",
            "de": "welcher stadt ist der groesste",
            "el": "δώσε μου τη μεγαλύτερη πολιτεία",
            "fa": "بزرگترین استان را به من بده .",
            "id": "berikan negara bagian terbesar .",
            "sv": "ge mig den största staten .",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด",
            "zh": "给 我 最大 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the largest state in the us",
            "de": "wie lautet der groesste staat in den usa",
            "el": "ποια είναι η μεγαλύτερη πολιτεία στις ηπα",
            "fa": "بزرگترین ایالت آمریکا کجاست ؟",
            "id": "apa negara bagian terbesar di as ?",
            "sv": "vilken är den största staten i usa ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด บน แผ่นดิน อเมริกา",
            "zh": "美国 最大 的 州 是 哪个 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,state(A)))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(all)))"
        },
        "question": {
            "en": "what is the largest state",
            "de": "nenne mir den groessten staat",
            "el": "ποια είναι η μεγαλύτερη πολιτεία",
            "fa": "بزگترین ایالت کجاست ؟",
            "id": "apa negara bagian terbesar ?",
            "sv": "vad är den största delstaten ?",
            "th": "รัฐ ใด ใหญ่ ที่สุด",
            "zh": "最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"mississippi\" )",
            "prolog": "answer(A,(high_point(B,A),state(B),next_to(B,C),const(C,stateid(mississippi))))",
            "lambda": "(lambda $0:e (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 mississippi:s) (high_point:<e,<e,t>> $1 $0)))))",
            "funql": "answer(high_point_1(state(next_to_2(stateid('mississippi')))))"
        },
        "question": {
            "en": "what are the high points of states surrounding mississippi",
            "de": "welches sind die hoechsten punkte der an mississippi grenzenden staaten",
            "el": "ποια είναι τα ψηλά σημεία των πολιτειών που περιβάλλουν τον mississippi",
            "fa": "بلند ترین نقاط اطراف میسیسیپی کدامند ؟",
            "id": "apa titik tinggi dari negara-negara bagian di sekitar mississippi ?",
            "sv": "vilka är de högsta punkterna i staterna kring mississippi ?",
            "th": "จง หา จุด สูง สุด ของ รัฐ ที่ ล้อมรอบ รัฐ มิสซิสซิปปี",
            "zh": "什么 是 密西西比 州 周边 的 州 的 高点"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what state has the sparsest population density",
            "de": "welcher staat hat die niedrigsten bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει την αραιότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت پراکنده ترین جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terendah ?",
            "sv": "vilken stat har den glesaste befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร น้อย ที่สุด",
            "zh": "哪个 州 具有 最 稀少 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the sparsest population density",
            "de": "welcher staat hat die niedrigste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει την αραιότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت غیر متمرکز ترین جمعیت شهری را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terendah ?",
            "sv": "vilken stat har den glesaste befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ประชากร น้อย ที่สุด",
            "zh": "哪个 州 的 人口 密度 最 稀少"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what state has the least population density",
            "de": "welcher staat hat die niedrigste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت بیشترین چگالی جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terendah ?",
            "sv": "vilken stat har minsta befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร เบาบาง ที่สุด",
            "zh": "哪个 州 拥有 最小 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the least population density",
            "de": "welcher staat hat die geringste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت کمترین تمرکز جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terkecil ?",
            "sv": "vilken stat har lägsta befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร เบาบาง ที่สุด",
            "zh": "哪个 州 有 最小 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),density(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(smallest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what state has the smallest population density",
            "de": "welcher staat hat die kleinste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت تراکم جمعیت کمتری دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terkecil ?",
            "sv": "vilken stat har den minsta befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร เบาบาง ที่สุด",
            "zh": "哪个 州 具有 最小 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(alaska)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 alaska:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(mountain(loc_2(stateid('alaska')))))"
        },
        "question": {
            "en": "what is the highest mountain in alaska",
            "de": "welches ist der hoechste berg in alaska",
            "el": "ποιο είναι το ψηλότερο βουνό στην alaska",
            "fa": "بلند ترین کوه در آلاسکا کجاست ؟",
            "id": "apa gunung tertinggi di alaska ?",
            "sv": "vad är det högsta berget i alaska ?",
            "th": "ภูเขา ที่ สูง ที่สุด ของ รัฐ อลาสก้า ชื่อ ว่า อะไร",
            "zh": "阿拉斯加 州 最高 的 山峰 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"wyoming\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 wyoming:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('wyoming')))))"
        },
        "question": {
            "en": "what is the highest point in wyoming",
            "de": "welches ist der hoechstgelegene punkt von wyoming",
            "el": "ποιο είναι το ψηλότερο σημείο στο wyoming",
            "fa": "بلندترین نقطه در ویومینگ کجاست ؟",
            "id": "apa titik tertinggi di wyoming ?",
            "sv": "vad är den högsta punkten i wyoming ?",
            "th": "จุด สูง ของ รัฐ ไวโอมิง มี อะไร บ้าง",
            "zh": "怀俄明 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"colorado\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 colorado:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('colorado')))))"
        },
        "question": {
            "en": "what is the highest point in colorado",
            "de": "wie lautet der hoechste punkt in colorado",
            "el": "ποιο είναι το ψηλότερο σημείο στο colorado",
            "fa": "بلندترین نقطه در کلرادو کجاست ؟",
            "id": "apa titik tertinggi di colorado ?",
            "sv": "vad är den högsta punkten i colorado ?",
            "th": "จุด สูง สุด ของ รัฐ โคโลราโด อยู่ ที่ไหน",
            "zh": "科罗拉多 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"oregon\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),state(B),const(B,stateid(oregon)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 oregon:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(state(stateid('oregon'))))))"
        },
        "question": {
            "en": "could you tell me what is the highest point in the state of oregon",
            "de": "koenntest du mir sagen welches der hoechstgelegene punkt im staate oregon ist",
            "el": "μπορείς να μου πεις ποιο είναι το ψηλότερο σημείο στην πολιτεία του oregon",
            "fa": "میتوانی به من بگویی بلند ترین نقطه ایالت ارگون کدامست ؟",
            "id": "dapatkah anda memberitahu saya titik tertinggi di negara bagian oregon ?",
            "sv": "kan du säga mig vilken som är högsta punkten i delstaten oregon ?",
            "th": "ไหน บอก ซิ ว่า จุด สูง สุด ของ รัฐ โอเรกอน อยู่ ตรงไหน",
            "zh": "你 能 告诉 我 俄勒冈 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"ohio\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(ohio)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 ohio:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('ohio')))))"
        },
        "question": {
            "en": "what is the highest point in ohio",
            "de": "was ist der hoechste punkt in ohio",
            "el": "ποιο είναι το ψηλότερο σημείο στο ohio",
            "fa": "بلندترین نقطه در اوهایو کجاست ؟",
            "id": "apa titik tertinggi di ohio ?",
            "sv": "vad är den högsta punkten i ohio ?",
            "th": "จุด สูง สุด ของ รัฐ โอไฮโอ อยู่ ตรงไหน",
            "zh": "俄亥俄 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"florida\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 florida:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('florida')))))"
        },
        "question": {
            "en": "what is the highest point in florida",
            "de": "welches ist der hoechste punkt in florida",
            "el": "ποιο είναι το ψηλότερο σημείο στη florida",
            "fa": "بلندترین نقطه در فلوریدا کجاست ؟",
            "id": "apa titik tertinggi di florida ?",
            "sv": "vad är den högsta punkten i florida ?",
            "th": "จุด ที่ สูง ที่สุด ของ รัฐ ฟลอริด้า อยู่ ตรงไหน",
            "zh": "佛罗里达 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"rhode island\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('rhode island')))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 rhode_island:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('rhode island')))))"
        },
        "question": {
            "en": "what is the highest point in rhode island",
            "de": "welches ist der hoechstgelegene punkt in rhode island",
            "el": "ποιο είναι το ψηλότερο σημείο στο rhode island",
            "fa": "بلندترین نقطه در رودایلند کجاست ؟",
            "id": "apa titik tertinggi di rhode island ?",
            "sv": "vad är den högsta punkten i rhode island ?",
            "th": "จุด สูง สุด ของ รัฐ โรดไอแลนด์ อยู่ ตรงไหน",
            "zh": "罗得岛 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(mountain(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the highest mountain in texas",
            "de": "welches ist der hoechste berg in texas",
            "el": "ποιο είναι το ψηλότερο βουνό στο texas",
            "fa": "بلندترین کوه در تگزاس کجاست ؟",
            "id": "apa gunung tertinggi di texas ?",
            "sv": "vad är det högsta berget i texas ?",
            "th": "ภูเขา ที่ สูง ที่สุด ของ รัฐ เท็กซัส คือ ภูเขา ใด",
            "zh": "德克萨斯 州 最高 的 山峰 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"new mexico\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 new_mexico:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('new mexico')))))"
        },
        "question": {
            "en": "what is the highest point in new mexico",
            "de": "was ist die hoechste hoehe in new mexico",
            "el": "ποιο είναι το ψηλότερο σημείο του new mexico",
            "fa": "بلندترین نقطه در نیومکزیکو کجاست ؟",
            "id": "apa titik tertinggi di new mexico ?",
            "sv": "vad är den högsta punkten i new mexico ?",
            "th": "จุด สูง สุด ของ รัฐ นิวเม็กซิโก อยู่ ตรงไหน",
            "zh": "新墨西哥 州 最高 海拔 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"kansas\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 kansas:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('kansas')))))"
        },
        "question": {
            "en": "what is the highest point in kansas",
            "de": "wie lautet der hoechste punkt in kansas",
            "el": "ποιο είναι το ψηλότερο σημείο στο kansas",
            "fa": "بلندترین نقطه در کانزاس کجاست ؟",
            "id": "apa titik tertinggi di kansas ?",
            "sv": "vad är den högsta punkten i kansas ?",
            "th": "จุด สูง ที่สุด ใน รัฐ แคนซัส อยู่ ที่ ใด",
            "zh": "堪萨斯 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the highest point in texas",
            "de": "welches ist die hoechste erhebung in texas",
            "el": "ποιο είναι το ψηλότερο σημείο στο texas",
            "fa": "بلندترین نقطه در تکزاس کجاست ؟",
            "id": "apa titik tertinggi di texas ?",
            "sv": "vad är den högsta punkten i texas ?",
            "th": "รัฐ เท็กซัส มี จุด สูง สุด คือ จุด ใด",
            "zh": "德克萨斯 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME NOT IN ( SELECT STATE_NAME FROM BORDER_INFO )",
            "prolog": "answer(A,(state(A),not((next_to(A,B),state(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (not:<t,t> (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(exclude(state(all), next_to_2(state(all))))"
        },
        "question": {
            "en": "name the states which have no surrounding states",
            "de": "nenne die staaten an die keine anderen staaten angrenzen",
            "el": "ονόμασε τις πολιτείες που δεν έχουν περιβάλλουσες πολιτείες",
            "fa": "ایالت هایی که ایالت همجواری ندارد را نام ببر .",
            "id": "nama negara-negara bagian yang tidak memiliki negara-negara bagian di sekitarnya .",
            "sv": "namnge de stater som inte har några angränsande stater .",
            "th": "รัฐ ใด ไม่ ติด กับ รัฐ ใด เลย",
            "zh": "列出 所有 不跟 其它 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME NOT IN ( SELECT STATE_NAME FROM BORDER_INFO )",
            "prolog": "answer(A,(state(A),not((next_to(A,B),state(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (not:<t,t> (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(exclude(state(all), next_to_2(state(all))))"
        },
        "question": {
            "en": "which states border no other states",
            "de": "welche staaten grenzen an keinen anderen staaten an",
            "el": "ποιες πολιτείες δε συνορεύουν με καμία άλλη πολιτεία",
            "fa": "کدام ایالت ها با هیچ ایالتی هم مرز نیستند ؟",
            "id": "apa negara-negara bagian yang tidak berbatasan dengan negara-negara bagian lain ?",
            "sv": "vilka stater gränsar inga andra stater ?",
            "th": "รัฐ ใด บ้าง ที่ ไม่ ติด กับ รัฐ ใด เลย",
            "zh": "哪些 州 没有 与 其它 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH IN (SELECT MAX (DERIVED_FIELDalias0) FROM (SELECT MAX (LENGTH) AS DERIVED_FIELDalias0, TRAVERSE FROM RIVER WHERE TRAVERSE IN (SELECT STATE_NAME FROM BORDER_INFO WHERE BORDER IN (SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT(1) = (SELECT MAX (DERIVED_FIELDalias1) FROM (SELECT BORDER, COUNT(1) AS DERIVED_FIELDalias1 FROM BORDER_INFO GROUP BY BORDER) AS DERIVED_TABLEalias0)) ) GROUP BY TRAVERSE) AS DERIVED_TABLEalias1)",
            "prolog": "answer(A,most(A,B,(state(A),next_to(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(state(next_to_2(state(all)))))"
        },
        "question": {
            "en": "what state borders most other states",
            "de": "welcher staat hat die meisten nachbarstaaten",
            "el": "ποια πολιτεία συνορεύει με τις περισσότερες άλλες πολιτείες",
            "fa": "کدام ایالت با بیشترین ایالات همجوار است ؟",
            "id": "apa negara bagian yang berbatasan dengan paling banyak negara bagian lainnya ?",
            "sv": "vilken stat gränsar till flest andra stater ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อื่นๆ มาก ที่สุด",
            "zh": "哪个 州 与 最多 的 其他 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW WHERE HIGHEST_POINT = \"guadalupe peak\"",
            "prolog": "answer(A,(elevation(B,A),const(B,placeid('guadalupe peak'))))",
            "lambda": "(elevation:<lo,i> guadalupe_peak:m)",
            "funql": "answer(elevation_1(placeid('guadalupe peak')))"
        },
        "question": {
            "en": "how high is guadalupe peak",
            "de": "wie hoch liegt guadalupe peak",
            "el": "πόσο ψηλή είναι η κορυφή guadalupe",
            "fa": "ارتفاع قله گوادالوپ چقدر است ؟",
            "id": "seberapa tinggikah guadalupe peak ?",
            "sv": "hur hög är guadalupe peak ?",
            "th": "ยอดเขา กวาดาลูเป มี ความ สูง เท่าไหร่",
            "zh": "瓜峰 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the elevation of the highest point in the usa",
            "de": "was ist die hoehe des hoechsten punktes in den usa",
            "el": "ποιο είναι το υψόμετρο του ψηλότερου σημείου στις usa",
            "fa": "ارتفاع بلند ترین نقطه در آمریکا چقدر است ؟",
            "id": "berapa ketinggian titik tertinggi di amerika serikat ?",
            "sv": "vad är höjden av den högsta punkten i usa ?",
            "th": "จุด ที่ สูง ที่สุด ของ อเมริกา สูง เท่าไหร่",
            "zh": "美国 最高 点 的 海拔 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the height of the highest point in the usa",
            "de": "was ist die hoehe des hoechsten punktes in der usa",
            "el": "ποιο είναι το υψόμετρο του ψηλότερου σημείου στις usa",
            "fa": "ارتفاع بلندترین نقطه در آمریکا چقدر است ؟",
            "id": "berapa ketinggian titik tertinggi di amerika serikat ?",
            "sv": "hur hög är den högsta punkten i usa ?",
            "th": "จุด สูง สุด ใน อเมริกา สูง เท่าไหร่",
            "zh": "美国 最高 点 的 高度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(mississippi))))",
            "lambda": "(len:<r,i> mississippi_river:r)",
            "funql": "answer(len(riverid('mississippi')))"
        },
        "question": {
            "en": "how long is the mississippi",
            "de": "wie lang ist der mississippi fluss",
            "el": "πόσο μακρύς είναι ο mississippi",
            "fa": "طول میسیسیپی چقدر است ؟",
            "id": "seberapa panjangkah mississippi ?",
            "sv": "hur lång är mississippi ?",
            "th": "แม่น้ำ มิสซิสซิปปี ยาว เท่าไหร่",
            "zh": "密西西比 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))",
            "lambda": "(len:<r,i> mississippi_river:r)",
            "funql": "answer(len(river(riverid('mississippi'))))"
        },
        "question": {
            "en": "how long is the mississippi river in miles",
            "de": "wie lange in meilen ist der mississippi fluss",
            "el": "πόσο μεγάλος είναι ο mississippi ποταμός σε μίλια",
            "fa": "طول روخانه میسیسیپی به مایل چقدر است ؟",
            "id": "seberapa panjangkah sungai mississippi dalam mil ?",
            "sv": "hur lång är mississippifloden i miles ?",
            "th": "แม่น้ำ มิสซิสซิปปี มี ความ ยาว เท่าไหร่",
            "zh": "密西西比 河 有 多少 英里 长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))",
            "lambda": "(len:<r,i> mississippi_river:r)",
            "funql": "answer(len(river(riverid('mississippi'))))"
        },
        "question": {
            "en": "how long is the mississippi river",
            "de": "wie lange is der mississippi",
            "el": "πόσο μακρύς είναι ο ποταμός mississippi",
            "fa": "طول رودخانه میسیسیپی چقدر است ؟",
            "id": "seberapa panjangkah sungai mississippi ?",
            "sv": "hur lång är mississippifloden ?",
            "th": "แม่น้ำ มิสซิสซิปปี ยาว กี่ ไมล์",
            "zh": "密西西比 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"rio grande\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))",
            "lambda": "(len:<r,i> rio_grande_river:r)",
            "funql": "answer(len(river(riverid('rio grande'))))"
        },
        "question": {
            "en": "how long is the rio grande river",
            "de": "wie land ist der rio grande fluss",
            "el": "πόσο μακρύς είναι ο ποταμός rio grande",
            "fa": "طول ریوگرانده اوهایو چقدر است ؟",
            "id": "seberapa panjangkah sungai rio grande ?",
            "sv": "hur lång är rio grande floden ?",
            "th": "แม่น้ำ ริโอแกรนด์ ยาว แค่ไหน",
            "zh": "里奥格兰德 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"missouri\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(missouri)),river(B)))",
            "lambda": "(len:<r,i> missouri_river:r)",
            "funql": "answer(len(river(riverid('missouri'))))"
        },
        "question": {
            "en": "how long is the missouri river",
            "de": "wie lang ist der fluss missouri",
            "el": "πόσο μακρύς είναι ο ποταμός missouri",
            "fa": "طول روخانه میسوری چقدر است ؟",
            "id": "seberapa panjangkah sungai missouri ?",
            "sv": "hur lång är missourifloden ?",
            "th": "แม่น้ำ มิสซูรี ยาว เท่าไหร่",
            "zh": "密苏里 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = \"rio grande\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid('rio grande'))))",
            "lambda": "(len:<r,i> rio_grande_river:r)",
            "funql": "answer(len(riverid('rio grande')))"
        },
        "question": {
            "en": "how long is rio grande",
            "de": "wie lange ist rio grande",
            "el": "πόσο μακρύ είναι το rio grande",
            "fa": "طول ریوگرانده چقدر است ؟",
            "id": "seberapa panjangkah rio grande ?",
            "sv": "hur lång är rio grande ?",
            "th": "แม่น้ำ ริโอแกรนด์ ยาว เท่าไหร่",
            "zh": "格兰德 河 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY",
            "prolog": "answer(A,count(B,(city(B),const(C,countryid(usa)),loc(B,C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many cities does the usa have",
            "de": "wie viele staedte gibt es in den usa",
            "el": "πόσες πόλεις έχουν οι ηπα",
            "fa": "ایالات متحده چند شهر دارد ؟",
            "id": "berapa banyak kota yang dimiliki amerika serikat ?",
            "sv": "hur många städer har usa ?",
            "th": "ประเทศ สหรัฐอเมริกา มี เมือง อยู่ ทั้งหมด เท่าไหร่",
            "zh": "在 美国 有 多少 城市 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY",
            "prolog": "answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many cities are there in the us",
            "de": "wie viele staedte hat die usa",
            "el": "πόσες πόλεις υπάρχουν στις us",
            "fa": "چند شهر در ایالات متحده هست ؟",
            "id": "berapa banyak kota yang ada di as ?",
            "sv": "hur många städer finns det i usa ?",
            "th": "ประเทศ สหรัฐอเมริกา มี เมือง อะไร บ้าง",
            "zh": "在 美国 有 多少 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY",
            "prolog": "answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many cities are there in usa",
            "de": "wie viele staedte gibt es in den usa",
            "el": "πόσες πόλεις υπάρχουν στις ηπα",
            "fa": "چند شهر در ایالات متحده هست ؟",
            "id": "berapa banyak kota yang ada di amerika serikat ?",
            "sv": "hur många städer finns det i usa ?",
            "th": "ใน สหรัฐ มี เมือง ทั้งสิ้น กี่ เมือง",
            "zh": "在 美国 有 多少 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY",
            "prolog": "answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many cities are there in us",
            "de": "wie viele staedte gibt es in den usa",
            "el": "πόσες πόλεις υπάρχουν στις us",
            "fa": "چند شهر در ایالات متحده هست ؟",
            "id": "berapa banyak kota yang ada di as ?",
            "sv": "hur många städer finns det i usa ?",
            "th": "สหรัฐ มี เมือง ทั้งหมด กี่ เมือง",
            "zh": "在 美国 有 多少 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000",
            "prolog": "answer(A,count(B,(major(B),city(B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0))))",
            "funql": "answer(count(major(city(all))))"
        },
        "question": {
            "en": "how many major cities are there",
            "de": "wie viele groessere staedte gibt es",
            "el": "πόσες κύριες πόλεις υπάρχουν",
            "fa": "چند شهر عمده داریم ؟",
            "id": "berapa banyak kota-kota besar yang ada ?",
            "sv": "hur många stora städer finns det ?",
            "th": "เมือง เอก มี อยู่ ทั้งหมด กี่ เมือง",
            "zh": "有 多少 个 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,count(B,(river(B),const(B,riverid(colorado))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (named:<e,<n,t>> $0 colorado:n))))",
            "funql": "answer(count(river(riverid('colorado'))))"
        },
        "question": {
            "en": "how many rivers are called colorado",
            "de": "wie viele fluesse heissen colorado",
            "el": "πόσα ποτάμια ονομάζονται colorado",
            "fa": "چند رودخانه کلرادو نامیده میشوند ؟",
            "id": "berapa banyak sungai bernama colorado ?",
            "sv": "hur många floder kallas colorado ?",
            "th": "แม่น้ำ ที่ ชื่อ ว่า โคโลราโด มี กี่ สาย",
            "zh": "有 多少 河流 被 称为 科罗拉多"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"washington\" AND STATE_NAME = \"dc\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(washington,dc))))",
            "lambda": "(population:<lo,i> washington_dc:c)",
            "funql": "answer(population_1(cityid('washington', 'dc')))"
        },
        "question": {
            "en": "what is the population of washington dc",
            "de": "wie viele einwohner leben in washington dc",
            "el": "ποιος είναι ο πληθυσμός της washington dc",
            "fa": "جمعیت واشنگتن دی سی چقدر است ؟",
            "id": "berapa populasi washington dc ?",
            "sv": "vad är folkmängden i washington dc ?",
            "th": "จำนวน ประชากร ของ รัฐ วอชิงตัน ดีซี มี เท่าใด",
            "zh": "华盛顿 特区 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"washington\" AND STATE_NAME = \"dc\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(washington,dc))))",
            "lambda": "(population:<lo,i> washington_dc:c)",
            "funql": "answer(population_1(cityid('washington', 'dc')))"
        },
        "question": {
            "en": "how many people live in washington dc",
            "de": "wie viele einwohner hat washington dc",
            "el": "πόσοι άνθρωποι ζουν στην washington dc",
            "fa": "چند نفر در وایومینگ دی سی زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di washington dc ?",
            "sv": "hur många människor bor i washington dc ?",
            "th": "มี พลเมือง กี่ คน อาศัย อยู่ ใน เมือง วอชิงตัน ดีซี",
            "zh": "有 多少 人 住 在 华盛顿 特区"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"boston\" AND STATE_NAME = \"massachusetts\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(boston,ma))))",
            "lambda": "(population:<lo,i> boston_ma:c)",
            "funql": "answer(population_1(cityid('boston', 'ma')))"
        },
        "question": {
            "en": "what is the population of boston massachusetts",
            "de": "was ist die bevoelkerung von boston massachusetts",
            "el": "ποιος είναι ο πληθυσμός της boston massachusetts",
            "fa": "جمعیت بوستون ماساچوست چقدر است ؟",
            "id": "berapa populasi boston massachusetts ?",
            "sv": "vad är folkmängden i boston massachusetts ?",
            "th": "เมือง บอสตัน รัฐ แมสซาชูเซ็ตต์ มี ประชากร เท่าใด",
            "zh": "马萨诸塞 州 波士顿 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"springfield\" AND STATE_NAME = \"missouri\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(springfield,mo))))",
            "lambda": "(population:<lo,i> springfield_mo:c)",
            "funql": "answer(population_1(cityid('springfield', 'mo')))"
        },
        "question": {
            "en": "what is the population of springfield missouri",
            "de": "wie gross ist die einwohnerzahl von springfield missouri",
            "el": "ποιος είναι ο πληθυσμός του springfield missouri",
            "fa": "جمعیت اسپرینگفیلد میسوری چقدر است ؟",
            "id": "berapa populasi springfield missouri ?",
            "sv": "vad är folkmängden i springfield missouri ?",
            "th": "จำนวน ประชากร ของ เมือง สปริงฟิลด์ รัฐ มิสซูรี มี เท่าไหร่",
            "zh": "美国 密苏里 州 斯普林菲尔德 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"springfield\" AND STATE_NAME = \"south dakota\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(springfield,sd))))",
            "lambda": "(population:<lo,i> springfield_sd:c)",
            "funql": "answer(population_1(cityid('springfield', 'sd')))"
        },
        "question": {
            "en": "what is the population of springfield south dakota",
            "de": "wie gross ist die bevoelkerung von springfield in south dakota",
            "el": "ποιος είναι ο πληθυσμός του springfield νότια ντακότα",
            "fa": "جمعیت اسپرینگفیلد داکوتای جنوبی چقدر است ؟",
            "id": "berapa populasi springfield south dakota ?",
            "sv": "vad är folkmängden i springfield south dakota ?",
            "th": "เมือง สปริงฟิลด์ รัฐ เซาท์ดาโกตา มี ประชากร เท่าไหร่",
            "zh": "南达科他 州 的 斯普林菲尔德 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"austin\" AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(austin,tx))))",
            "lambda": "(population:<lo,i> austin_tx:c)",
            "funql": "answer(population_1(cityid('austin', 'tx')))"
        },
        "question": {
            "en": "how many people live in austin texas",
            "de": "wie viele leute leben in austin texas",
            "el": "πόσοι άνθρωποι ζουν στο austin texas",
            "fa": "چند نفر در تگزاس آستین زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di austin texas ?",
            "sv": "hur många människor bor i austin texas ?",
            "th": "เมือง ออสติน รัฐ เท็กซัส มี ประชากร เท่าไหร่",
            "zh": "有 多少 人 住 在 得克萨斯 州 的 奥斯汀"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"portland\" AND STATE_NAME = \"maine\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(portland,me))))",
            "lambda": "(population:<lo,i> portland_me:c)",
            "funql": "answer(population_1(cityid('portland', 'me')))"
        },
        "question": {
            "en": "what is the population of portland maine",
            "de": "was ist die bevoelkerung von portland maine",
            "el": "ποιος είναι ο πληθυσμός του portland maine",
            "fa": "جمعیت پورتلند مین چقدر است ؟",
            "id": "berapa populasi portland maine ?",
            "sv": "vad är folkmängden i portland maine ?",
            "th": "เมือง พอร์ตแลนด์ รัฐ เมน มี ประชากร เท่าไหร่",
            "zh": "缅因 州 波特兰 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"spokane\" AND STATE_NAME = \"washington\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(spokane,wa))))",
            "lambda": "(population:<lo,i> spokane_wa:c)",
            "funql": "answer(population_1(cityid('spokane', 'wa')))"
        },
        "question": {
            "en": "how many people live in spokane washington",
            "de": "wie viele leute wohnen in spokane washington",
            "el": "πόσοι άνθρωποι ζουν στο spokane washington",
            "fa": "چند نفر در اسپوکین واشنگتن زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di spokane washington ?",
            "sv": "hur många människor bor i spokane washington ?",
            "th": "มี ประชากร กี่ คน ใน เมือง สโปเกน รัฐ วอชิงตัน",
            "zh": "有 多少 人 住 在 华盛顿 州 的 斯波坎 市"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"austin\" AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(austin,tx))))",
            "lambda": "(population:<lo,i> austin_tx:c)",
            "funql": "answer(population_1(cityid('austin', 'tx')))"
        },
        "question": {
            "en": "what is the population of austin texas",
            "de": "wie gross ist die bevoelkerung von austin texas",
            "el": "ποιος είναι ο πληθυσμός του austin texas",
            "fa": "جمعیت آستین تگزاس چقدر است ؟",
            "id": "berapa populasi austin texas ?",
            "sv": "vad är folkmängden i austin texas ?",
            "th": "เมือง ออสติน รัฐ เท็กซัส มี ประชากร อาศัย อยู่ กี่ คน",
            "zh": "得克萨斯 州 的 奥斯汀 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = \"seattle\" AND STATE_NAME = \"washington\"",
            "prolog": "answer(A,(population(B,A),const(B,cityid(seattle,wa))))",
            "lambda": "(population:<lo,i> seattle_wa:c)",
            "funql": "answer(population_1(cityid('seattle', 'wa')))"
        },
        "question": {
            "en": "what is the population of seattle washington",
            "de": "wie gross ist die bevoelkerung von seattle in washington",
            "el": "ποιος είναι ο πληθυσμός του seattle washington",
            "fa": "جمعیت سیاتل واشنگتن چقدر است ؟",
            "id": "berapa populasi seattle washington ?",
            "sv": "vad är folkmängden i seattle washington ?",
            "th": "ประชากร ของ เมือง ซีแอตเติล รัฐ วอชิงตัน",
            "zh": "华盛顿 州 西雅图 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"alaska\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(size(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(alaska))))))",
            "lambda": "(size:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 alaska:s))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(size(largest(city(loc_2(stateid('alaska'))))))"
        },
        "question": {
            "en": "how large is the largest city in alaska",
            "de": "wie gross ist die groesste stadt in alaska",
            "el": "πόσο μεγάλη είναι η μεγαλύτερη πόλη στην alaska",
            "fa": "وسعت بزگترین شهر آلاسکا چقدر است ؟",
            "id": "seberapa besarkah kota terbesar di alaska ?",
            "sv": "hur stor är den största staden i alaska ?",
            "th": "เมือง ที่ ใหญ่ ที่สุด ใน รัฐ อลาสก้า มี ขนาด เท่าไหร่",
            "zh": "阿拉斯加 州 最大 的 城市 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = ( SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"georgia\" )",
            "prolog": "answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(georgia))))",
            "lambda": "(population:<lo,i> (capital:<s,c> georgia:s))",
            "funql": "answer(population_1(capital(loc_2(stateid('georgia')))))"
        },
        "question": {
            "en": "how many people live in the capital of georgia",
            "de": "wie viele leute wohnen in der hauptstadt georgias",
            "el": "πόσοι άνθρωποι ζουν στην πρωτεύουσα της georgia",
            "fa": "چند نفر در مرکز جورجیا زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di ibukota georgia ?",
            "sv": "hur många människor bor i georgiens huvudstad ?",
            "th": "เมืองหลวง ของ รัฐ จอร์เจีย มี ประชากร อาศัย อยู่ กี่ คน",
            "zh": "有 多少 人 居住 在 佐治亚 州 的 省府"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = ( SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,(size(B,A),capital(B),loc(B,C),const(C,stateid(texas))))",
            "lambda": "(size:<lo,i> (capital:<s,c> texas:s))",
            "funql": "answer(size(capital(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the size of the capital of texas",
            "de": "was ist die groesse der hauptstadt texas",
            "el": "ποιο είναι το μέγεθος της πρωτεύουσας του texas",
            "fa": "اندازه شهر مرکزی تگزاس چقدر است ؟",
            "id": "berapa luas ibukota texas ?",
            "sv": "vad är storleken på huvudstaden i texas ?",
            "th": "เมืองหลวง ของ รัฐ เท็กซัส มี ขนาด เท่าไหร่",
            "zh": "得克萨斯 州 首府 的 有多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( POPULATION ) FROM STATE",
            "prolog": "answer(A,sum(B,(population(C,B),state(C)),A))",
            "lambda": "(sum:<<e,t>,<<e,i>,i>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(sum(population_1(state(all))))"
        },
        "question": {
            "en": "what is the combined population of all 50 states",
            "de": "wie lautet die gesamte bevoelkerung aller 50 staaten",
            "el": "ποιος είναι ο συνδυαστικός πληθυσμός όλων των 50 πολιτειών",
            "fa": "جمعیت 50 ایالت با هم چقدر است ؟",
            "id": "berapa jumlah penduduk gabungan dari seluruh 50 negara bagian ?",
            "sv": "vad är den sammanlagda folkmängden i alla 50 stater ?",
            "th": "ถ้า นำ ประชากร ทั้ง 50 รัฐ มา รวม กัน จะ มี จำนวน ทั้งสิ้น กี่ คน",
            "zh": "所有 50 个 州 的 总 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM STATE",
            "prolog": "answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many states are in the united states",
            "de": "wie viele staaten gibt es in den usa",
            "el": "πόσες πολιτείες είναι στις ηνωμένες πολιτείες",
            "fa": "ایالات متحده چند ایالت دارد ؟",
            "id": "berapa banyak negara bagian di amerika serikat ?",
            "sv": "hur många stater finns det i usa ?",
            "th": "ประเทศ สหรัฐอเมริกา มี รัฐ ทั้งหมด กี่ รัฐ",
            "zh": "在 美国 有 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM STATE",
            "prolog": "answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many states are there in united states",
            "de": "wie viele staaten gibt es in den usa",
            "el": "πόσες πολιτείες υπάρχουν στις ηνωμένες πολιτείες",
            "fa": "چند ایالت در ایالات متحده هست ؟",
            "id": "berapa banyak negara bagian yang ada di amerika serikat ?",
            "sv": "hur många stater finns det i usa ?",
            "th": "สหรัฐอเมริกา มี รัฐ ทั้งหมด กี่ รัฐ",
            "zh": "在 美国 有 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 hawaii:s))))",
            "funql": "answer(count(state(next_to_2(stateid('hawaii')))))"
        },
        "question": {
            "en": "how many states border hawaii",
            "de": "wie viele staaten grenzen an hawaii",
            "el": "πόσες πολιτείες συνορεύουν με τη hawaii",
            "fa": "چند ایالت همجوار هاوایی هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan hawaii ?",
            "sv": "hur många stater gränsar till hawaii ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ ฮาวาย มี กี่ รัฐ",
            "zh": "有 多少 州 与 夏威夷 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"tennessee\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(tennessee))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 tennessee:s))))",
            "funql": "answer(count(state(next_to_2(stateid('tennessee')))))"
        },
        "question": {
            "en": "how many states border tennessee",
            "de": "wie viele staaten grenzen an tennessee an",
            "el": "ποιες πολιτείες συνορεύουν με το tennessee",
            "fa": "چند ایالت همجوار تنسی هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan tennessee ?",
            "sv": "hur många stater gränsar till tennessee ?",
            "th": "มี รัฐ กี่ รัฐ ที่ อยู่ ติด กับ รัฐ เทนเนสซี",
            "zh": "有 多少 州 与 田纳西 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,count(B,(state(B),const(C,stateid(iowa)),next_to(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> iowa:s $0))))",
            "funql": "answer(count(state(next_to_1(stateid('iowa')))))"
        },
        "question": {
            "en": "how many states does iowa border",
            "de": "iowa grenzt an wie viele staaten",
            "el": "με πόσες πολιτείες συνορεύει η iowa",
            "fa": "چند ایالت همجوار آیووا هستند ؟",
            "id": "berapa banyak negara bagian yang berbatasan dengan iowa ?",
            "sv": "hur många stater gränsar iowa till ?",
            "th": "มี กี่ รัฐ บ้าง ที่ อยู่ ติด กับ รัฐ ไอโอวา",
            "zh": "有 多少 州 与 艾奥瓦 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 alaska:s))))",
            "funql": "answer(count(state(next_to_2(stateid('alaska')))))"
        },
        "question": {
            "en": "how many states border alaska",
            "de": "wie viele staaten grenzen an alaska",
            "el": "πόσες πολιτείες συνορεύουν με την alaska",
            "fa": "چند ایالته همجوار آلاسکا هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan alaska ?",
            "sv": "hur många stater gränsar till alaska ?",
            "th": "มี กี่ รัฐ ที่ อยู่ ติด กับ รัฐ อลาสก้า",
            "zh": "有 多少 州 与 阿拉斯加 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"missouri\"",
            "prolog": "answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> missouri:s $0))))",
            "funql": "answer(count(state(next_to_1(stateid('missouri')))))"
        },
        "question": {
            "en": "how many states does missouri border",
            "de": "an wieviele staaten grenzt missouri",
            "el": "πόσες πολιτείες συνορεύουν με το missouri",
            "fa": "چند ایالت همجوار میسوری هستند ؟",
            "id": "berapa banyak negara bagian yang berbatasan dengan missouri ?",
            "sv": "hur många stater gränsar missouri till ?",
            "th": "รัฐ มิสซูรี อยู่ ติด กับ กี่ รัฐ",
            "zh": "有 多少 州 与 密苏里 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))))",
            "funql": "answer(count(state(next_to_2(stateid('texas')))))"
        },
        "question": {
            "en": "how many states border texas",
            "de": "wie viele staaten grenzen an texas an",
            "el": "πόσες πολιτείες συνορεύουν με το texas",
            "fa": "چند ایالت همجوار تگزاس هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan texas ?",
            "sv": "hur många stater gränsar till texas ?",
            "th": "มี รัฐ กี่ รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "有 多少 州 与 得克萨斯 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = \"kentucky\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(kentucky))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 kentucky:s))))",
            "funql": "answer(count(state(next_to_2(stateid('kentucky')))))"
        },
        "question": {
            "en": "what is the number of neighboring states for kentucky",
            "de": "wie viele staaten grenzen an kentucky",
            "el": "ποιος είναι ο αριθμός των γειτονικών πολιτειών του kentucky",
            "fa": "تعداد ایالات همسایه کنتاکی چند تاست ؟",
            "id": "berapa jumlah negara bagian tetangga kentucky ?",
            "sv": "hur många är antalet grannstater för kentucky ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ เคนตักกี้ มี จำนวน กี่ รัฐ",
            "zh": "与 肯塔基 州 相邻 的 州 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH > 750 AND TRAVERSE = \"illinois\"",
            "prolog": "answer(A,(major(A),river(A),traverse(A,B),const(B,stateid(illinois))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (river:<r,t> $0) (loc:<lo,<lo,t>> $0 illinois:s)))",
            "funql": "answer(major(river(traverse_2(stateid('illinois')))))"
        },
        "question": {
            "en": "what major rivers run through illinois",
            "de": "welche grossen fluesse fliessen durch illinois",
            "el": "ποιο κύριο ποτάμι διασχίζει το illinois",
            "fa": "چه شهرهای عمده ای از ایلینوی میگذرند ؟",
            "id": "apa sungai-sungai besar yang dilalui illinois ?",
            "sv": "vilka stora floder flyter genom illinois ?",
            "th": "แม่น้ำ สาย หลัก ที่ ไหล ผ่าน รัฐ อิลลินอยส์ มี อะไร บ้าง",
            "zh": "哪些 主要 河流 流经 伊利诺伊 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"pennsylvania\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))",
            "lambda": "(capital:<s,c> pennsylvania:s)",
            "funql": "answer(capital(loc_2(stateid('pennsylvania'))))"
        },
        "question": {
            "en": "what is the capital of pennsylvania",
            "de": "welches ist die hauptstadt von pennsylvania",
            "el": "ποια είναι η πρωτεύουσα της  pennsylvania",
            "fa": "مرکز ایالت پنسیلوانیا کجاست ؟",
            "id": "apa ibukota pennsylvania ?",
            "sv": "vilken är huvudstaden i pennsylvania ?",
            "th": "เมืองหลวง ของ รัฐ เพ็นซิลเวเนีย ชื่อ ว่า อะไร",
            "zh": "宾夕法尼亚 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(capital:<s,c> texas:s)",
            "funql": "answer(capital(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "what is the capital of texas",
            "de": "welches ist die hauptstadt von texas",
            "el": "ποια είναι η πρωτεύουσα του texas",
            "fa": "مرکز ایالت تگزاس کجاست ؟",
            "id": "apa ibukota texas ?",
            "sv": "vilken är huvudstaden i texas ?",
            "th": "ช่วย บอก ที ว่า เมืองหลวง ของ รัฐ เท็กซัส ชื่อ ว่า อะไร",
            "zh": "得克萨斯 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"maryland\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(maryland))))",
            "lambda": "(capital:<s,c> maryland:s)",
            "funql": "answer(capital(loc_2(stateid('maryland'))))"
        },
        "question": {
            "en": "what is the capital of maryland",
            "de": "wie lautet die hauptstadt von maryland",
            "el": "ποια είναι η πρωτεύουσα του maryland",
            "fa": "مرکز ایالت مریلند کجاست ؟",
            "id": "apa ibukota maryland ?",
            "sv": "vilken är huvudstaden i maryland ?",
            "th": "เมืองหลวง ของ รัฐ แมรีแลนด์ ชื่อ ว่า อะไร",
            "zh": "马里兰 州 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))",
            "lambda": "(capital:<s,c> iowa:s)",
            "funql": "answer(capital(loc_2(stateid('iowa'))))"
        },
        "question": {
            "en": "what is capital of iowa",
            "de": "wie lautet die hauptstadt von iowa",
            "el": "ποια είναι  η πρωτεύουσα της iowa",
            "fa": "مرکز ایالت آیووا کجاست ؟",
            "id": "apa ibukota iowa ?",
            "sv": "vilken är huvudstaden i iowa ?",
            "th": "เมืองหลวง ของ รัฐ ไอโอวา คือ เมือง ใด",
            "zh": "艾奥瓦 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"vermont\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))",
            "lambda": "(capital:<s,c> vermont:s)",
            "funql": "answer(capital(loc_2(stateid('vermont'))))"
        },
        "question": {
            "en": "what is the capital of vermont",
            "de": "welches ist die hauptstadt von vermont",
            "el": "ποια είναι  η πρωτεύουσα του vermont",
            "fa": "مرکز ورمونت کجاست ؟",
            "id": "apa ibukota vermont ?",
            "sv": "vilken är vermonts huvudstad ?",
            "th": "เมืองหลวง ของ รัฐ เวอร์ม็อนต์ ชื่อ ว่า อะไร",
            "zh": "佛蒙特 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"georgia\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))",
            "lambda": "(capital:<s,c> georgia:s)",
            "funql": "answer(capital(loc_2(stateid('georgia'))))"
        },
        "question": {
            "en": "what is the capital of georgia",
            "de": "was ist die hauptstadt georgias",
            "el": "ποια είναι η πρωτεύουσα της georgia",
            "fa": "مرکز جورجیا کجاست ؟",
            "id": "apa ibukota georgia ?",
            "sv": "vilken är huvudstaden i georgia ?",
            "th": "เมืองหลวง ของ รัฐ จอร์เจีย ชื่อ อะไร",
            "zh": "佐治亚 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"utah\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(utah))))",
            "lambda": "(capital:<s,c> utah:s)",
            "funql": "answer(capital(loc_2(stateid('utah'))))"
        },
        "question": {
            "en": "what is the capital of utah",
            "de": "welches ist die hauptstadt von utah",
            "el": "ποια είναι η πρωτεύουσα της utah",
            "fa": "مرکز یوتاه کجاست ؟",
            "id": "apa ibukota utah ?",
            "sv": "vilken är utahs huvudstad ?",
            "th": "เมืองหลวง ของ รัฐ ยูทาห์ ชื่อ ว่า อะไร",
            "zh": "犹他 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"maine\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))",
            "lambda": "(capital:<s,c> maine:s)",
            "funql": "answer(capital(loc_2(stateid('maine'))))"
        },
        "question": {
            "en": "what is the capital of maine",
            "de": "wie heisst die hauptstadt von maine",
            "el": "ποια είναι η πρωτεύουσα του maine",
            "fa": "مرکز ایالت ماین کجاست ؟",
            "id": "apa ibukota maine ?",
            "sv": "vilken är huvudstaden i maine ?",
            "th": "เมืองหลวง ของ รัฐ เมน ชื่อ ว่า อะไร",
            "zh": "缅因 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))",
            "lambda": "(capital:<s,c> texas:s)",
            "funql": "answer(capital(loc_2(state(stateid('texas')))))"
        },
        "question": {
            "en": "what is the capital of the state texas",
            "de": "kannst du mir die hauptstadt von texas nennen",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας texas",
            "fa": "مرکزایالت تگزاس کجاست ؟",
            "id": "apa ibukota negara bagian texas ?",
            "sv": "vilken är huvudstaden i delstaten texas ?",
            "th": "เมืองหลวง ของ รัฐ เท็กซัส ชื่อ ว่า อะไร",
            "zh": "得克萨斯 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"washington\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(washington))))",
            "lambda": "(capital:<s,c> washington:s)",
            "funql": "answer(capital(loc_2(stateid('washington'))))"
        },
        "question": {
            "en": "what is the capital of washington",
            "de": "was ist die hauptstadt von washington",
            "el": "ποια είναι η πρωτεύουσα της washington",
            "fa": "مرکز واشنگتن کجاست ؟",
            "id": "apa ibukota washington ?",
            "sv": "vilken är washingtons huvudstad ?",
            "th": "เมืองหลวง ของ รัฐ วอชิงตัน ชื่อ ว่า อะไร",
            "zh": "华盛顿 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"indiana\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))",
            "lambda": "(capital:<s,c> indiana:s)",
            "funql": "answer(capital(loc_2(stateid('indiana'))))"
        },
        "question": {
            "en": "what is the capital of indiana",
            "de": "was ist die hauptstadt von indiana",
            "el": "ποια είναι η πρωτεύουσα της indiana",
            "fa": "مرکز ایالت ایندیانا کجاست ؟",
            "id": "apa ibukota indiana ?",
            "sv": "vilken är huvudstaden i indiana ?",
            "th": "เมืองหลวง ของ รัฐ อินเดียน่า ชื่อ อะไร",
            "zh": "印第安纳 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"alabama\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(alabama)),state(B)))",
            "lambda": "(capital:<s,c> alabama:s)",
            "funql": "answer(capital(loc_2(state(stateid('alabama')))))"
        },
        "question": {
            "en": "what is the capital of the alabama state",
            "de": "welches ist die hauptstadt des staates alabama",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας της alabama",
            "fa": "مرکز ایالت آلاباما کجاست ؟",
            "id": "apa ibukota negara bagian alabama ?",
            "sv": "vilken är huvudstaden i staten alabama ?",
            "th": "เมืองหลวง ของ รัฐ อลาบามา ชื่อ ว่า อะไร",
            "zh": "阿拉巴马 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"michigan\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))",
            "lambda": "(capital:<s,c> michigan:s)",
            "funql": "answer(capital(loc_2(stateid('michigan'))))"
        },
        "question": {
            "en": "what is the capital of michigan",
            "de": "welches ist die hauptstadt von michigan",
            "el": "ποια είναι η πρωτεύουσα του michigan",
            "fa": "مرکز ایالت میشیگان کجاست ؟",
            "id": "apa ibukota michigan ?",
            "sv": "vilken är huvudstaden i michigan ?",
            "th": "เมืองหลวง ของ รัฐ มิชิแกน ชื่อ อะไร",
            "zh": "密歇根 州 的 首都 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"hawaii\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(hawaii))))",
            "lambda": "(capital:<s,c> hawaii:s)",
            "funql": "answer(capital(loc_2(stateid('hawaii'))))"
        },
        "question": {
            "en": "what is the capital of hawaii",
            "de": "welches ist die hauptstadt von hawaii",
            "el": "ποια είναι η πρωτεύουσα της hawaii",
            "fa": "مرکز هاوایی کجاست ؟",
            "id": "apa ibukota hawaii ?",
            "sv": "vilken är huvudstaden i hawaii ?",
            "th": "เมืองหลวง ของ รัฐ ฮาวาย ชื่อ ว่า อะไร",
            "zh": "夏威夷 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"new hampshire\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid('new hampshire'))))",
            "lambda": "(capital:<s,c> new_hampshire:s)",
            "funql": "answer(capital(loc_2(stateid('new hampshire'))))"
        },
        "question": {
            "en": "what is the capital of new hampshire",
            "de": "wie lautet die hauptstadt von new hampshire",
            "el": "ποια είναι η πρωτεύουσα του new hampshire",
            "fa": "مرکز ایالت نیوهمپشایر کجاست ؟",
            "id": "apa ibukota new hampshire ?",
            "sv": "vilken är huvudstaden i new hampshire ?",
            "th": "เมืองหลวง ของ รัฐ นิวแฮมพ์เชียร์ ชื่อ ว่า อะไร",
            "zh": "新罕布什尔 州 的 首都 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(capital:<s,c> texas:s)",
            "funql": "answer(capital(loc_2(stateid('texas'))))"
        },
        "question": {
            "en": "can you tell me the capital of texas",
            "de": "welches sind grosse staedte in texas",
            "el": "μπορείς να μου πεις την πρωτεύουσα του texas",
            "fa": "میتوانی به من بگویی مرکز تگزاس کجاست ؟",
            "id": "bisakah anda memberitahu saya ibukota texas ?",
            "sv": "kan du säga mig namnet på texas huvudstad ?",
            "th": "เมืองหลวง ของ รัฐ เท็กซัส ชื่อ ว่า อะไร",
            "zh": "你 能 告诉 我 得克萨斯 州 的 省会 吗"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.BORDER WHERE T2.STATE_NAME = \"texas\"",
            "prolog": "answer(A,(capital(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(capital(city(loc_2(state(next_to_2(stateid('texas')))))))"
        },
        "question": {
            "en": "what are the capital cities of the states which border texas",
            "de": "wie lauten die hauptstaedte der staaten welche an texas grenzen",
            "el": "ποιες είναι οι πρωτεύουσες πόλεις των πολιτειών που συνορεύουν με το texas",
            "fa": "مرکز شهرهایی همجوار تگزاس کدامند ؟",
            "id": "apa ibukota dari negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka är huvudstäderna i de stater som gränsar till texas ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส มี เมืองหลวง ชื่อ อะไร บ้าง",
            "zh": "与 得克萨斯 州 接壤 的 州 的 首府 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.BORDER WHERE T2.STATE_NAME = \"texas\"",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s) (capital:<s,<c,t>> $1 $0))))))",
            "funql": "answer(capital(loc_2(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what are the capitals of the states that border texas",
            "de": "welches sind die hauptstaedte der an texas angrenzenden staaten",
            "el": "ποιες είναι οι πρωτεύουσες των πολιτειών που συνορεύουν με το texas",
            "fa": "مرکز ایالت های همجوار تگزاس کدامند ؟",
            "id": "apa ibukota negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka är huvudstäderna i de stater som gränsar till texas ?",
            "th": "เมืองหลวง ของ รัฐ ที่ ล้อมรอบ รัฐ เท็กซัส มี อะไร บ้าง",
            "zh": "与 得克萨斯 州 接壤 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.BORDER WHERE T2.STATE_NAME = \"texas\"",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s) (capital:<s,<c,t>> $1 $0))))))",
            "funql": "answer(capital(loc_2(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "which capitals are in the states that border texas",
            "de": "welches sind die hauptstaedte der an texas anliegenden staaten",
            "el": "ποιες πρωτεύουσες είναι στις πολιτείες που συνορεύουν με το texas",
            "fa": "مراکز ایالت هایی که با تگزاس همجوار هستند کدامند ؟",
            "id": "ibukota-ibukota apa yang berada di negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka huvudstäder ligger i de stater som gränsar till texas ?",
            "th": "จง บอก ชื่อ เมืองหลวง ของ รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส มา",
            "zh": "哪些 首府 是 在 与 得克萨斯 州 接壤 的 州 里"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(major(city(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what are the major cities in texas",
            "de": "welche sind die groessten staedte in texas",
            "el": "ποιες είναι οι κύριες πόλεις στο texas",
            "fa": "شهرهای عمده تگزاس کدامند ؟",
            "id": "apa kota-kota besar di texas ?",
            "sv": "vilka är de stora städerna i texas ?",
            "th": "เมือง เอก ของ รัฐ เท็กซัส มี อะไร บ้าง",
            "zh": "得克萨斯 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"oklahoma\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(oklahoma))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 oklahoma:s)))",
            "funql": "answer(major(city(loc_2(stateid('oklahoma')))))"
        },
        "question": {
            "en": "what are the major cities in oklahoma",
            "de": "welche sind die groesste staedte in oklahoma",
            "el": "ποιες είναι οι κύριες πόλεις στην oklahoma",
            "fa": "شهرهای عمده اکلاهما کدامند ؟",
            "id": "apa kota-kota besar di oklahoma ?",
            "sv": "vilka är de stora städerna i oklahoma ?",
            "th": "เมือง หลัก ของ รัฐ โอกลาโฮมา มี อะไร บ้าง",
            "zh": "俄克拉荷马 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"colorado\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 colorado:s)))",
            "funql": "answer(major(city(loc_2(stateid('colorado')))))"
        },
        "question": {
            "en": "show major cities in colorado",
            "de": "zeige mir die wichtigsten staedte in colorado",
            "el": "εμφάνισε κύριες πόλεις στο colorado",
            "fa": "شهرهای عمده کلرادو را نشان بده .",
            "id": "tampilkan kota-kota besar di colorado .",
            "sv": "visa stora städer i colorado .",
            "th": "จง แสดง เมือง หลัก ของ รัฐ โคโลราโด",
            "zh": "列出 在 科罗拉多 州 的 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"new mexico\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new mexico'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 new_mexico:s)))",
            "funql": "answer(major(city(loc_2(stateid('new mexico')))))"
        },
        "question": {
            "en": "what are the major cities in new mexico",
            "de": "welche sind die groesseren staedte in new mexico",
            "el": "ποιες είναι οι κύριες πόλεις στο new mexico",
            "fa": "شهرهای عمده نیومکزیکو کدامند ؟",
            "id": "apa kota-kota besar di new mexico ?",
            "sv": "vilka är de stora städerna i new mexico ?",
            "th": "เมือง เอก ของ รัฐ นิวเม็กซิโก มี อะไร บ้าง",
            "zh": "新墨西哥 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"illinois\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(illinois))))",
            "lambda": "(lambda $0:e (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (city:<c,t> $1) (loc:<lo,<lo,t>> $1 illinois:s) (named:<e,<n,t>> $1 $0)))))",
            "funql": "answer(major(city(loc_2(stateid('illinois')))))"
        },
        "question": {
            "en": "what are the names of the major cities in illinois",
            "de": "welches sind die namen grosser staedte in illinois",
            "el": "ποια είναι τα ονόματα των κύριων πόλεων στο illinois",
            "fa": "نام شهرهای عمده ایلینویز چیست ؟",
            "id": "apa nama kota-kota besar di illinois ?",
            "sv": "vad heter de stora städerna i illinois ?",
            "th": "เมือง เอก ของ รัฐ อิลลินอยส์ มี อะไร บ้าง",
            "zh": "在 伊利诺伊 州 主要 城市 的 名称 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"north carolina\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid('north carolina'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 north_carolina:s)))",
            "funql": "answer(major(city(loc_2(stateid('north carolina')))))"
        },
        "question": {
            "en": "what are the major cities in north carolina",
            "de": "welches sind die wesentlichen staedte north carolinas",
            "el": "ποιες είναι οι κύριες πόλεις στη north carolina",
            "fa": "شهرهای عمده نورث کارولینا کدامند ؟",
            "id": "apa kota-kota besar di north carolina ?",
            "sv": "vilka är de stora städerna i north carolina ?",
            "th": "เมือง เอก ของ รัฐ นอร์ธแคโรไลนา มี อะไร บ้าง",
            "zh": "北卡罗来纳 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"ohio\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(ohio))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 ohio:s)))",
            "funql": "answer(major(city(loc_2(stateid('ohio')))))"
        },
        "question": {
            "en": "what are the major cities in ohio",
            "de": "wie lauten die wichtigsten staedte in ohio",
            "el": "ποιες είναι οι κύριες πολιτείες στο ohio",
            "fa": "شهرهای عمده اوهایو کدامند ؟",
            "id": "apa kota-kota besar di ohio ?",
            "sv": "vilka är de stora städerna i ohio ?",
            "th": "เมือง เอก ของ รัฐ โอไฮโอ มี อะไร บ้าง",
            "zh": "俄亥俄 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s)))",
            "funql": "answer(major(city(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what are the major cities of texas",
            "de": "welches sind die wesentlichen staedte in texas",
            "el": "ποιες είναι οι κύριες πόλεις στο texas",
            "fa": "شهرهای عمده تگزاس کدامند ؟",
            "id": "apa kota-kota besar di texas ?",
            "sv": "vilka är de stora städerna i texas ?",
            "th": "เมือง เอก ของ รัฐ เท็กซัส มี อะไร บ้าง",
            "zh": "得克萨斯 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"wyoming\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wyoming))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 wyoming:s)))",
            "funql": "answer(major(city(loc_2(stateid('wyoming')))))"
        },
        "question": {
            "en": "what are the major cities in wyoming",
            "de": "wie lauten die wichtigsten stadte in wyoming",
            "el": "ποιες είναι οι κύριες πόλεις στο wyoming",
            "fa": "شهرهای عمده وایومینگ کدامند ؟",
            "id": "apa kota-kota besar di wyoming ?",
            "sv": "vilka är de stora städerna i wyoming ?",
            "th": "เมือง เอก ของ รัฐ ไวโอมิง มี อะไร บ้าง",
            "zh": "怀俄明 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"california\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 california:s)))",
            "funql": "answer(major(city(loc_2(stateid('california')))))"
        },
        "question": {
            "en": "what are the major cities in california",
            "de": "wie lauten die wichtigsten fluesse  in dem staat california",
            "el": "ποιες είναι οι κύριες πόλεις στην california",
            "fa": "شهرهای عمده کالیفرنیا کدامند ؟",
            "id": "apa kota-kota besar di california ?",
            "sv": "vilka är de stora städerna i kalifornien ?",
            "th": "เมือง เอก ของ รัฐ แคลิฟอร์เนีย มี อะไร บ้าง",
            "zh": "加利福尼亚 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"delaware\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 delaware:s)))",
            "funql": "answer(major(city(loc_2(stateid('delaware')))))"
        },
        "question": {
            "en": "what are the major cities in delaware",
            "de": "welches sind grosse staedte in delaware",
            "el": "ποιες είναι οι κύριες πολιτείες στο delaware",
            "fa": "شهرهای عمده دلاور کدامند ؟",
            "id": "apa kota-kota besar di delaware ?",
            "sv": "vilka är de stora städerna i delaware ?",
            "th": "เมือง เอก ของ รัฐ เดลาแวร์ มี อะไรบ้าง",
            "zh": "特拉华 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"montana\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 montana:s)))",
            "funql": "answer(major(city(loc_2(stateid('montana')))))"
        },
        "question": {
            "en": "what is the major cities in montana",
            "de": "was sind die groessere staedte in montana",
            "el": "ποιες είναι οι κύριες πόλεις στη montana",
            "fa": "شهرهای عمده مونتانا چیستند ؟",
            "id": "apa kota-kota besar di montana ?",
            "sv": "vilka är de stora städerna i montana ?",
            "th": "เมือง เอก ของ รัฐ มอนตานา มี อะไรบ้าง",
            "zh": "蒙大拿 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"rhode island\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid('rhode island'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 rhode_island:s)))",
            "funql": "answer(major(city(loc_2(stateid('rhode island')))))"
        },
        "question": {
            "en": "what are the major cities in rhode island",
            "de": "wie lauten die wichtigsten staedte in rhode island",
            "el": "ποιες είναι οι κύριες πόλεις στο rhode island",
            "fa": "شهرهای عمده اکلاهما کدامند ؟",
            "id": "apa kota-kota besar di rhode island ?",
            "sv": "vilka är de stora städerna i rhode island ?",
            "th": "เมือง เอก ของ รัฐ โรดไอแลนด์ มี อะไร บ้าง",
            "zh": "罗德岛 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"missouri\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(missouri))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 missouri:s)))",
            "funql": "answer(major(city(loc_2(stateid('missouri')))))"
        },
        "question": {
            "en": "what are the major cities in missouri",
            "de": "welche sind die groessten staedte in missouri",
            "el": "ποιες είναι οι κύριες πόλεις στο missouri",
            "fa": "شهرهای عمده میسوری کدامند ؟",
            "id": "apa kota-kota besar di missouri ?",
            "sv": "vilka är de stora städerna i missouri ?",
            "th": "เมือง เอก ของ รัฐ มิสซูรี มี อะไร บ้าง",
            "zh": "密苏里 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"kansas\"",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 kansas:s)))",
            "funql": "answer(major(city(loc_2(stateid('kansas')))))"
        },
        "question": {
            "en": "what are the major cities in kansas",
            "de": "welche grossen staedte gibt es in kansas",
            "el": "ποιες είναι οι κύριες πόλεις στο kansas",
            "fa": "شهرهای عمده کانزاس کدامند ؟",
            "id": "apa kota-kota besar di kansas ?",
            "sv": "vilka är de stora städerna i kansas ?",
            "th": "เมือง เอก ของ รัฐ แคนซัส มี อะไรบ้าง",
            "zh": "堪萨斯 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(major(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what are the major cities of the united states",
            "de": "welches sind die groessten staedte der usa",
            "el": "ποιες είναι οι κύριες πόλεις στις ηνωμένες πολιτείες",
            "fa": "شهرهای عمده ایالات متحده کدامند ؟",
            "id": "apa kota-kota besar di amerika serikat ?",
            "sv": "vilka är de stora städerna i förenta staterna ?",
            "th": "เมือง เอก ของ สหรัฐ มี อะไร บ้าง",
            "zh": "美国 有 哪些 主要 城市 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(major(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what are the major cities of the us",
            "de": "wie lauten die wichtigsten staedte der vereinigten staaten",
            "el": "ποιες είναι οι κύριες πόλεις των ηπα",
            "fa": "چند شهر عمده در ایالات متحده وجود دارد ؟",
            "id": "apa kota-kota besar as ?",
            "sv": "vilka är de stora städerna som ligger i usa ?",
            "th": "เมือง เอก ของ อเมริกา มี อะไร บ้าง",
            "zh": "美国 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(riverid('mississippi')))))"
        },
        "question": {
            "en": "what are the populations of the states through which the mississippi runs",
            "de": "wie gross sind die bevoelkerungen der staaten durch die der mississippi fliesst",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο mississippi",
            "fa": "جمعیت های همه شهرهایی که میسیسیپی از آنها میگذرد را به من بگو .",
            "id": "berapa populasi negara bagian yang dilalui mississippi ?",
            "sv": "vad är folkmängden i de stater genom vilka floden mississippi flyter ?",
            "th": "รัฐ ต่างๆ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าไหร่ บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what are the populations of states through which the mississippi river runs",
            "de": "wie hoch ist die bevoelkerung der staaten durch welche der mississippi fluss verlaeuft",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi",
            "fa": "جمعیت های همه ایالت های عمده ای که میسیسیپی از آنها میگذرد را به من بگو .",
            "id": "berapa populasi negara-negara bagian yang dilalui sungai mississippi ?",
            "sv": "vad är folkmängden i de stater mississippifloden rinner genom ?",
            "th": "รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร กี่ คน บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what are the populations of the states through which the mississippi river runs",
            "de": "wie gross ist die bevoelkerungszahl der staaten durch die der mississippi fliesst",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi",
            "fa": "جمعیت های همه شهرهای عمده تگزاس را به من بگو .",
            "id": "berapa populasi negara bagian yang dilalui sungai mississippi ?",
            "sv": "vad är folkmängden i de stater genom vilka mississippifloden rinner ?",
            "th": "รัฐ แต่ละ รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าใด บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what are the populations of the states through which the mississippi river runs",
            "de": "wie gross ist die bevoelkerungszahl der staaten durch die der mississippi fliesst",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi",
            "fa": "جمعیت های همه شهرهای عمده تگزاس را به من بگو .",
            "id": "berapa populasi negara bagian yang dilalui sungai mississippi ?",
            "sv": "vad är folkmängden i de stater genom vilka mississippifloden rinner ?",
            "th": "รัฐ แต่ละ รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าใด บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what are the populations of the states through which the mississippi river runs",
            "de": "wie gross ist die bevoelkerungszahl der staaten durch die der mississippi fliesst",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi",
            "fa": "جمعیت های همه شهرهای عمده تگزاس را به من بگو .",
            "id": "berapa populasi negara bagian yang dilalui sungai mississippi ?",
            "sv": "vad är folkmängden i de stater genom vilka mississippifloden rinner ?",
            "th": "รัฐ แต่ละ รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าใด บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what are the populations of the states through which the mississippi river runs",
            "de": "wie gross ist die bevoelkerungszahl der staaten durch die der mississippi fliesst",
            "el": "ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi",
            "fa": "جمعیت های همه شهرهای عمده تگزاس را به من بگو .",
            "id": "berapa populasi negara bagian yang dilalui sungai mississippi ?",
            "sv": "vad är folkmängden i de stater genom vilka mississippifloden rinner ?",
            "th": "รัฐ แต่ละ รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าใด บ้าง",
            "zh": "密西西比 河 所 贯穿 的 州 有 多少 人"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"montana\"",
            "prolog": "answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(montana))))",
            "lambda": "(lambda $0:i (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (city:<c,t> $1) (loc:<lo,<lo,t>> $1 montana:s) (population:<lo,<i,t>> $1 $0)))))",
            "funql": "answer(population_1(major(city(loc_2(stateid('montana'))))))"
        },
        "question": {
            "en": "what are the populations of all the major cities in montana",
            "de": "wie gross sind die bevoelkerungen aller wichtigen staedte in montana",
            "el": "ποιοι είναι οι πληθυσμοί από όλες τις κύριες πόλεις στη montana",
            "fa": "جمعیت همه شهرهای عمده مونتانا را به من بگو .",
            "id": "berapa populasi semua kota besar di montana ?",
            "sv": "vad är folkmängden i alla stora städer i montana ?",
            "th": "แต่ละ เมือง เอก ของ รัฐ มอนตานา มี ประชากร เท่าไหร่",
            "zh": "在 蒙大拿 州 所有 主要 城市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"wisconsin\"",
            "prolog": "answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))",
            "lambda": "(population:<lo,i> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (loc:<lo,<lo,t>> $0 wisconsin:s) (city:<c,t> $0)))))",
            "funql": "answer(population_1(major(city(loc_2(stateid('wisconsin'))))))"
        },
        "question": {
            "en": "what is the population of the major cities in wisconsin",
            "de": "was ist die bevoelkerung der groesseren staedte in wisconsin",
            "el": "ποιος είναι ο πληθυσμός των κύριων πόλεων στο wisconsin",
            "fa": "جمعیت شهرهای عمده ویسکونسین چقدر است ؟",
            "id": "berapa populasi kota-kota besar di wisconsin ?",
            "sv": "vad är folkmängden i de stora städerna i wisconsin ?",
            "th": "เมือง เอก ของ รัฐ วิสคอนซิน มี ประชากร เท่าไหร่",
            "zh": "威斯康星 州 的 主要 城市 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the biggest city in the usa",
            "de": "was ist die groesste stadt in den usa",
            "el": "ποια είναι η μεγαλύτερη πόλη στις ηπα",
            "fa": "بزرگترین شهر ایالات متحده کدام است ؟",
            "id": "apa kota terbesar di amerika serikat ?",
            "sv": "vilken är den största staden i usa ?",
            "th": "เมือง ใด เป็น เมือง ที่ ใหญ่ ที่สุด ใน สหรัฐอเมริกา",
            "zh": "哪个 是 美国 最大 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,city(A)))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (city:<c,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(all)))"
        },
        "question": {
            "en": "what 's the largest city",
            "de": "welches ist die groesste stadt",
            "el": "ποια είναι η μεγαλύτερη πόλη",
            "fa": "بزرگترین شهر کدام است ؟",
            "id": "apa kota terbesar ?",
            "sv": "vad är den största staden ?",
            "th": "เมือง ที่ ใหญ่ ที่สุด คือ เมือง ใด",
            "zh": "最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(city(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (city:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(city(all))))"
        },
        "question": {
            "en": "what city has the largest population",
            "de": "welche stadt hat die groesste bevoelkerung",
            "el": "ποια πόλη έχει το μεγαλύτερο πληθυσμό",
            "fa": "کدام شهرهای تگزاس بیشترین جمعیت را دارند ؟",
            "id": "apa kota yang memiliki populasi terbesar ?",
            "sv": "vilken stad har den största befolkningen ?",
            "th": "เมือง ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 城市 拥有 人口 最多"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the biggest city in the us",
            "de": "welches ist die groesste stadt der usa",
            "el": "ποια είναι η μεγαλύτερη πόλη στις us",
            "fa": "بزرگترین شهر ایالات متحده کدام است ؟",
            "id": "apa kota terbesar di as ?",
            "sv": "vilken är den största staden i usa ?",
            "th": "เมือง ใหญ่ ที่สุด ของ สหรัฐ คือ เมือง ไหน",
            "zh": "什么 是 美国 最大 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the biggest city in usa",
            "de": "welcher ist die groesste stadt der usa",
            "el": "ποια είναι η μεγαλύτερη πόλη στις usa",
            "fa": "بزرگترین شهر ایالات متحده کدام است ؟",
            "id": "apa kota terbesar di amerika serikat ?",
            "sv": "vad är den största staden i usa ?",
            "th": "เมือง ใหญ่ ที่สุด ใน สหรัฐอเมริกา ชื่อ ว่า อะไร",
            "zh": "在 美国 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(C),capital(C,A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (capital:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(capital_1(state(all)))))"
        },
        "question": {
            "en": "what is the largest state capital in population",
            "de": "welche hauptstadt hat die groesste bevoelkerung",
            "el": "ποια είναι η μεγαλύτερη πρωτεύουσα πολιτείας σε πληθυσμό",
            "fa": "کدام مرکز استان دارای بیشترین جمعیت است ؟",
            "id": "apa ibukota negara bagian terbesar dalam jumlah penduduk ?",
            "sv": "vilken är den största huvudstaden enligt folkmängd ?",
            "th": "เมืองหลวง ใด มี ประชากร มาก ที่สุด",
            "zh": "人口 最多 的 首府 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,capital(A)))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (capital:<c,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(capital(all)))"
        },
        "question": {
            "en": "what is the largest capital",
            "de": "was ist die groesste hauptstadt",
            "el": "ποια είναι η μεγαύτερη πρωτεύουσα",
            "fa": "بزرگترین مرکز ایالت کجاست ؟",
            "id": "apa ibukota terbesar ?",
            "sv": "vilken är den största huvudstaden ?",
            "th": "เมืองหลวง ใด ใหญ่ ที่สุด",
            "zh": "最大 的 首府 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(population(A,B),capital(A),loc(A,C),const(C,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (capital:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(capital(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the most populated capital in the usa",
            "de": "welche ist die meist bevoelkerte stadt in den usa",
            "el": "ποια είναι η πολυπληθέστερη πρωτεύουσα στις usa",
            "fa": "پرجمعیت ترین مرکز ایالت در ایالات متحده کجاست ؟",
            "id": "apa ibukota yang paling banyak penduduknya di amerika serikat ?",
            "sv": "vilken är den mest befolkade huvudstaden i usa ?",
            "th": "เมืองหลวง ใด ใน อเมริกา ที่ มี ประชากร มาก ที่สุด",
            "zh": "美国 人口 最多 的 首府 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (capital:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(capital(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what capital is the largest in the us",
            "de": "welche hauptstadt ist die groesse in den usa",
            "el": "ποια πρωτεύουσα είναι η μεγαλύτερη στις ηπα",
            "fa": "بزگترین مرکز استان در ایالات متحده کدام است ؟",
            "id": "apa ibukota yang terbesar di as ?",
            "sv": "vilken huvudstad är den största i usa ?",
            "th": "เมืองหลวง ใด ใหญ่ ที่สุด ใน อเมริกา",
            "zh": "在 美国 哪个 首府 最大"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(capital(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (capital:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(capital(all))))"
        },
        "question": {
            "en": "what capital has the largest population",
            "de": "was ist die groesste hauptstadt nach bevoelkerung",
            "el": "ποια πολιτεία έχει τον μεγαλύτερο πληθυσμό",
            "fa": "کدام مرکز استان ها دارای بیشترین جمعیت هستند ؟",
            "id": "apa ibukota dengan populasi terbesar ?",
            "sv": "vilken huvudstad har den största befolkningen ?",
            "th": "เมืองหลวง ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 首府 的 人口 最多"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ORDER BY T2.POPULATION DESC LIMIT 1)",
            "prolog": "answer(A,largest(A,capital(A)))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (capital:<c,t> $0)) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(capital(all)))"
        },
        "question": {
            "en": "what is largest capital",
            "de": "wie lautet die groesste hauptstadt",
            "el": "ποια είναι η μεγαλύτερη πρωτεύουσα",
            "fa": "بزرگترین مرکز استان کدام است ؟",
            "id": "apa ibukota terbesar ?",
            "sv": "vad är största huvudstaden ?",
            "th": "เมืองหลวง ใด ใหญ่ ที่สุด",
            "zh": "最大 的 首府 是 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( AREA ) FROM STATE",
            "prolog": "answer(A,sum(B,(area(C,B),state(C)),A))",
            "lambda": "(sum:<<e,t>,<<e,i>,i>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(sum(area_1(state(all))))"
        },
        "question": {
            "en": "what is the area of all the states combined",
            "de": "wie lautet die gesamte bevoelkerung aller 50 staaten",
            "el": "ποιο είναι το εμβαδό όλων των πολιτειών συνολικά",
            "fa": "مجموع مساحت همه ایالت ها چقدر است ؟",
            "id": "berapa luas dari gabungan seluruh negara bagian ?",
            "sv": "vad är arean av alla stater tillsammans ?",
            "th": "ถ้า เอา ทุก รัฐ มา รวม กัน จะ มี พื้นที่ เท่าไหร่",
            "zh": "所有 州 的 面积 总和 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( AREA ) FROM STATE",
            "prolog": "answer(A,(area(B,A),const(B,countryid(usa))))",
            "lambda": "(size:<lo,i> usa:co)",
            "funql": "answer(area_1(countryid('usa')))"
        },
        "question": {
            "en": "how many square kilometers in the us",
            "de": "wie viele quadratkilometer umfasst die usa",
            "el": "πόσα τετραγωνικά χιλιόμετρα είναι οι ηπα",
            "fa": "ایالات متحد چند کیلومتر مربع وسعت دارد ؟",
            "id": "berapa kilometer persegi di as ?",
            "sv": "hur många kvadratkilometer i usa ?",
            "th": "อเมริกา มี พื้นที่ กี่ ตาราง กิโลเมตร",
            "zh": "美国 有 多少 平方公里 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( AREA ) FROM STATE",
            "prolog": "answer(A,(area(B,A),const(B,countryid(usa))))",
            "lambda": "(area:<lo,i> usa:co)",
            "funql": "answer(area_1(countryid('usa')))"
        },
        "question": {
            "en": "what is the total area of the usa",
            "de": "welche flaeche hat die usa",
            "el": "ποιο είναι το συνολικό εμβαδό των ηπα",
            "fa": "مجموع مساحت ایالات متحده آمریکا چقدر است ؟",
            "id": "berapa luas total amerika serikat ?",
            "sv": "vad är den totala arean av usa ?",
            "th": "พื้นที่ ทั้งหมด ของ สหรัฐอเมริกา เป็น เท่าไหร่",
            "zh": "美国 的 总 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE STATE_NAME = \"south dakota\"",
            "prolog": "answer(A,(density(B,A),const(B,stateid('south dakota'))))",
            "lambda": "(density:<lo,i> south_dakota:s)",
            "funql": "answer(density_1(stateid('south dakota')))"
        },
        "question": {
            "en": "what is the population density of south dakota",
            "de": "was ist die bevoelkerungsdichte von south dakota",
            "el": "ποια είναι η πυκνότητα του πληθυσμού της south dakota",
            "fa": "چگالی جمعیت داکوتای جنوبی چقدر است ؟",
            "id": "berapa kepadatan penduduk dari south dakota ?",
            "sv": "vad är befolkningstätheten i south dakota ?",
            "th": "รัฐ เซาท์ดาโกตา มี ความ หนาแน่น ของ ประชากร เท่าใด",
            "zh": "南达科他 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(density(B,A),const(B,stateid(texas))))",
            "lambda": "(density:<lo,i> texas:s)",
            "funql": "answer(density_1(stateid('texas')))"
        },
        "question": {
            "en": "what is the population density of texas",
            "de": "wie lautet die bevoelkerungsdichte von texas",
            "el": "ποια είναι η πυκνότητα πληθυσμού του texas",
            "fa": "چگالی جمعیت تگزاس چقدر است ؟",
            "id": "berapa kepadatan penduduk dari texas ?",
            "sv": "vad är befolkningstätheten i texas ?",
            "th": "รัฐ เท็กซัส มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "得克萨斯 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,(density(B,A),const(B,stateid(texas))))",
            "lambda": "(density:<lo,i> texas:s)",
            "funql": "answer(density_1(stateid('texas')))"
        },
        "question": {
            "en": "what is the density of texas",
            "de": "wie gross ist die bevoelkerung von texas",
            "el": "ποια είναι η πυκνότητα του texas",
            "fa": "چگالی جمعیتی تگزاس چقدر است ؟",
            "id": "berapa kepadatan texas ?",
            "sv": "vad är tätheten av texas ?",
            "th": "รัฐ เท็กซัส มี ความ หนาแน่น ประชากร เท่าไหร่",
            "zh": "得克萨斯 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE STATE_NAME = \"wyoming\"",
            "prolog": "answer(A,(density(B,A),const(B,stateid(wyoming))))",
            "lambda": "(density:<lo,i> wyoming:s)",
            "funql": "answer(density_1(stateid('wyoming')))"
        },
        "question": {
            "en": "what is the population density of wyoming",
            "de": "was ist die bevoelkerungsdichte wyomings ?",
            "el": "ποιος είναι η πυκνότητα πληθυσμού στο wyoming",
            "fa": "تراکم جمعیت وایومینگ چقدر است ؟",
            "id": "berapa kepadatan penduduk wyoming ?",
            "sv": "vad är befolkningstätheten i wyoming ?",
            "th": "รัฐ ไวโอมิง มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "怀俄明 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT MOUNTAIN_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(mountain(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the tallest mountain in america",
            "de": "welches ist der hoechste berg in amerika",
            "el": "ποιο είναι το μεγαλύτερο βουνό στην αμερική",
            "fa": "بلندترین کوه در آمریکا چقدر ارتفاع دارد ؟",
            "id": "apa gunung tertinggi di amerika ?",
            "sv": "vad är det högsta berget i amerika ?",
            "th": "ภูเขา ที่ สูง ที่สุด ใน สหรัฐ คือ ภูเขา ใด",
            "zh": "在 美国 最高 的 山 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT MOUNTAIN_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(mountain(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the tallest mountain in the united states",
            "de": "welches ist der hoechste berg in den usa",
            "el": "ποιο είναι το ψηλότερο βουνό στις ηνωμένες πολιτείες",
            "fa": "بلندترین کوه در ایالات متحده کدام است ؟",
            "id": "apa gunung tertinggi di amerika serikat ?",
            "sv": "vad är det högsta berget i usa ?",
            "th": "ภูเขา ที่ สูง ที่สุด ใน อเมริกา ชื่อ ว่า อะไร",
            "zh": "在 美国 最高 的 山 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"des moines\" )",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (capital2:<s,<c,t>> $1 des_moines_ia:c))))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(state(loc_1(capital(cityid('des moines', _))))))))"
        },
        "question": {
            "en": "what is the highest point in the state with capital des moines",
            "de": "welches ist der hoechste punkt im staate mit hauptstadt des moines",
            "el": "ποιο είναι το ψηλότερο σημείο στην πολιτεία με πρωτεύουσα το des moines",
            "fa": "بلندترین نقطه در ایالتی مرکز آن دس موینز است کجاست ؟",
            "id": "apa titik tertinggi di negara bagian dengan ibukota des moines ?",
            "sv": "vad är den högsta punkten i delstaten med huvudstaden des moines ?",
            "th": "รัฐ ที่ มี เมืองหลวง ชื่อ เดส์มวง มี จุด สูง สุด ชื่อ อะไร",
            "zh": "德梅因 首府 所在 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"des moines\" )",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (capital2:<s,<c,t>> $1 des_moines_ia:c))))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(state(loc_1(capital(cityid('des moines', _))))))))"
        },
        "question": {
            "en": "what is the highest point in the state with the capital des moines",
            "de": "wie heisst der hoechste punkt in dem staat mit der hauptstadt des moines",
            "el": "ποιο είναι το ψηλότερο σημείο στην πολιτεία με πρωτεύουσα το des moines",
            "fa": "بلندترین نقطه در ایالتی که مرکز آن دس موینز است کجاست ؟",
            "id": "apa titik tertinggi di negara bagian dengan ibukota des moines ?",
            "sv": "vad är den högsta punkten i delstaten vars huvudstad är des moines ?",
            "th": "จุด สูง สุด ของ รัฐ ที่ มี เมืองหลวง ชื่อ เดส์มวง นั้น มี ความ สูง เท่าไหร่",
            "zh": "德梅因 首府 所在 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest point in the country",
            "de": "wie lautet der hoechste punkt der usa",
            "el": "ποιο είναι το ψηλότερο σημείο στην χώρα",
            "fa": "بلندترین نقطه در کشور کجاست ؟",
            "id": "apa titik tertinggi di negara ?",
            "sv": "vad är den högsta punkten i landet ?",
            "th": "จุด สูง สุด ของ อเมริกา คือ ตรงไหน",
            "zh": "这个 国家 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest point in the us",
            "de": "wie lautet der hoechste punkt in dem land",
            "el": "ποιο είναι το ψηλότερο σημείο στις ηπα",
            "fa": "بلندترین نقطه در ایالات متحده کجاست ؟",
            "id": "apa titik tertinggi di as ?",
            "sv": "vad är den högsta punkten i usa ?",
            "th": "พื้นที่ สูง ที่สุด ของ สหรัฐ คือ จุด ใด",
            "zh": "美国 的 最高 点 是 什么 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the highest point in the united states",
            "de": "was ist der hoechste punkt in den vereinigten staaten",
            "el": "ποιο είναι το ψηλότερο σημείο στις ηνωμένες πολιτείες",
            "fa": "بلندترین نقطه در ایالات متحده کجاست ؟",
            "id": "apa titik tertinggi di amerika serikat ?",
            "sv": "vad är den högsta punkten i förenta staterna ?",
            "th": "จุด สูง สุด ของ ประเทศ อยู่ ตรงไหน",
            "zh": "美国 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),smallest(B,state(B)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(smallest(state(all))))))"
        },
        "question": {
            "en": "what is the biggest city in the smallest state",
            "de": "was ist die groesste stadt in dem kleinsten staat",
            "el": "ποια είναι η μεγαλύτερη πόλη στη μικρότερη πολιτεία",
            "fa": "بزرگترین شهر کوچکترین ایالت کدام است ؟",
            "id": "apa kota terbesar di negara bagian terkecil ?",
            "sv": "vilken är den största staden i den minsta staten ?",
            "th": "รัฐ ที่ เล็ก ที่สุด มี เมือง ที่ ใหญ่ ที่สุด ชื่อ อะไร",
            "zh": "在 最小 的 州 中 最大 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(next_to_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the largest state bordering texas",
            "de": "welches ist der groesste an texas grenzende staat",
            "el": "ποια είναι η μεγαλύτερη πολιτεία που συνορεύει το texas",
            "fa": "بزرگترین ایالت همجوار تگزاس کجاست ؟",
            "id": "apa negara bagian terbesar yang berbatasan dengan texas ?",
            "sv": "vilken är den största delstaten som gränsar till texas ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด ที่ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "与 得克萨斯 州 接壤 的 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(next_to_2(stateid('texas')))))"
        },
        "question": {
            "en": "what state that borders texas is the largest",
            "de": "welches ist der groesste an texas grenzende staat",
            "el": "ποια πολιτεία που συνορεύει με το texas είναι η μεγαλύτερη",
            "fa": "کدام ایالت همجوار تگزاس بزرگتر است ؟",
            "id": "apa negara bagian yang berbatasan dengan texas yang terbesar ?",
            "sv": "vilken stat som gränsar texas är den största ?",
            "th": "รัฐ ใด เป็น รัฐ ใหญ่ ที่สุด ที่ ติด กับ รัฐ เท็กซัส",
            "zh": "与 得克萨斯 州 接壤 的 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"california\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"california\" )",
            "prolog": "answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(california)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 california:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(next_to_2(stateid('california')))))"
        },
        "question": {
            "en": "what is the largest state that borders california",
            "de": "wie lautet der groesste staat der an california grenzt",
            "el": "ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με την california",
            "fa": "بزرگترین ایالت همجوار کالیفرنیا کدامست ؟",
            "id": "apa negara bagian terbesar yang berbatasan dengan california ?",
            "sv": "vilken är den största delstaten som gränsar till kalifornien ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด ที่ อยู่ ติด กับ รัฐ แคลิฟอร์เนีย",
            "zh": "与 加利福尼亚 州 接壤 的 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = ( SELECT RIVER_NAME FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias0 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))",
            "lambda": "(len:<r,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(len(most(river(traverse_2(state(all))))))"
        },
        "question": {
            "en": "what is the length of the river that traverses the most states",
            "de": "wie lang ist der fluss welcher am meisten staaten durchquert",
            "el": "ποιο είναι το μήκος του ποταμού που διασχίζει τις περισσότερες πολιτείες",
            "fa": "بلندی رودخانه ای که از بیشتر ایالات عبور میکند چقدر است ؟",
            "id": "berapa panjang dari sungai yang melintasi paling banyak negara bagian ?",
            "sv": "vad är längden på floden som korsar flest stater ?",
            "th": "แม่น้ำ ที่ ไหล ผ่าน รัฐ จำนวน มาก ที่สุด มี ความ ยาว เท่าไหร่",
            "zh": "流经 最多 州 的 河流 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE RIVER_NAME = ( SELECT RIVER_NAME FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias0 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 , RIVER_NAME FROM RIVER GROUP BY RIVER_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))",
            "lambda": "(len:<r,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(len(most(river(traverse_2(state(all))))))"
        },
        "question": {
            "en": "what is the length of the river that runs through the most number of states",
            "de": "wie lange ist der fluss welcher durch die groesste anzahl von staaten fliesst",
            "el": "ποιο είναι το μήκος του ποταμιού που διασχίζει το μεγαλύτερο αριθμό πολιτειών",
            "fa": "طول رودخانه ای که از بیشترین تعداد ایالات میگذرد چقدر است ؟",
            "id": "berapa panjang dari sungai yang mengalir melalui paling banyak negara bagian ?",
            "sv": "vad är längden på floden som rinner genom flest antal stater ?",
            "th": "แม่น้ำ ที่ ไหล ผ่าน จำนวน รัฐ มาก ที่สุด มี ความ ยาว เท่าใด",
            "zh": "贯穿 数量 最多 的 州 的 河流 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"tennessee\" ) ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"tennessee\" )",
            "prolog": "answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 tennessee:s) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(traverse_2(state(next_to_2(stateid('tennessee')))))))"
        },
        "question": {
            "en": "what is the longest river that runs through a state that borders tennessee",
            "de": "welchest ist der laengste fluss der durch einen an tennessee grenzenden staat fliesst",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι που διασχίζει μια πολιτεία που συνορεύει με το tennessee",
            "fa": "نام بلندترین رودخانه که از ایالتی که هم مرز تنسی میگذرد کدامست ؟",
            "id": "apa sungai terpanjang yang mengalir melalui negara bagian yang berbatasan dengan tennessee ?",
            "sv": "vilken är den längsta floden som rinner genom en stat som gränsar till tennessee ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด สาย ใด ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ เทนเนสซี",
            "zh": "贯穿 与 田纳西 州 接壤 的 州 的 最长 的 河流 是 哪条"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"wisconsin\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 wisconsin:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('wisconsin')))))"
        },
        "question": {
            "en": "what is the lowest point in wisconsin",
            "de": "welches ist der tiefstgelegene punkt in wisconsin",
            "el": "ποιο είναι το χαμηλότερο σημείο στο wisconsin",
            "fa": "نام پایینترین نقطه ویسکانسین چیست ؟",
            "id": "apa titik terendah di wisconsin ?",
            "sv": "vad är den lägsta punkten i wisconsin ?",
            "th": "จุด ที่ ต่ำ ที่สุด ใน รัฐ วิสคอนซิน อยู่ ตรงไหน",
            "zh": "威斯康星 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"oregon\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 oregon:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('oregon')))))"
        },
        "question": {
            "en": "what is the lowest point in oregon",
            "de": "was ist der niedrigste punkt in oregon",
            "el": "ποιο είναι το χαμηλότερο σημείο στο oregon",
            "fa": "نام پایین ترین نقطه اورگان چیست ؟",
            "id": "apa titik terendah di oregon ?",
            "sv": "vad är den lägsta punkten i oregon ?",
            "th": "รัฐ โอเรกอน มี จุด ต่ำ สุด อยู่ ตรงไหน",
            "zh": "俄勒冈 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"louisiana\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(louisiana)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 louisiana:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('louisiana')))))"
        },
        "question": {
            "en": "what is the lowest point in louisiana",
            "de": "welches ist der tiefstgelegene punkt in louisiana",
            "el": "ποιο είναι το χαμηλότερο σημείο στη louisiana",
            "fa": "پایین ترین نقطه در لوئیزیانا کدامست ؟",
            "id": "apa titik terendah di louisiana ?",
            "sv": "vad är den lägsta punkten i louisiana ?",
            "th": "จุด ที่ ต่ำ ที่สุด ใน รัฐ หลุยเซียนา อยู่ ที่ไหน",
            "zh": "路易斯安那 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"california\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(california)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 california:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('california')))))"
        },
        "question": {
            "en": "what is the lowest point in california",
            "de": "welches ist der tiefstgelegene punkt in kalifornien",
            "el": "ποιο είναι το χαμηλότερο σημείο στην california",
            "fa": "پایین ترین نقطه کالیفرنیا کدامست ؟",
            "id": "apa titik terendah di california ?",
            "sv": "vad är den lägsta punkten i kalifornien ?",
            "th": "จุด ต่ำ สุด ของ รัฐ แคลิฟอร์เนีย คือ ที่ใด",
            "zh": "加利福尼亚 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(state(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the lowest point in the state of texas",
            "de": "welches ist der tiefstgelegene punkt von texas",
            "el": "ποιο είναι το χαμηλότερο σημείο στην πολιτεία του texas",
            "fa": "پایین ترین نقطه در ایالت تگزاس کجاست ؟",
            "id": "apa titik terendah di negara bagian texas ?",
            "sv": "vad är den lägsta punkten i delstaten texas ?",
            "th": "จุด ต่ำ สุด ของ รัฐ เท็กซัส อยู่ ตรงไหน",
            "zh": "在 得克萨斯 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the lowest point in texas",
            "de": "wie lautet der niedrigste punkt in texas",
            "el": "ποιο είναι το χαμηλότερο σημείο στο texas",
            "fa": "نام پایین ترین نقطه تگزاس چیست ؟",
            "id": "apa titik terendah di texas ?",
            "sv": "vad är den lägsta punkten i texas ?",
            "th": "จุด ต่ำ สุด ของ รัฐ เท็กซัส อยู่ ที่ไหน",
            "zh": "德克萨斯 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"colorado\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 colorado:s))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(stateid('colorado')))))"
        },
        "question": {
            "en": "what is the lowest point of colorado",
            "de": "welches ist der tiefstgelegene punkt in colorado",
            "el": "ποιο είναι το χαμηλότερο σημείο του colorado",
            "fa": "نام پایینترین نقطه کلرادو چیست ؟",
            "id": "apa titik terendah dari colorado ?",
            "sv": "vad är den lägsta punkten i colorado ?",
            "th": "จุด ต่ำ สุด ของ รัฐ โคโลราโด อยู่ ตรงไหน",
            "zh": "科罗拉多 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME = \"iowa\"",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 iowa:s))) (lambda $1:e (elevation:<lo,i> $1)))",
            "funql": "answer(lowest(place(loc_2(stateid('iowa')))))"
        },
        "question": {
            "en": "where is the lowest spot in iowa",
            "de": "wo ist der tiefste punkt in iowa",
            "el": "που είναι το χαμηλότερο σημείο στην iowa",
            "fa": "پایین ترین نقطه در آیووا کجا است ؟",
            "id": "di mana tempat terendah di iowa ?",
            "sv": "vart är den lägsta punkten i iowa ?",
            "th": "จุด ที่ ต่ำ ที่สุด ของ รัฐ ไอโอวา อยู่ ที่ใด",
            "zh": "哪里 是 爱荷华 州 的 最低 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the lowest point in the united states",
            "de": "wie lautet der niedrigste punkt in den vereinigten staaten",
            "el": "ποιο είναι το χαμηλότερο σημείο στις ηνωμένες πολιτείες",
            "fa": "نام پایینترین نقطه در ایالات متحده چیست ؟",
            "id": "apa titik terendah di amerika serikat ?",
            "sv": "vad är den lägsta punkten i usa ?",
            "th": "จุด ต่ำ สุด ของ สหรัฐ อยู่ ที่ไหน",
            "zh": "美国 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (elevation:<lo,i> $1)))",
            "funql": "answer(lowest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "where is the lowest point in the us",
            "de": "wo ist der tiefster punkt in den usa",
            "el": "πού είναι το μικρότερο σημείο στις us",
            "fa": "پایین ترین نقطه در ایالات متحده کجاست ؟",
            "id": "di mana titik terendah di as ?",
            "sv": "vart ligger den lägsta punkten i usa ?",
            "th": "จุด ต่ำ สุด ของ สหรัฐ อยู่ ที่ใด",
            "zh": "哪里 是 美国 的 最低 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the lowest point of the us",
            "de": "welches ist der tiefstgelegene punkt der usa",
            "el": "ποιο είναι το χαμηλότερο σημείο στις ηπα",
            "fa": "پایینترین نقطه در ایالات متحده کجاست ؟",
            "id": "apa titik terendah dari as ?",
            "sv": "vad är den lägsta punkten i usa ?",
            "th": "จุด ใด เป็น จุด ต่ำ สุด ของ อเมริกา",
            "zh": "美国 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_POINT FROM HIGHLOW WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" ) ORDER BY LOWEST_ELEVATION LIMIT 1",
            "prolog": "answer(B,lowest(B,(place(B),loc(B,A),state(A),const(C,riverid(mississippi)),traverse(C,A))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(state(traverse_1(riverid('mississippi')))))))"
        },
        "question": {
            "en": "which is the lowest point of the states that the mississippi runs through",
            "de": "wie lautet der niedrigste punkt von den staaten durch die der mississippi verlaeuft",
            "el": "ποιο είναι το χαμηλότερο σημείο των πολιτειών τις οποίες διασχίζει ο mississippi",
            "fa": "پایین نقطه ایالتهایی که میسیسیپی از آنها عبور میکند کجاست ؟",
            "id": "apa titik terendah negara-negara bagian yang dilalui mississippi ?",
            "sv": "vilken är den lägsta punkten av de stater som mississippi rinner genom ?",
            "th": "จุด ต่ำ สุด ใด ของ สหรัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน",
            "zh": "被 密西西比 河 贯穿 的 州 的 最低 点 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the greatest density",
            "de": "welcher staat hat die groesste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει τη μεγαλύτερη πυκνότητα",
            "fa": "کدام ایالت بیشترین تراکم جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan terbesar ?",
            "sv": "vilken stat har den högsta densiteten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร สูง ที่สุด",
            "zh": "人口 密度 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what state has the highest population density",
            "de": "welcher staat hat die groesste dichte",
            "el": "ποια πολιτεία έχει τη μεγαλύτερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت بیشترین تراکم جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk tertinggi ?",
            "sv": "vilken stat har den högsta befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร สูง ที่สุด",
            "zh": "哪个 州 拥有 最大 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what state has the greatest population density",
            "de": "welcher staat hat die groesste bevoelkerungsidchte",
            "el": "ποια πολιτεία έχει τη μεγαλύερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت بیشترین تمرکز جمعیت را داراست ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terbesar ?",
            "sv": "vilken stat har största befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร สูง สุด",
            "zh": "哪个 州 有 最大 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what state has the largest population density",
            "de": "wie lautet der staat mit der groessten bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει τη μεγαλύτερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت بیشترین تراکم جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan penduduk terbesar ?",
            "sv": "vilken stat har den största befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร สูง ที่สุด",
            "zh": "哪个 州 有 最大 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the state with the largest density in usa",
            "de": "welcher staat hat die hoechste dichte in den usa",
            "el": "ποια είναι η πολιτεία με τη μεγαλύτερη πυκνότητα στις ηπα",
            "fa": "کدام ایالت بیشترین چگالی جمعیت را در ایالات متحده دارد ؟",
            "id": "apa negara bagian dengan kepadatan terbesar di amerika serikat ?",
            "sv": "vilken stat har den högsta befolkningstätheten i usa ?",
            "th": "รัฐ ใด มี ความ หนาแน่น สูง สุด ใน อเมริกา",
            "zh": "在 美国 密度 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(all))))"
        },
        "question": {
            "en": "what is the state with the largest population density",
            "de": "welcher staat hat die groesste bevoelkerungsdichte",
            "el": "ποια είναι η πολιτεία με τη μεγαλύτερη πυκνότητα πληθυσμού",
            "fa": "کدام ایالت بیشترین تراکم جمعیت را داراست ؟",
            "id": "apa negara bagian dengan kepadatan penduduk terbesar ?",
            "sv": "vilken stat har den största befolkningstätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร สูง สุด",
            "zh": "哪个 州 有 最高 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,largest(B,(state(A),density(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0)))",
            "funql": "answer(largest_one(density_1(state(all))))"
        },
        "question": {
            "en": "which state has the largest density",
            "de": "welches ist die hoechste bevoelkerungsdichte",
            "el": "ποια πολιτεία έχει την μεγαλύτερη πυκνότητα",
            "fa": "کدام ایالت بیشترین چگالی جمعیت را دارد ؟",
            "id": "apa negara bagian yang memiliki kepadatan terbesar ?",
            "sv": "vilken stat har den största tätheten ?",
            "th": "รัฐ ใด มี ความ หนาแน่น ของ ประชากร สูง ที่สุด",
            "zh": "哪个 州 拥有 最大 的 人口 密度"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,largest(B,(state(A),const(C,riverid(mississippi)),traverse(C,A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what state which the mississippi runs through has the largest population",
            "de": "wie lautet der meistbevoelkerte staat durch welchen der mississippi fluss verlaeuft",
            "el": "ποια πολιτεία την οποία διασχίζει ο mississippi έχει τον μεγαλύτερο πληθυσμό",
            "fa": "کدام ایالتی که میسیسیپی از آن عبور میکند دارای بیشترین جمعیت است ؟",
            "id": "apa negara bagian yang dilalui mississippi yang memiliki populasi terbesar ?",
            "sv": "vilken stat som mississippi rinner genom har den största befolkningen ?",
            "th": "รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "密西西比 河 流经 的 哪个 州 有 最多 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE DENSITY = ( SELECT DENSITY FROM STATE ORDER BY DENSITY DESC LIMIT 1)",
            "prolog": "answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (density:<lo,i> $0))))",
            "funql": "answer(population_1(largest_one(density_1(state(all)))))"
        },
        "question": {
            "en": "how many people live in the state with the largest population density",
            "de": "wie lautet die bevoelkerung des staat mit der hoechsten bevoelkerungsdichte",
            "el": "πόσοι άνθρωποι ζουν στην πολιτεία με την μεγαλύτερη πυκνότητα πληθυσμού",
            "fa": "چند نفر در ایالت با بیشترین چگالی جمعیتی زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di negara bagian dengan kepadatan penduduk terbesar ?",
            "sv": "hur många människor bor i staten som har den högsta befolkningstätheten ?",
            "th": "รัฐ ที่ มี ประชากร หนาแน่น ที่สุด มี ประชากร อาศัย อยู่ กี่ คน",
            "zh": "有 多少 人 居住 在 人口 密度 最大 的 州 里"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,smallest(B,(city(A),population(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (city:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(smallest_one(population_1(city(all))))"
        },
        "question": {
            "en": "what city has the least population",
            "de": "welche stadt hat die kleinste bevoelkerung",
            "el": "ποια πόλη έχει το λιγότερο πληθυσμό",
            "fa": "کدام شهر بیشترین جمعیت را دارد ؟",
            "id": "apa kota yang memiliki populasi terkecil ?",
            "sv": "vilken stad har minsta befolkningen ?",
            "th": "เมือง ใด มี จำนวน ประชากร น้อย ที่สุด",
            "zh": "哪个 城市 的 人口 最少"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,smallest(B,(city(A),population(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (city:<c,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(smallest_one(population_1(city(all))))"
        },
        "question": {
            "en": "what is the city with the smallest population",
            "de": "was ist die stadt mit der kleinsten bevoelkerung",
            "el": "ποια είναι η πόλη με τον μικρότερη πληθυσμό",
            "fa": "کدام شهر کمترین جمعیت را دارد ؟",
            "id": "apa kota dengan populasi terkecil ?",
            "sv": "vilken är staden med den minsta befolkningen ?",
            "th": "เมือง ใด มี ประชากร น้อย ที่สุด",
            "zh": "人口 最少 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(next_to_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the smallest state that borders texas",
            "de": "welches ist der kleinste an texas angrenzende staat",
            "el": "ποια είναι η μικρότερη πολιτεία που συνορεύει το texas",
            "fa": "نام کوچکترین ایالت همجوار تگزاس چیست ؟",
            "id": "apa negara bagian terkecil yang berbatasan dengan texas ?",
            "sv": "vilken är det minsta staten som gränsar till texas ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ เล็ก ที่สุด ที่ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "与 得克萨斯 州 接壤 的 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"ohio\" ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"ohio\" )",
            "prolog": "answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 ohio:s))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(next_to_2(stateid('ohio')))))"
        },
        "question": {
            "en": "what is the smallest state bordering ohio",
            "de": "wie lautet der kleinste staat welcher an ohio grenzt",
            "el": "ποια είναι η μικρότερη πολιτεία που συνορεύει με το ohio",
            "fa": "کوچکترین ایالت همجوار اوهایو چیست ؟",
            "id": "apa negara bagian terkecil yang berbatasan dengan ohio ?",
            "sv": "vilken är den minsta staten som gränsar till ohio ?",
            "th": "รัฐ ที่ ติด กับ รัฐ โอไฮโอ รัฐ ใด เล็ก ที่สุด",
            "zh": "与 俄亥俄 州 接壤 的 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,smallest(B,(state(A),area(A,B),next_to(A,C),const(C,stateid(texas)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(smallest_one(area_1(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "which state has the smallest area that borders texas",
            "de": "welcher staat hat die kleinste flaeche die texas angrenzt",
            "el": "ποια πολιτεία έχει τη μικρότερη επιφάνεια που συνορεύει με το texas",
            "fa": "کدام ایالت همجوار تگزاس کمترین مساحت را دارد ؟",
            "id": "apa negara bagian yang memiliki luas wilayah terkecil yang berbatasan dengan texas ?",
            "sv": "vilken stat har den minsta arean som gränsar texas ?",
            "th": "รัฐ ใด มี พื้นที่ น้อย ที่สุด และ ติด กับ รัฐ เท็กซัส",
            "zh": "和 德克萨斯 州 接壤 的 面积 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,smallest(A,(state(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the smallest state in the usa",
            "de": "welches ist der kleinste staat der usa",
            "el": "ποια είναι η μικρότερη πολιτεία στις ηπα",
            "fa": "کوچکترین ایالت در ایالات متحده امریکا کدام است ؟",
            "id": "apa negara bagian terkecil di amerika serikat ?",
            "sv": "vilken är det minsta staten i usa ?",
            "th": "รัฐ ใด เล็ก ที่สุด ใน สหรัฐอเมริกา",
            "zh": "美国 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),area(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(smallest_one(area_1(state(all))))"
        },
        "question": {
            "en": "what is the smallest state by area",
            "de": "welcher staat hat die kleinste flaechenausdehnung",
            "el": "ποια είναι η μικρότερη πολιτεία ανά επιφάνεια",
            "fa": "کوچکترین ایالت بر مبنای مساحت کدام است ؟",
            "id": "apa negara bagian terkecil menurut luas wilayah ?",
            "sv": "vilken är det minsta staten enligt area ?",
            "th": "รัฐ ที่ มี พื้นที่ เล็ก ที่สุด คือ รัฐ ใด",
            "zh": "面积 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,smallest(B,(state(A),area(A,B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (area:<lo,i> $0)))",
            "funql": "answer(smallest_one(area_1(state(all))))"
        },
        "question": {
            "en": "what state has the smallest area",
            "de": "welches ist der staat mit der geringsten flaechenausdehnung",
            "el": "ποια πολιτεία έχει το μικρότερο εμβαδό",
            "fa": "کدام ایالت کمترین مساحت را دارد ؟",
            "id": "apa negara bagian yang memiliki luas wilayah terkecil ?",
            "sv": "vilken stat har den minsta arean ?",
            "th": "รัฐ ใด มี พื้นที่ น้อย ที่สุด",
            "zh": "哪个 州 的 面积 最小"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT TRAVERSE ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(river(A),traverse(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(river(traverse_2(state(all)))))"
        },
        "question": {
            "en": "what river traverses the most states",
            "de": "welcher fluss durchquert am meisten staaten",
            "el": "ποιο ποτάμι διαπερνά τις περισσότερες πολιτείες",
            "fa": "کدام رودخانه از ایالت های بیشتری عبور میکند ؟",
            "id": "apa sungai yang melintasi paling banyak negara bagian ?",
            "sv": "vilken flod korsar flest stater ?",
            "th": "แม่น้ำ สาย ใด ไหล ผ่าน รัฐ ต่างๆ มาก ที่สุด",
            "zh": "哪条 河流 流经 的 州 最多"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT TRAVERSE ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(river(A),traverse(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(river(traverse_2(state(all)))))"
        },
        "question": {
            "en": "which river runs through the most states",
            "de": "welcher fluss fliesst durch die meisten staaten",
            "el": "ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες",
            "fa": "کدام رودخانه از بیشتر ایالت ها میگذرد ؟",
            "id": "apa sungai yang melalui paling banyak negara bagian ?",
            "sv": "vilken flod rinner genom flest antal stater ?",
            "th": "แม่น้ำ สาย ใด ไหล ผ่าน รัฐ จำนวน มาก ที่สุด",
            "zh": "哪个 河流 贯穿 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT TRAVERSE ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(river(A),traverse(A,B),state(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(most(river(traverse_2(state(all)))))"
        },
        "question": {
            "en": "what river runs through the most states",
            "de": "welcher fluss verlaeuft durch die meisten staaten",
            "el": "ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες",
            "fa": "چه رودخانه ای از بیشتر ایالات میگذرد ؟",
            "id": "apa sungai yang melalui paling banyak negara bagian ?",
            "sv": "vilken flod rinner genom flest delstater ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ต่างๆ มาก ที่สุด",
            "zh": "哪条 河流 贯穿 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"new mexico\" )",
            "prolog": "answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid('new mexico'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 new_mexico:s) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(river(traverse_2(state(next_to_2(stateid('new mexico'))))))"
        },
        "question": {
            "en": "which rivers run through states bordering new mexico",
            "de": "welcher fluss verlaeuft durch staaten welche an new mexico grenzen",
            "el": "ποια ποτάμια διασχίζουν πολιτείες που συνορεύουν με το new mexico",
            "fa": "کدام رودخانه ها از ایالت هایی میگذرند که با نیومکزیکو همجوار هستند ؟",
            "id": "apa sungai-sungai yang mengalir melalui negara-negara bagian yang berbatasan dengan new mexico ?",
            "sv": "vilka floder löper genom stater som gränsar till new mexico ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ ที่ ติด กับ รัฐ นิวเม็กซิโก",
            "zh": "哪些 河流 流经 与 新墨西哥 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"alabama\" )",
            "prolog": "answer(A,(river(A),traverse(A,B),state(B),const(C,stateid(alabama)),next_to(C,B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> alabama:s $1) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(river(traverse_2(state(next_to_1(stateid('alabama'))))))"
        },
        "question": {
            "en": "what rivers flow through states that alabama borders",
            "de": "welche fluesse verlaufen durch staaten welche an alabama grenzen",
            "el": "ποια ποτάμια διασχίζουν πολιτείες που συνορεύουν με την αλαμπάμα",
            "fa": "کدام رودخانه ها از ایالت هایی میگذرند که با آلاباما همجوار هستند ؟",
            "id": "apa saja sungai-sungai yang mengalir melalui negara-negara bagian yang berbatasan dengan alabama ?",
            "sv": "vilka floder flyter genom stater som gränsar till alabama ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ อลาบามา",
            "zh": "什么 河流 流经 与 阿拉巴马 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY POPULATION DESC LIMIT 1",
            "prolog": "answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(texas)),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what state that borders texas has the highest population",
            "de": "welcher staat der an texas grenzt hat die groesste bevoelkerung",
            "el": "ποια πολιτεία που συνορεύει με το texas έχει τον μεγαλύτερο πληθυσμό",
            "fa": "کدام ایالت همجوار تگزاس دارای بیشترین جمعیت است ؟",
            "id": "apa negara bagian yang berbatasan dengan texas yang memiliki populasi tertinggi ?",
            "sv": "vilken stat som gränsar till texas har den största befolkningen ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 与 得克萨斯 州 接壤 的 州 的 人口 最多"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"oklahoma\" ) ORDER BY POPULATION DESC LIMIT 1",
            "prolog": "answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(oklahoma)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 oklahoma:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(next_to_2(stateid('oklahoma'))))))"
        },
        "question": {
            "en": "what is the most populated state bordering oklahoma",
            "de": "welches ist der bevoelkerungsreichste staat der an oklahoma grenzt",
            "el": "ποια είναι η πολυπληθέστερη πολιτεία που συνορεύει με την oklahoma",
            "fa": "پرجمعیت ترین استان هم مرز اکلاهما کجاست ؟",
            "id": "apa negara bagian terpadat yang berbatasan dengan oklahoma ?",
            "sv": "vilken är den mest befolkade stat som gränsar till oklahoma ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ โอกลาโฮมา และ มี ประชากร สูง สุด",
            "zh": "与 俄克拉荷马 州 接壤 的 人口 最多 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"colorado\" )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(colorado))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 colorado:s) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(state(next_to_2(state(next_to_2(stateid('colorado'))))))"
        },
        "question": {
            "en": "what states border states that border colorado",
            "de": "welche staaten grenzen an colorado grenzende staaten",
            "el": "ποιες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με το colorado",
            "fa": "کدام ایالات همجوار ایالت هایی هستند که با کلرادو هم مرز هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan colorado ?",
            "sv": "vilka stater gränsar till de stare som gränsar till colorado ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ที่ อยู่ ติด กับ รัฐ โคโลราโด",
            "zh": "和 科罗拉多 接壤 的 州 与 哪些 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what states border states that the mississippi runs through",
            "de": "welche staaten grenzen an staaten durch denen die mississippi fliesst",
            "el": "ποιες πολιτείες συνορεύουν με πολιτείες τις οποίες διασχίζει ο mississippi",
            "fa": "کدام ایالت ها هم مرز ایالت هایی هستند که میسیسیپی از آنها عبور میکند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang dilalui mississippi ?",
            "sv": "vilka stater gränsar till stater som mississippi rinner genom ?",
            "th": "รัฐ ใดบ้าง ที่ ติด กับ รัฐ ที่ มี แม่น้ำ มิสซิสซิปปี ไหล ผ่าน",
            "zh": "什么 州 和 密西西比 河 贯穿 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))"
        },
        "question": {
            "en": "which states border states through which the mississippi traverses",
            "de": "welche staaten grenzen an einen staat durch den der mississippi fliesst",
            "el": "ποιες πολιτείες συνορεύουν με πολιτείες τις οποίες διασχίζει ο mississippi",
            "fa": "کدام ایالت ها هم مرز ایالت هایی هستند که میسیسیپی از آنها عبور میکند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang dilintasi mississippi ?",
            "sv": "vilka stater gränsar till stater genom vilka mississippi korsar ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน",
            "zh": "哪些 州 与 被 密西西比 河 穿越 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> mississippi_river:r $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what states border states which the mississippi runs through",
            "de": "welche staaten grenzen an staaten an durch denen der mississippi fliesst",
            "el": "ποιες πολιτείες συνορεύουν πολιτείες τις οποίες διασχίζει ο mississippi",
            "fa": "کدام ایالت ها هم مرز ایالتی هستند که میسیسیپی از آن عبور میکند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang dilalui mississippi ?",
            "sv": "vilka stater gränsar till stater som mississippi rinner genom ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี อะไรบ้าง",
            "zh": "什么 州 和 密西西比 河 贯穿 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(B,A),largest(C,(state(B),population(B,C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1))))))",
            "funql": "answer(state(next_to_2(largest_one(population_1(state(all))))))"
        },
        "question": {
            "en": "what are the states that border the state with the greatest population",
            "de": "welche staaten grenzen an den hoechstbevoelkertsten staat",
            "el": "ποιες είναι οι πολιτείες που συνορεύουν την πολιτεία με το μεγαλύτερο πληθυσμό",
            "fa": "چه ایالت هایی با پرجمعیت ترین ایالت مجاور هستند ؟",
            "id": "apa negara bagian yang berbatasan dengan negara bagian dengan populasi terbesar ?",
            "sv": "vilka är de stater som gränsar till staten med den största befolkningen ?",
            "th": "รัฐ ใด บ้าง ที่ อยู่ ติด กับ รัฐ ที่ มี ประชากร มาก ที่สุด",
            "zh": "有 哪些 州 与 人口 最多 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM ( SELECT STATE_NAME , COUNT( 1 ) DERIVED_FIELDalias0 FROM CITY GROUP BY STATE_NAME ) WHERE DERIVED_FIELDalias0 = ( SELECT DERIVED_FIELDalias1 FROM ( SELECT COUNT( 1 ) DERIVED_FIELDalias1 FROM CITY GROUP BY STATE_NAME ) ORDER BY DERIVED_FIELDalias1 DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),most(B,C,(state(B),loc(C,B),city(C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (city:<c,t> $2) (loc:<lo,<lo,t>> $2 $1)))))))))",
            "funql": "answer(state(next_to_2(most(state(loc_1(city(all)))))))"
        },
        "question": {
            "en": "what states border the states with the most cities",
            "de": "welche staaten grenzen an die staaten mit den meisten staedten an",
            "el": "ποιες πολιτείες συνορεύουν με τις πολιτείες με τις περισσότερες πόλεις",
            "fa": "کدام ایالت ها با ایالتی با بیشترین تعداد شهرها هم مرز هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian dengan paling banyak kota ?",
            "sv": "vilka stater gränsar till staterna med flest städer ?",
            "th": "รัฐ ใด บ้าง อยู่ กับ รัฐ ที่ มี เมือง มาก ที่สุด",
            "zh": "什么 州 和 拥有 最多 城市 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM MOUNTAIN WHERE MOUNTAIN_ALTITUDE = ( SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN ORDER BY MOUNTAIN_ALTITUDE DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,(mountain(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (mountain:<m,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(mountain(all)))))"
        },
        "question": {
            "en": "which state has the highest peak in the country",
            "de": "in welchem staat liegt der hoechste gipfel des landes",
            "el": "ποια πολιτεία έχει την ψηλότερη κορυφή στη χώρα",
            "fa": "کدام ایالت بلند ترین قله را در کشور دارد ؟",
            "id": "apa negara bagian yang memiliki puncak tertinggi di negara ?",
            "sv": "vilken stat har den högsta toppen i landet ?",
            "th": "รัฐ ใด มี ยอดเขา สูง สุด ใน ประเทศ",
            "zh": "哪个 州 拥有 美国 的 最高 峰"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE RIVER_NAME NOT IN ( SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"tennessee\" )",
            "prolog": "answer(A,(river(A),not((traverse(A,B),const(B,stateid(tennessee))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (not:<t,t> (loc:<lo,<lo,t>> $0 tennessee:s))))",
            "funql": "answer(exclude(river(all), traverse_2(stateid('tennessee'))))"
        },
        "question": {
            "en": "what rivers do not run through tennessee",
            "de": "welche fluesse fliessen nicht durch tennessee",
            "el": "ποια ποτάμια δεν διασχίζουν το tennessee",
            "fa": "چه رودخانه هایی از تنسی نمیگذرند ؟",
            "id": "apa saja sungai-sungai yang tidak melalui tennessee ?",
            "sv": "vilka floder går inte genom tennessee ?",
            "th": "แม่น้ำ ใด ไม่ได้ ไหล ผ่าน รัฐ เทนเนสซี",
            "zh": "什么 河流 不 贯穿 田纳西 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"atlanta\" ) )",
            "prolog": "answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(atlanta,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1) (next_to:<lo,<lo,t>> $1 (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (capital2:<s,<c,t>> $2 atlanta_ga:c))))))))))",
            "funql": "answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('atlanta', _)))))))))"
        },
        "question": {
            "en": "what rivers run through the states that border the state with the capital atlanta",
            "de": "welche fluesse verlaufen duch die staaten welche an den staat mit der hauptstadt atlanta grenzen",
            "el": "ποια ποτάμια διασχίζουν τις πολιτείες που συνορεύουν την πολιτεία με πρωτεύουσα την atlanta",
            "fa": "کدام رودخانه ها از ایالاتی میگذرند که با ایالتی که دارای مرکز استان آتلانتاست مرز مشترک دارند ؟",
            "id": "apa saja sungai-sungai yang melalui negara-negara bagian yang berbatasan dengan negara bagian dengan ibukota atlanta ?",
            "sv": "vilka floder löper genom de stater som gränsar till staten med huvudstaden atlanta ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ ที่ มี เมืองหลวง ชื่อ แอตแลนต้า",
            "zh": "什么 河流 贯穿 与 首府 亚特兰大 所在 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,(place(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (place:<p,t> $0)) (lambda $0:e (elevation:<lo,i> $0))) $0)))",
            "funql": "answer(state(loc_1(highest(place(all)))))"
        },
        "question": {
            "en": "what state has the highest elevation",
            "de": "welcher staat hat die hoechste erhebung",
            "el": "ποια πολιτεία έχει το μεγαλύτερο υψόμετρο",
            "fa": "کدام ایالت دارای بالاترین ارتفاع است ؟",
            "id": "apa negara bagian yang memiliki elevasi tertinggi ?",
            "sv": "vilken stat har den högsta höjden ?",
            "th": "รัฐ ใด มี จุด สูง สุด ใน ประเทศ",
            "zh": "哪个 州 的 海拔 最高"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(loc(B,A),state(A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))"
        },
        "question": {
            "en": "in which state does the highest point in usa exist",
            "de": "was ist der staat mit der hoechsten hoehe in den vereinigten staaten",
            "el": "σε ποια πολιτεία υπάρχει το ψηλότερο σημείο στις ηπα",
            "fa": "بلندترین نقطه ایالات متحده در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian apakah titik tertinggi di amerika serikat berada ?",
            "sv": "i vilken stat finns den högsta punkten i usa ?",
            "th": "รัฐ ใด มี จุด สูง สุด ใน อเมริกา",
            "zh": "哪个 州 包含 美国 的 最高 点 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,place(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (place:<p,t> $1)) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(place(all)))))"
        },
        "question": {
            "en": "what state has highest elevation",
            "de": "welcher staat hat die hoechste erhebung",
            "el": "ποια πολιτεία έχει το μεγαλύτερο υψόμετρο",
            "fa": "چه ایالتی بیشترین ارتفاع را داراست ؟",
            "id": "apa negara bagian yang memiliki elevasi tertinggi ?",
            "sv": "vilken stat har högst höjd ?",
            "th": "รัฐ ใด มี ยอดเขา สูง ที่สุด",
            "zh": "哪个 州 有 最高 海拔"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))"
        },
        "question": {
            "en": "what is the state with the highest elevation in the united states",
            "de": "in welchem staat liegt die hoechste erhebung in den vereinigten staaten",
            "el": "ποια είναι η πολιτεία με το μεγαλύτερο υψόμετρο στις ηνωμένες πολιτείες",
            "fa": "ایالتی که بالاترین ارتفاع را در ایالات متحده دارد کدام است ؟",
            "id": "apa negara bagian dengan elevasi tertinggi di amerika serikat ?",
            "sv": "vilken stat har den högsta höjden i usa ?",
            "th": "รัฐ ใด มี พื้นที่ สูง สุด ใน สหรัฐอเมริกา",
            "zh": "美国 海拔 最高 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,place(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (place:<p,t> $1)) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(place(all)))))"
        },
        "question": {
            "en": "what is the state that contains the highest point",
            "de": "welcher staat hat die hoechste erhebung",
            "el": "ποια είναι η πολιτεία που περιέχει το ψηλότερο σημείο",
            "fa": "ایالتی که دارای بلندترین نقطه است کدام است ؟",
            "id": "apa negara bagian yang memiliki titik tertinggi ?",
            "sv": "vilken stat har den högsta punkten ?",
            "th": "รัฐ ที่ มี จุด สูง ที่สุด ชื่อ รัฐ อะไร",
            "zh": "哪个 州 拥有 最高 海拔"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))"
        },
        "question": {
            "en": "what state contains the highest point in the us",
            "de": "in welchem staat liegt der hoechste punkt der usa",
            "el": "ποια πολιτεία περιέχει το ψηλότερο σημείο στις ηπα",
            "fa": "بلند ترین نقطه ایالات متحده در کدام ایالت واقع شده است ؟",
            "id": "apa negara bagian yang memiliki titik tertinggi di as ?",
            "sv": "vilken stat har den högsta punkten i usa ?",
            "th": "รัฐ ใด มี ภูเขา ที่ สูง ที่สุด ใน สหรัฐอเมริกา อยู่",
            "zh": "哪个 州 包含 美国 的 最高 点 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),lowest(B,place(B))))",
            "lambda": "(lambda $0:e (named:<e,<n,t>> (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $2:e (place:<p,t> $2)) (lambda $2:e (elevation:<lo,i> $2))) $1)))) $0))",
            "funql": "answer(state(loc_1(lowest(place(all)))))"
        },
        "question": {
            "en": "what is the name of the state with the lowest point",
            "de": "wie lautet der name des staates mit der geringsten erhebung",
            "el": "ποιο είναι το όνομα της πολιτείας με το χαμηλότερο σημείο",
            "fa": "ایالتی که پایین ترین نقطه را دارد چه نام دارد ؟",
            "id": "apa nama negara bagian dengan titik terendah ?",
            "sv": "vad är namnet på den stat med den lägsta punkten ?",
            "th": "รัฐ ที่ มี จุด ต่ำ ที่สุด ชื่อ ว่า อะไร",
            "zh": "最低 点 所在 州 的 名字 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),lowest(B,place(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (place:<p,t> $1)) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(lowest(place(all)))))"
        },
        "question": {
            "en": "what is the state with the lowest point",
            "de": "welcher staat hat die niedrigste erhebung",
            "el": "ποια είναι η πολιτεία με το χαμηλότερο σημείο",
            "fa": "ایالتی که کم ارتفاع ترین نقطه در آن واقع شده است کدام است ؟",
            "id": "apa negara bagian dengan titik terendah ?",
            "sv": "vilken stat har den lägsta punkten ?",
            "th": "รัฐ ใด มี จุด ต่ำ สุด ของ สหรัฐอเมริกา",
            "zh": "含有 最低 点 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER WHERE LENGTH > 750 GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),major(B),river(B),traverse(B,A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (major:<lo,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(traverse_1(major(river(all))))))"
        },
        "question": {
            "en": "what state has the most major rivers running through it",
            "de": "welcher staat hat die meisten fluesse",
            "el": "ποια πολιτεία διασχίζουν τα περισσότερα κύρια ποτάμια",
            "fa": "بیشترین رودهای عمده از کدام ایالت میگذرند ؟",
            "id": "apa negara bagian yang paling banyak dilalui sungai-sungai besar ?",
            "sv": "vilken stat har flest stora floder som rinner genom den ?",
            "th": "รัฐ ใด มี แม่น้ำ สาย หลัก ไหล ผ่าน มาก ที่สุด",
            "zh": "哪个 州 拥有 流经 它的 最多 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM MOUNTAIN WHERE MOUNTAIN_NAME = \"mckinley\"",
            "prolog": "answer(A,(loc(B,A),state(A),const(B,placeid('mount mckinley'))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mount_mckinley:p $0)))",
            "funql": "answer(state(loc_1(placeid('mount mckinley'))))"
        },
        "question": {
            "en": "in what state is mount mckinley",
            "de": "in welchem staat befindet sich der mount mckinley",
            "el": "σε ποια πολιτεία είναι το όρος mckinley",
            "fa": "مونت مک کینلی در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian apakah gunung mckinley ?",
            "sv": "i vilken stat ligger mount mckinley ?",
            "th": "ภูเขา แม็คคินลีย์ อยู่ ใน รัฐ ไหน",
            "zh": "麦金利 山 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM MOUNTAIN WHERE MOUNTAIN_NAME = \"whitney\"",
            "prolog": "answer(A,(loc(B,A),const(B,placeid('mount whitney'))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> mount_whitney:m $0))",
            "funql": "answer(loc_1(placeid('mount whitney')))"
        },
        "question": {
            "en": "where is mount whitney",
            "de": "wo befindet sich mount whitney",
            "el": "που είναι το mount whitney",
            "fa": "مونت ویتنی در کجا واقع شده است ؟",
            "id": "di mana mount whitney ?",
            "sv": "vart ligger mount whitney ?",
            "th": "ภูเขา วิทนีย์ อยู่ ตรงไหน",
            "zh": "惠特尼 山 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM MOUNTAIN WHERE MOUNTAIN_NAME = \"whitney\"",
            "prolog": "answer(A,(loc(B,A),const(B,placeid('mount whitney'))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> mount_whitney:p $0))",
            "funql": "answer(loc_1(placeid('mount whitney')))"
        },
        "question": {
            "en": "where is mount whitney located",
            "de": "wo liegt mount whitney",
            "el": "που βρίσκεται το όρος whitney",
            "fa": "مونت ویتنی در کجا واقع شده است ؟",
            "id": "di mana mount whitney berada ?",
            "sv": "vart är mount whitney ?",
            "th": "ยอดเขา วิทนีย์ ตั้งอยู่ ตรงไหน",
            "zh": "惠特尼 山 坐落 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT TRAVERSE FROM RIVER",
            "prolog": "answer(A,(state(A),river(B),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(traverse_1(river(all))))"
        },
        "question": {
            "en": "what states have rivers running through them",
            "de": "welche staaten haben einen fluss",
            "el": "ποιες πολιτείες έχουν ποτάμια να τις διασχίζουν",
            "fa": "از میان کدام ایالت ها رودخانه ای میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai-sungai ?",
            "sv": "vilka stater har floder som rinner genom dem ?",
            "th": "รัฐ ใด มี แม่น้ำ ไหล ผ่าน บ้าง",
            "zh": "哪些 州 被 河流 贯穿"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE CITY_NAME = \"austin\" AND POPULATION > 150000",
            "prolog": "answer(A,(state(A),loc(B,A),major(B),city(B),const(B,cityid(austin,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (city:<c,t> $1) (named:<e,<n,t>> $1 austin:n) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(state(loc_1(major(city(cityid('austin', _))))))"
        },
        "question": {
            "en": "which states have a major city named austin",
            "de": "welche staaten haben eine wichtige staat mit dem namen austin",
            "el": "ποιες πολιτείες έχουν μια κύρια πόλη με όνομα austin",
            "fa": "کدام ایالت ها شهر عمده ای به نام آستین دارند ؟",
            "id": "apa negara-negara bagian yang memiliki kota besar bernama austin ?",
            "sv": "vilken stat har en stor stad som heter austin ?",
            "th": "รัฐ ใด มี เมือง เอก ชื่อ ออสติน",
            "zh": "哪些 州 有 一个 名为 奥斯汀 的 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(state(next_to_2(stateid('texas')))))))"
        },
        "question": {
            "en": "what is the largest city in a state that borders texas",
            "de": "was ist die groesste stadt in einer staat die texas angrenzt",
            "el": "ποια είναι η μεγαλύτερη πόλη σε μια πολιτεία που συνορεύει με το texas",
            "fa": "بزرگترین شهر در ایالت مجاور تگزاس کجاست ؟",
            "id": "apa kota terbesar di negara bagian yang berbatasan dengan texas ?",
            "sv": "vilken är den största staden i en delstat som gränsar till texas ?",
            "th": "เมือง ใด เป็น เมือง ใหญ่ สุด ใน รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "与 得克萨斯 州 接壤 的 州 的 最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"california\" ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"california\" )",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 california:s) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(state(next_to_2(stateid('california')))))))"
        },
        "question": {
            "en": "what is the largest city in states that border california",
            "de": "was ist die groesste stadt in staaten die california angrenzen",
            "el": "ποια είναι η μεγαλύτερη πόλη σε πολιτείες που συνορεύουν με την california",
            "fa": "بزرگترین شهر در ایالت های همجوار کالیفرنیا کجاست ؟",
            "id": "apa kota terbesar di negara-negara bagian yang berbatasan dengan california ?",
            "sv": "vad är den största staden i de stater som gränsar till kalifornien ?",
            "th": "เมือง ใด เป็น เมือง ใหญ่ ที่สุด ใน รัฐ ที่ อยู่ ติด กับ รัฐ แคลิฟอร์เนีย",
            "zh": "与 加利福尼亚 州 接壤 的 州 的 最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( DISTINCT RIVER_NAME ) FROM RIVER WHERE RIVER_NAME NOT IN ( SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"albany\" ) )",
            "prolog": "answer(A,count(B,(river(B),not((traverse(B,C),state(C),loc(D,C),capital(D),const(D,cityid(albany,_))))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (not:<t,t> (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (capital2:<s,<c,t>> $1 albany_ny:c)))))))))",
            "funql": "answer(count(exclude(river(all), traverse_2(state(loc_1(capital(cityid('albany', _))))))))"
        },
        "question": {
            "en": "how many rivers do not traverse the state with the capital albany",
            "de": "wie viele fluesse verlaufen nicht durch den staat mit der hauptstadt albany",
            "el": "πόσα ποτάμια δεν διασχίζουν την πολιτεία με πρωτεύουσα το albany",
            "fa": "چند رودخانه از ایالتی که مرکزش آلبانی است نمیگذرند ؟",
            "id": "berapa banyak sungai yang tidak melintasi negara bagian dengan ibukota albany ?",
            "sv": "hur många floder korsar inte staten med huvudstaden albany ?",
            "th": "มี แม่น้ำ กี่ สาย บ้าง ที่ ไม่ ได้ ไหล ผ่าน รัฐ ที่ มี เมืองหลวง ชื่อ อัลบานี",
            "zh": "有 多少 河流 没有 穿越 奥尔巴尼 首府 的 所在 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"iowa\" ORDER BY LENGTH LIMIT 1) AND TRAVERSE = \"iowa\"",
            "prolog": "answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 iowa:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(loc_2(stateid('iowa')))))"
        },
        "question": {
            "en": "what is the shortest river in iowa",
            "de": "was ist der kuerzeste fluss in iowa",
            "el": "ποιο είναι το μικρότερο ποτάμι στην iowa",
            "fa": "کوتاه ترین رودخانه در آیووا چه نام دارد ؟",
            "id": "apa sungai terpendek di iowa ?",
            "sv": "vilken är den kortaste floden i iowa ?",
            "th": "แม่น้ำ สาย ที่ สั้น ที่สุด ใน รัฐ ไอโอวา คือ แม่น้ำ สาย ใด",
            "zh": "爱荷华 州 最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"nebraska\" ORDER BY LENGTH LIMIT 1) AND TRAVERSE = \"nebraska\"",
            "prolog": "answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 nebraska:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(loc_2(stateid('nebraska')))))"
        },
        "question": {
            "en": "what is the shortest river in nebraska",
            "de": "wie lautet der kuerzeste fluss in nebraska",
            "el": "ποιο είναι το μικρότερο ποτάμι στη nebraska",
            "fa": "کوتاه ترین رودخانه در نبراسکا چه نام دارد ؟",
            "id": "apa sungai terpendek di nebraska ?",
            "sv": "vilken är den kortaste floden i nebraska ?",
            "th": "แม่น้ำ สาย ใด สั้น ที่สุด ใน รัฐ เนบราสก้า",
            "zh": "内布拉斯加 州 最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"alaska\" ORDER BY LENGTH LIMIT 1) AND TRAVERSE = \"alaska\"",
            "prolog": "answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 alaska:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(loc_2(stateid('alaska')))))"
        },
        "question": {
            "en": "what is the shortest river in alaska",
            "de": "was ist der kuerzester fluss in alaska",
            "el": "ποιο είναι το μικρότερο ποτάμι στην alaska",
            "fa": "کوتاه ترین رودخانه در آلاسکا چه نام دارد ؟",
            "id": "apa sungai terpendek di alaska ?",
            "sv": "vilken är den kortaste floden i alaska ?",
            "th": "แม่น้ำ สาย ที่ สั้น ที่สุด ใน รัฐ อลาสกา คือ แม่น้ำ สาย ใด",
            "zh": "阿拉斯加 州 最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE = \"texas\" ORDER BY LENGTH LIMIT 1) AND TRAVERSE = \"texas\"",
            "prolog": "answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(texas)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the shortest river in texas",
            "de": "wie lautet der kuerzeste fluss in texas",
            "el": "ποιο είναι το μικρότερο ποτάμι στο texas",
            "fa": "کوتاه ترین رودخانه در تگزاس چه نام دارد ؟",
            "id": "apa sungai terpendek di texas ?",
            "sv": "vilken är den kortaste floden i texas ?",
            "th": "แม่น้ำ ที่ สั้น ที่สุด ใน รัฐ เท็กซัส คือ แม่น้ำ ใด",
            "zh": "在 得克萨斯 州 最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (size:<lo,i> $1))))))",
            "funql": "answer(major(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))"
        },
        "question": {
            "en": "what are the major cities in the smallest state in the us",
            "de": "welches sind die groessten staedte im kleinsten staat der usa",
            "el": "ποιες είναι οι κύριες πόλεις στη μικρότερη πολιτεία στις ηπα",
            "fa": "شهرهای عمده کوچکترین ایالت کدامند ؟",
            "id": "apa kota-kota besar di negara bagian terkecil di as ?",
            "sv": "vilka är de stora städerna i den minsta staten i usa ?",
            "th": "เมือง เอก ของ รัฐ ที่ เล็ก ที่สุด ของ สหรัฐอเมริกา มี อะไรบ้าง",
            "zh": "美国 的 最小 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = ( SELECT CAPITAL FROM STATE WHERE AREA = ( SELECT T1.AREA FROM STATE AS T1 JOIN RIVER AS T2 ON T1.STATE_NAME = T2.TRAVERSE WHERE T2.RIVER_NAME = \"mississippi\" ORDER BY T1.AREA DESC LIMIT 1) )",
            "prolog": "answer(A,(population(B,A),capital(B),loc(B,C),largest(C,(state(C),const(D,riverid(mississippi)),traverse(D,C)))))",
            "lambda": "(population:<lo,i> (capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0))) (lambda $0:e (size:<lo,i> $0)))))",
            "funql": "answer(population_1(capital(loc_2(largest(state(traverse_1(riverid('mississippi'))))))))"
        },
        "question": {
            "en": "what is the population of the capital of the largest state through which the mississippi runs",
            "de": "was ist die bevoelkerung der hauptstadt des groessten staates durch den der mississippi fliesst",
            "el": "ποιος είναι ο πληθυσμός της πρωτεύουσας της μεγαλύτερης πολιτείας την οποία διασχίζει ο mississippi",
            "fa": "جمعیت پایتخت بزرگترین ایالت که میسیسیپی از آن میگذرد چقدر است ؟",
            "id": "berapa populasi ibukota negara bagian terbesar yang dilalui mississippi ?",
            "sv": "vad är folkmängden i huvudstaden i den största staten genom vilken mississippifloden rinner ?",
            "th": "เมืองหลวง ของ รัฐ ที่ ใหญ่ ที่สุด ที่ มี แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี ประชากร เท่าไหร่",
            "zh": "密西西比 河 流经 的 最大 州 的 首府 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the shortest river in the usa",
            "de": "was ist der kuerzeste fluss in den usa",
            "el": "ποιο είναι το κοντύτερο ποτάμι στις ηπα",
            "fa": "کوتاه ترین رودخانه در ایالات متحده کدامست ؟ .",
            "id": "apa sungai terpendek di amerika serikat ?",
            "sv": "vilken är den kortaste floden i usa ?",
            "th": "แม่น้ำ ที่ สั้น ที่สุด ใน สหรัฐอเมริกา มี ชื่อ ว่า อะไร",
            "zh": "在 美国 最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,shortest(A,river(A)))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(all)))"
        },
        "question": {
            "en": "what is the shortest river",
            "de": "welches ist der kuerzeste fluss",
            "el": "ποιο είναι το κοντύτερο ποτάμι",
            "fa": "کوتاه ترین رودخانه چه نام دارد ؟",
            "id": "apa sungai terpendek ?",
            "sv": "vilken är den kortaste floden ?",
            "th": "แม่น้ำ สาย ใด สั้น ที่สุด",
            "zh": "哪个 是 最短 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the shortest river in the us",
            "de": "welches ist der kuerzeste fluss in den usa",
            "el": "ποιο είναι το μικρότερο ποτάμι στις us",
            "fa": "کوتاه ترین رودخانه در ایالات متحده چیست ؟",
            "id": "apa sungai terpendek di as ?",
            "sv": "vilken är den kortaste floden i usa ?",
            "th": "แม่น้ำ ที่ สั้น ที่สุด ใน สหรัฐ คือ แม่น้ำ ใด",
            "zh": "在 美国 最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what is the shortest river in the united states",
            "de": "welches ist der kuerzeste fluss der vereinigten staaten",
            "el": "ποιο είναι το κοντύτερο ποτάμι στις ηνωμένες πολιτείες",
            "fa": "کوتاه ترین رودخانه ایالات متحده کدامست ؟",
            "id": "apa sungai terpendek di amerika serikat ?",
            "sv": "vilken är den kortaste floden i usa ?",
            "th": "แม่น้ำ สาย ที่ สั้น ที่สุด ใน อเมริกา คือ แม่น้ำ ใด",
            "zh": "在 美国 最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,shortest(A,river(A)))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (river:<r,t> $0)) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(shortest(river(all)))"
        },
        "question": {
            "en": "which is the shortest river",
            "de": "welches ist der kuerzeste fluss",
            "el": "ποιο είναι το κοντύτερο ποτάμι",
            "fa": "کوتاهترین رودخانه کدام است ؟",
            "id": "apa sungai terpendek ?",
            "sv": "vilken är den kortaste floden ?",
            "th": "แม่น้ำ ที่ สั้น ที่สุด คือ แม่น้ำ สาย ใด",
            "zh": "最短 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) )",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))",
            "lambda": "(capital:<s,c> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s)))) $0)))))",
            "funql": "answer(capital(loc_2(state(next_to_2(state(next_to_2(stateid('texas'))))))))"
        },
        "question": {
            "en": "what is the capital of the state that borders the state that borders texas",
            "de": "was ist die hauptstadt des staates der an den staat der texas angrenzt angrenzt",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας που συνορεύει με την πολιτεία που συνορεύει με το texas",
            "fa": "مرکز ایالت همجوار ایالت مجاور تگزاس کجاست ؟",
            "id": "apa ibukota negara bagian yang berbatasan dengan negara bagian yang berbatasan dengan texas ?",
            "sv": "vilken är huvudstaden i den stat som gränsar till staten som gränsar till texas ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส มี เมืองหลวง ชื่อ ว่า อะไร",
            "zh": "与 得克萨斯 州 接壤 的 州 接壤 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) ) ORDER BY POPULATION LIMIT 1) AND STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,smallest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))"
        },
        "question": {
            "en": "what is the smallest city of the smallest state in the us",
            "de": "wie lautet die kleinste stadt des kleinsten staates in den usa",
            "el": "ποια είναι η μικρότερη πόλη στην μικρότερη πολιτεία στις ηπα",
            "fa": "نام کوچکترین شهرستان در کوچکترین ایالت در ایالات متحده چیست ؟",
            "id": "apa kota terkecil dari negara bagian terkecil di as ?",
            "sv": "vilken är den minsta staden i den minsta staten i usa ?",
            "th": "เมือง ใด เป็น เมือง ที่ เล็ก ที่สุด ใน รัฐ ที่ เล็ก ที่สุด ใน อเมริกา",
            "zh": "在 美国 最小 的 州 里 最小 的 城市 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( T2.RIVER_NAME ) FROM STATE AS T1 JOIN RIVER AS T2 ON T1.STATE_NAME = T2.TRAVERSE WHERE T1.STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) )",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),largest(D,(state(C),population(C,D)))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1)))))))",
            "funql": "answer(count(river(loc_2(largest_one(population_1(state(all)))))))"
        },
        "question": {
            "en": "how many rivers are in the state with the largest population",
            "de": "wie viele fluesse sind in dem staat mit der groessten bevoelkerung",
            "el": "πόσα ποτάμια υπάρχουν στην πολιτεία με τον μεγαλύτερο πληθυσμό",
            "fa": "چند رودخانه در ایالتی که دارای بیشترین جمعیت است وجود دارد ؟",
            "id": "berapa banyak sungai di negara bagian dengan populasi terbesar ?",
            "sv": "hur många floder har staten med den största befolkningen ?",
            "th": "รัฐ ที่ มี ประชากร มาก ที่สุด มี แม่น้ำ กี่ สาย",
            "zh": "在 人口 最多 的 州 里 有 多少 条 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.STATE_NAME FROM HIGHLOW AS T1 JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.BORDER JOIN STATE AS T3 ON T3.STATE_NAME = T2.BORDER WHERE T1.LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1) ORDER BY T3.AREA DESC LIMIT 1",
            "prolog": "answer(A,largest(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $2:e (and:<t*,t> (place:<p,t> $2) (loc:<lo,<lo,t>> $2 usa:co))) (lambda $2:e (elevation:<lo,i> $2))) $1))))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(next_to_2(state(loc_1(lowest(place(loc_2(countryid('usa'))))))))))"
        },
        "question": {
            "en": "what is the largest state that borders the state with the lowest point in the usa",
            "de": "wie lautet der groesste staat welcher an den staat grenzt welcher die niedrigste erhebung in den usa hat",
            "el": "ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με την πολιτεία με το χαμηλότερο σημείο στις ηπα",
            "fa": "بزرگترین ایالت همجوار ایالتی که پایین ترین نقطه در ایالات را دارد کجاست ؟",
            "id": "apa negara bagian terbesar yang berbatasan dengan negara bagian dengan titik terendah di amerika serikat ?",
            "sv": "vilken är den största staten som gränsar till staten med den lägsta punkten i usa ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด ที่ อยู่ ติด กับ รัฐ ที่ มี จุด ต่ำ สุด ใน สหรัฐอเมริกา",
            "zh": "与 美国 的 最低 点 所在 州 接壤 的 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,stateid(texas))))))",
            "lambda": "(population:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(population_1(largest(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the population of the largest state that borders texas",
            "de": "was ist die bevoelkerung des groessten staates der texas angrenzt",
            "el": "ποιος είναι ο πληθυσμός της μεγαλύτερης πολιτείας που συνορεύει με το texas",
            "fa": "جمعیت بزرگترین ایالت هم مرز تگزاس چیست ؟",
            "id": "berapa populasi dari negara bagian terbesar yang berbatasan dengan texas ?",
            "sv": "vad är folkmängden i den största staten som gränsar till texas ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด ที่ อยู่ ติด กับ รัฐ เท็กซัส มี ประชากร กี่ คน",
            "zh": "与 得克萨斯 州 接壤 的 最大 的 州 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"austin\"",
            "prolog": "answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (capital2:<s,<c,t>> $0 austin_tx:c)))",
            "funql": "answer(state(loc_1(capital(cityid('austin', _)))))"
        },
        "question": {
            "en": "what state is austin the capital of",
            "de": "von welchem staat ist austin die hauptstadt",
            "el": "ποιας πολιτείας είναι το austin πρωτεύουσα",
            "fa": "آستین پایتخت کدام ایالت است ؟",
            "id": "austin adalah ibukota negara bagian apa ?",
            "sv": "vilken stat är austin huvudstad i ?",
            "th": "รัฐ ใด มี เมืองหลวง ชื่อ ออสติน",
            "zh": "奥斯汀 是 哪个 州 的 首府"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"dover\"",
            "prolog": "answer(A,(state(A),capital(A,B),const(B,cityid(dover,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (capital2:<s,<c,t>> $0 dover_de:c)))",
            "funql": "answer(state(capital_2(cityid('dover', _))))"
        },
        "question": {
            "en": "what state 's capital is dover",
            "de": "welcher staat hat dover als hauptstadt",
            "el": "ποιων πολιτειών είναι πρωτεύουσα το dover",
            "fa": "دوور مرکز کدام ایالت است ؟",
            "id": "negara bagian apa beribukota di dover ?",
            "sv": "vilken stats huvudstad är dover ?",
            "th": "รัฐ ใด มี เมือง หลวง ชื่อ โดเวอร์",
            "zh": "哪个 州 的 首都 是 多佛 市"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"sacramento\"",
            "prolog": "answer(A,(const(B,cityid(sacramento,_)),capital(B),loc(B,A),state(A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (capital2:<s,<c,t>> $0 sacramento_ca:c)))",
            "funql": "answer(state(loc_1(capital(cityid('sacramento', _)))))"
        },
        "question": {
            "en": "sacramento is the capital of which state",
            "de": "sacramento ist die hauptstadt welcher staat",
            "el": "το sacramento είναι πρωτεύουσα ποιας πολιτείας",
            "fa": "ساکرامنتو مرکز کدام ایالت است ؟",
            "id": "sacramento adalah ibukota negara bagian mana ?",
            "sv": "sacramento är huvudstad i vilken stat ?",
            "th": "ซาคราเม็นโต เป็น เมืองหลวง ของ รัฐ ใด",
            "zh": "萨克拉门托 是 哪个 州 的 首府"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"columbus\"",
            "prolog": "answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (capital2:<s,<c,t>> $0 columbus_oh:c)))",
            "funql": "answer(state(loc_1(capital(cityid('columbus', _)))))"
        },
        "question": {
            "en": "what state is columbus the capital of",
            "de": "welcher staat hat columbus als hauptstadt",
            "el": "ποιας πολιτείας είναι πρωτεύουσα το columbus",
            "fa": "کلمبوس پایتخت کدام ایالت است ؟",
            "id": "columbus adalah ibukota negara bagian apa ?",
            "sv": "vilken stat är columbus huvudstad i ?",
            "th": "รัฐ ใด มี เมืองหลวง ชื่อ โคลัมบัส",
            "zh": "哥伦布 是 哪个 州 的 首府"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"salem\"",
            "prolog": "answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(salem,_))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (capital2:<s,<c,t>> $0 salem_or:c)))",
            "funql": "answer(state(loc_1(capital(cityid('salem', _)))))"
        },
        "question": {
            "en": "what state has the capital salem",
            "de": "welcher staat hat die hauptstadt salem",
            "el": "ποια πολιτεία έχει πρωτεύουσα το salem",
            "fa": "سالم مرکز کدام ایالت است ؟",
            "id": "apa negara bagian yang memiliki ibukota salem ?",
            "sv": "vilken stat har huvudstad salem ?",
            "th": "รัฐ ใด มี เมืองหลวง ชื่อ ว่า ซาเล็ม",
            "zh": "哪个 州 的 首府 是 塞勒姆"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),largest(C,(state(B),population(B,C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1))))))",
            "funql": "answer(river(traverse_2(largest_one(population_1(state(all))))))"
        },
        "question": {
            "en": "what rivers flow through the state with the largest population",
            "de": "welche fluesse fliessen durch den bevoelkerungsreichsten staat",
            "el": "ποια ποτάμια διασχίζουν την πολιτεία με το μεγαλύτερο πληθυσμό",
            "fa": "کدام رودخانه ها از ایالتی با بیشترین جمعیت میگذرند ؟",
            "id": "apa saja sungai-sungai yang mengalir melalui negara bagian dengan populasi terbesar ?",
            "sv": "vilka floder flyter genom staten med den största befolkningen ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ที่ มี ประชากร มาก ที่สุด",
            "zh": "什么 河流 流经 人口 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT STATE_NAME FROM BORDER_INFO WHERE BORDER IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) ) ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT STATE_NAME FROM BORDER_INFO WHERE BORDER IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) ) )",
            "prolog": "answer(A,largest(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(next_to_2(largest_one(population_1(state(all)))))))"
        },
        "question": {
            "en": "what is the largest state that borders the state with the highest population",
            "de": "was is der groesste staat der den staat mit der groessten bevoelkerung",
            "el": "ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με την πολιτεία με τον μεγαλύτερο πληθυσμό",
            "fa": "بزگترین استان همرمز ایالت دارای بیشترین جمعیت کدامست ؟",
            "id": "apa negara bagian terbesar yang berbatasan dengan negara bagian dengan populasi tertinggi ?",
            "sv": "vilken är den största delstaten som gränsar till staten med den största befolkningen ?",
            "th": "ใน บรรดา รัฐ ต่างๆ ที่ อยู่ ติด กับ รัฐ ที่ มี ประชากร มาก ที่สุด รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด",
            "zh": "与 人口 最多 的 州 接壤 的 州 最大 的 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T2.HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,(place(C)))))",
            "lambda": "(capital:<s,c> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (place:<p,t> $1)) (lambda $1:e (elevation:<lo,i> $1))) $0)))))",
            "funql": "answer(capital(loc_2(state(loc_1(highest(place(all)))))))"
        },
        "question": {
            "en": "what is the capital of the state with the highest point",
            "de": "wie lautet die hauptstadt des staats mit der hoechsten erhebung",
            "el": "ποιά είναι η πρωτεύουσα της πολιτείας με το ψηλότερο σημείο",
            "fa": "مرکز ایالتی که بلندترین نقطه در آن واقع شده است کجاست ؟",
            "id": "apa ibukota negara bagian dengan titik tertinggi ?",
            "sv": "vilken är huvudstaden i delstaten med den högsta punkten ?",
            "th": "เมืองหลวง ของ รัฐ ที่ มี จุด สูง สุด ชื่อ ว่า อะไร",
            "zh": "最高 点 所在 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T2.HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))",
            "lambda": "(capital:<s,c> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (place:<p,t> $1)) (lambda $1:e (elevation:<lo,i> $1))) $0) (state:<s,t> $0)))))",
            "funql": "answer(capital(loc_2(state(loc_1(highest(place(all)))))))"
        },
        "question": {
            "en": "what is the capital of the state with the highest elevation",
            "de": "was ist die hauptstadt des staates mit der groesten hoehe",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας με το μεγαλύτερο υψόμετρο",
            "fa": "مرکز ایالتی که بلندترین ارتفاع را دارد کجاست ؟",
            "id": "apa ibukota negara bagian dengan elevasi tertinggi ?",
            "sv": "vilken är huvudstaden i delstaten med den högsta höjden ?",
            "th": "รัฐ ที่ มี ระดับ ความ สูง มาก ที่สุด มี เมืองหลวง ชื่อ ว่า อะไร",
            "zh": "海拔 最高 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( DISTINCT RIVER_NAME ) FROM RIVER",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many rivers are there in us",
            "de": "wie viele fluesse gibt es in den usa",
            "el": "πόσα ποτάμια υπάρχουν στις ηπα",
            "fa": "چند رودخانه در ایالات متحده وجود دارد ؟",
            "id": "berapa banyak sungai yang ada di as ?",
            "sv": "hur många floder finns i usa ?",
            "th": "อเมริกา มี แม่น้ำ กี่ สาย",
            "zh": "在 美国 有 多少 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT CAPITAL FROM STATE",
            "prolog": "answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(capital(loc_2(countryid('usa'))))"
        },
        "question": {
            "en": "name the 50 capitals in the usa",
            "de": "nenne die 50 hauptstaedte in den usa",
            "el": "ονόμασε τις 50 πρωτεύουσες των usa",
            "fa": "50 مرکز ایالت در ایالات متحده نام ببر .",
            "id": "nama 50 ibukota di amerika serikat .",
            "sv": "namnge de 50 huvudstäderna i usa .",
            "th": "จง บอก ชื่อ เมืองหลวง ของ สหรัฐอเมริกา มา 50 ชื่อ",
            "zh": "说出 美国 的 50 个 首府 名"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM CITY WHERE CITY_NAME = \"springfield\"",
            "prolog": "answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 springfield:n) (loc:<lo,<lo,t>> $1 $0)))))))",
            "funql": "answer(count(state(loc_1(city(cityid('springfield', _))))))"
        },
        "question": {
            "en": "how many states have a city named springfield",
            "de": "in wie vielen staaten gibt es eine stadt namens springfield",
            "el": "πόσες πολιτείες έχουν μια πόλη που ονομάζεται springfield",
            "fa": "چند ایلات شهری به نام اسپرینگفیلد دارند ؟",
            "id": "berapa banyak negara bagian yang memiliki kota bernama springfield ?",
            "sv": "hur många stater har en stad som heter springfield ?",
            "th": "มี รัฐ กี่ รัฐ ที่ มี เมือง ชื่อ ว่า สปริงฟิลด์",
            "zh": "有 多少 州 含有 一个 名为 斯普林菲尔德 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM CITY WHERE CITY_NAME = \"rochester\"",
            "prolog": "answer(A,count(B,(state(B),loc(C,B),const(C,cityid(rochester,_))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 rochester:n) (loc:<lo,<lo,t>> $1 $0)))))))",
            "funql": "answer(count(state(loc_1(city(cityid('rochester', _))))))"
        },
        "question": {
            "en": "how many states have a city called rochester",
            "de": "in wie vielen staaten gibt es eine stadt mit dem namen rochester",
            "el": "πόσες πολιτείες έχουν μια πόλη που λέγεται rochester",
            "fa": "چند ایلات شهری به نام روچستر دارند ؟",
            "id": "berapa banyak negara bagian yang memiliki kota bernama rochester ?",
            "sv": "hur många stater har en stad som heter rochester ?",
            "th": "มี กี่ รัฐ บ้าง ที่ มี เมือง ชื่อ ว่า โรเชสเตอร์",
            "zh": "有 多少 州 含有 一个 叫 罗切斯特 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(austin,_))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (named:<e,<n,t>> $1 austin:n) (loc:<lo,<lo,t>> $1 $0)))))))",
            "funql": "answer(count(state(loc_1(city(cityid('austin', _))))))"
        },
        "question": {
            "en": "how many states have cities named austin",
            "de": "wie viele staaten habe staedte die austin heissen",
            "el": "πόσες πολιτείες έχουν όνομα austin",
            "fa": "چند ایالت شهر یا دهکده ای به نام آستین دارند ؟",
            "id": "berapa banyak negara bagian memiliki kota bernama austin ?",
            "sv": "hur många stater har städer som heter austin ?",
            "th": "รัฐ ที่ มี เมือง ชื่อ ว่า ออสติน มี กี่ รัฐ",
            "zh": "含有 名为 奥斯汀 的 城市 的 州 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( STATE_NAME ) FROM CITY WHERE CITY_NAME = \"springfield\"",
            "prolog": "answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(springfield,_))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (or:<t*,t> (town:<lo,t> $1) (city:<c,t> $1)) (named:<e,<n,t>> $1 springfield:n) (loc:<lo,<lo,t>> $1 $0)))))))",
            "funql": "answer(count(state(loc_1(city(cityid('springfield', _))))))"
        },
        "question": {
            "en": "how many states have cities or towns named springfield",
            "de": "wie viele staaten haben staedte welche nach springfield benannt sind",
            "el": "πόσες πολιτείες έχουν πόλεις ή κωμοπόλεις που ονομάζονται springfield",
            "fa": "چند ایالت شهر یا دهکده ای به نام اسپرینگفیلد دارند ؟",
            "id": "berapa banyak negara bagian memiliki kota bernama springfield ?",
            "sv": "hur många stater har städer eller tätorter som heter springfield ?",
            "th": "มี รัฐ ทั้งหมด กี่ รัฐ ที่ มี เมือง ชื่อ ว่า สปริงฟิลด์",
            "zh": "含有 名为 斯普林菲尔德 的 城市 或 小镇 的 州 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),smallest(C,(state(B),population(B,C)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1))))))",
            "funql": "answer(state(next_to_2(smallest_one(population_1(state(all))))))"
        },
        "question": {
            "en": "what state borders the state with the smallest population",
            "de": "welcher staat grenzt an den staat mit der kleinsten bevoelkerung",
            "el": "ποιες πολιτείες συνορεύουν με την πολιτεία με τον χαμηλότερο πληθυσμό",
            "fa": "کدام ایالت ها با ایالتی با کمترین جمعیت همجوار هستند ؟",
            "id": "apa negara bagian yang berbatasan dengan negara bagian dengan populasi terkecil ?",
            "sv": "vilka stater gränsar till staten med den minsta befolkningen ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ซึ่ง มี ประชากร น้อย ที่สุด",
            "zh": "哪个 州 与 人口 最少 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,(state(A),most(A,B,(state(A),loc(B,A),river(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (equals:<e,<e,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (river:<r,t> $2) (loc:<lo,<lo,t>> $2 $1)))))))))",
            "funql": "answer(state(most(state(loc_1(river(all))))))"
        },
        "question": {
            "en": "what state is the state with the most rivers",
            "de": "welcher staat hat die meisten fluesse",
            "el": "ποια πολιτεία είναι η πολιτεία με τα περισσότερα ποτάμια",
            "fa": "کدام ایالت دارای بیشترین رودخانه هاست ؟",
            "id": "apa negara bagian yang merupakan negara bagian dengan paling banyak sungai ?",
            "sv": "vilken stat är staten med flest floder ?",
            "th": "รัฐ ใด ที่ มี แม่น้ำ เยอะ ที่สุด",
            "zh": "哪个 州 是 拥有 河流 最多 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),loc(B,A),river(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(loc_1(river(all)))))"
        },
        "question": {
            "en": "which state contains most rivers",
            "de": "welcher staat hat am meisten flüsse",
            "el": "ποια πολιτεία περιέχει τα περισσότερα ποτάμια",
            "fa": "کدام ایالت بیشترین رودخانه ها را دارد ؟",
            "id": "apa negara bagian yang memiliki paling banyak sungai ?",
            "sv": "vilken stat har flest vattendrag ?",
            "th": "รัฐ ใด มี แม่น้ำ ไหล ผ่าน มาก ที่สุด",
            "zh": "哪个 州 有 最多 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),river(B),traverse(B,A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(traverse_1(river(all)))))"
        },
        "question": {
            "en": "which state has the most rivers running through it",
            "de": "durch welchen staat verlaufen die meisten fluesse",
            "el": "ποια πολιτεία διασχίζουν τα περισσότερα ποτάμια",
            "fa": "از کدام ایالت رودهای بیشتری میگذرند ؟",
            "id": "apa negara bagian yang paling banyak dilalui sungai-sungai ?",
            "sv": "vilken stat har flest floder som rinner genom den ?",
            "th": "รัฐ ใด มี แม่น้ำ ไหล ผ่าน มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 流经 它的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT TRAVERSE FROM RIVER GROUP BY TRAVERSE ORDER BY COUNT( RIVER_NAME ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),river(B),traverse(B,A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(traverse_1(river(all)))))"
        },
        "question": {
            "en": "what state has the most rivers running through it",
            "de": "welcher staat hat die meisten fluesse",
            "el": "ποια πολιτεία διασχίζουν τα περισσότερα ποτάμια",
            "fa": "بیشترین رودخانه ها از کدام ایالت میگذرند ؟",
            "id": "apa negara bagian yang dilalui paling banyak sungai ?",
            "sv": "vilken stat har flest floder som rinner genom den ?",
            "th": "รัฐ ใด มี แม่น้ำ ไหล ผ่าน มาก ที่สุด",
            "zh": "哪个 州 流经 它的 河流 最多"
        }
    },
    {
        "mr": {
            "sql": "SELECT LAKE_NAME FROM LAKE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,(lake(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (lake:<l,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 texas:s) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(lake(loc_2(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what are the lakes in states bordering texas",
            "de": "wie lauten die namen der seen der staaten welche an texas grenzen",
            "el": "ποιες είναι οι λίμνες στις πολιτείες που συνορεύουν το texas",
            "fa": "دریاچه های ایالت های مجاور تگزاس کدامند ؟",
            "id": "apa danau-danau di negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka är sjöarna i staterna som gränsar till texas ?",
            "th": "มี ทะเลสาบ อะไร บ้าง ที่ อยู่ ใน รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "哪些 湖泊 在 与 得克萨斯 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"florida\"",
            "prolog": "answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 florida:s))))",
            "funql": "answer(count(major(city(loc_2(stateid('florida'))))))"
        },
        "question": {
            "en": "how many major cities are in florida",
            "de": "wie viele wichtige staedte gibt es in florida",
            "el": "πόσες κύριες πόλεις υπάρχουν στη florida",
            "fa": "چند شهر عمده در فلوریدا هست ؟",
            "id": "berapa banyak kota-kota besar di florida ?",
            "sv": "hur många stora städer finns i florida ?",
            "th": "มี เมือง เอก กี่ เมือง ใน รัฐ ฟลอริดา",
            "zh": "在 佛罗里达 州 的 主要 城市 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"arizona\"",
            "prolog": "answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(arizona))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 arizona:s))))",
            "funql": "answer(count(major(city(loc_2(stateid('arizona'))))))"
        },
        "question": {
            "en": "how many major cities are in arizona",
            "de": "wie viele grosse staedte gibt es in arizona",
            "el": "πόσες πόλεις υπάρχουν στην arizona",
            "fa": "آریزونا چند شهر عمده دارد ؟",
            "id": "berapa banyak kota-kota besar di arizona ?",
            "sv": "hur många stora städer finns i arizona ?",
            "th": "มี เมือง เอก กี่ เมือง ใน รัฐ แอริโซนา",
            "zh": "在 亚利桑那 州 的 主要 城市 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"pennsylvania\"",
            "prolog": "answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(pennsylvania))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 pennsylvania:s))))",
            "funql": "answer(count(major(city(loc_2(stateid('pennsylvania'))))))"
        },
        "question": {
            "en": "how many big cities are in pennsylvania",
            "de": "wie viele grosse staedte gibt es in pennsylvania",
            "el": "πόσες μεγάλες πόλεις υπάρχουν στην pennsylvania",
            "fa": "چند شهر بزرگ در پنلسیلوانیا هست ؟",
            "id": "berapa jumlah kota-kota besar yang ada di pennsylvania ?",
            "sv": "hur många stora städer finns i pennsylvania ?",
            "th": "เมือง ใหญ่ ที่สุด ใน รัฐ เพ็นซิลเวเนีย คือ เมือง ใด",
            "zh": "在 宾夕法尼亚 州 有 多少 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"oregon\"",
            "prolog": "answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 oregon:s))))",
            "funql": "answer(count(major(city(loc_2(stateid('oregon'))))))"
        },
        "question": {
            "en": "how many major cities are there in oregon",
            "de": "wie viel wichtige staedte gibt es in oregon",
            "el": "πόσες κύριες πόλεις υπάρχουν στο oregon",
            "fa": "چند شهر عمده در اورگان هست ؟",
            "id": "berapa banyak kota-kota besar yang ada di oregon ?",
            "sv": "hur många stora städer finns det i oregon ?",
            "th": "รัฐ โอเรกอน มี เมือง เอก อยู่ กี่ เมือง",
            "zh": "在 俄勒冈 州 有 多少 个 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = \"texas\"",
            "prolog": "answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))))",
            "funql": "answer(count(major(city(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "how many major cities are in texas",
            "de": "wie viele wichtige staedte gibt es in texas",
            "el": "πόσες κύριες πόλεις υπάρχουν στο texas",
            "fa": "تگزاس چند شهر عمده دارد ؟",
            "id": "berapa banyak kota-kota besar di texas ?",
            "sv": "hur många stora städer finns i texas ?",
            "th": "รัฐ เท็กซัส มี เมือง เอก กี่ เมือง",
            "zh": "在 得克萨斯 州 有 多少 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_ELEVATION FROM HIGHLOW",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),state(C)))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (place:<p,t> $0)) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(state(all))))))"
        },
        "question": {
            "en": "how high are the highest points of all the states",
            "de": "wie hoch sind hoechsten erhebungen aller staaten",
            "el": "πόσο ψηλά είναι τα ψηλότερα σημεία σε όλες τις πολιτείες",
            "fa": "ارتفاع بلندترین نقطه در میان همه ایالت ها کدامست ؟",
            "id": "seberapa tinggikah titik tertinggi dari semua negara bagian ?",
            "sv": "hur höga är de högsta punkterna i alla stater ?",
            "th": "จุด สูง สุด ใน แต่ ละ รัฐ มี ความ สูง เท่าไหร่ บ้าง",
            "zh": "所有 州 的 最高 点 是 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( TRAVERSE ) FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0))))",
            "funql": "answer(count(state(traverse_1(riverid('mississippi')))))"
        },
        "question": {
            "en": "how many states does the mississippi run through",
            "de": "durch wie viele staaten fliesst der fluss mississippi",
            "el": "πόσες πολιτείες διασχίζει ο mississippi",
            "fa": "رودخانه میسیسیپی از چند ایالت عبور میکند ؟",
            "id": "berapa banyak negara bagian yang dilalui mississippi ?",
            "sv": "hur många stater löper floden mississippi genom ?",
            "th": "รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี กี่ รัฐ",
            "zh": "有 多少 州 被 密西西比 河 贯穿"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( TRAVERSE ) FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> colorado_river:r $0))))",
            "funql": "answer(count(state(traverse_1(river(riverid('colorado'))))))"
        },
        "question": {
            "en": "how many states does the colorado river flow through",
            "de": "durch wie viele staaten fliesst der fluss colorado",
            "el": "ανάμεσα σε πόσες πολιτείες κυλά ο ποταμός colorado",
            "fa": "رودخانه کلرادو از چند ایالت عبور میکند ؟",
            "id": "berapa banyak negara bagian dialiri sungai colorado ?",
            "sv": "hur många stater flödar coloradofloden genom ?",
            "th": "รัฐ ที่ แม่น้ำ โคโลราโด ไหล ผ่าน มี กี่ รัฐ",
            "zh": "科罗拉多 河 流经 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( TRAVERSE ) FROM RIVER WHERE RIVER_NAME = \"colorado\"",
            "prolog": "answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> colorado_river:r $0))))",
            "funql": "answer(count(state(traverse_1(river(riverid('colorado'))))))"
        },
        "question": {
            "en": "how many states does the colorado river run through",
            "de": "durch wie viele staaten fliesst der fluss colorado",
            "el": "πόσες πολιτείες διασχίζει ο ποταμός colorado",
            "fa": "رودخانه کلرادو از چند ایالت میگذرد ؟",
            "id": "berapa banyak negara bagian yang dilalui sungai colorado ?",
            "sv": "hur många stater löper coloradofloden genom ?",
            "th": "มี กี่ รัฐ บ้าง ที่ แม่น้ำ โคโลราโด ไหล ผ่าน",
            "zh": "科罗拉多 河 贯穿 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( TRAVERSE ) FROM RIVER WHERE RIVER_NAME = \"mississippi\"",
            "prolog": "answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0))))",
            "funql": "answer(count(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "how many states does the mississippi river run through",
            "de": "durch wie viele staaten fliesst der mississippi",
            "el": "πόσες πολιτείες διασχίζει ο ποταμός mississippi",
            "fa": "رودخانه میسیسیپی از چند ایالت میگذرد ؟",
            "id": "berapa banyak negara bagian yang dilalui sungai mississippi ?",
            "sv": "hur många stater löper mississippifloden genom ?",
            "th": "รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน มี กี่ รัฐ",
            "zh": "密西西比 河 贯穿 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( TRAVERSE ) FROM RIVER WHERE RIVER_NAME = \"missouri\"",
            "prolog": "answer(A,count(B,(state(B),const(C,riverid(missouri)),river(C),traverse(C,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> missouri_river:r $0))))",
            "funql": "answer(count(state(traverse_1(river(riverid('missouri'))))))"
        },
        "question": {
            "en": "how many states does the missouri river run through",
            "de": "durch wie viele staaten laeuft der fluss missouri",
            "el": "πόσες πολιτείες διασχίζει ο ποταμός missouri",
            "fa": "رودخانه میسوری از چند ایالت میگذرد ؟",
            "id": "berapa banyak negara bagian yang dilalui sungai missouri ?",
            "sv": "hur många stater löper missourifloden igenom ?",
            "th": "มี กี่ รัฐ บ้าง ที่ แม่น้ำ มิสซูรี่ ไหล ผ่าน",
            "zh": "有 多少 州 被 密苏里 河 贯穿 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) ) ORDER BY LENGTH DESC LIMIT 1) AND TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(smallest(state(loc_2(countryid('usa'))))))))"
        },
        "question": {
            "en": "what is the longest river in the smallest state in the usa",
            "de": "was ist der laengste fluss in dem kleinsten staat in den usa",
            "el": "ποιο είναι το μεγαλύτερο ποτάμι στη μικρότερη πολιτεία στις usa",
            "fa": "بزگترین رودخانه در کوچکترین ایالت کدامست ؟",
            "id": "apa sungai terpanjang di negara bagian terkecil di amerika serikat ?",
            "sv": "vad är den längsta floden i minsta staten i usa ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด ที่ ไหล ผ่าน รัฐ ที่ เล็ก ที่สุด ของ สหรัฐอเมริกา มี ชื่อ ว่า อะไร",
            "zh": "在 面积 最小 的 州 里 最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION / AREA FROM STATE WHERE STATE_NAME = \"pennsylvania\"",
            "prolog": "answer(A,(density(B,A),const(B,stateid(pennsylvania))))",
            "lambda": "(density:<lo,i> pennsylvania:s)",
            "funql": "answer(density_1(stateid('pennsylvania')))"
        },
        "question": {
            "en": "what is the average population per square km in pennsylvania",
            "de": "welches ist die durchschnittliche bevoelkerungsdichte in pennsylvania",
            "el": "ποιος είναι ο μέσος πληθυσμός ανά τετραγωνικό χμ στη pennsylvania",
            "fa": "میانگین جمعیت بر کیلومتر مربع در پنسیلوانیا چقدر است ؟",
            "id": "berapa jumlah penduduk rata-rata per km persegi di pennsylvania ?",
            "sv": "vad är den genomsnittliga folkmängden per kvadratkilometer i pennsylvania ?",
            "th": "รัฐ เพ็นซิลเวเนีย มี ความ หนาแน่น ของ ประชากร เฉลี่ย ต่อ ตาราง กิโลเมตร เป็น เท่าไหร่",
            "zh": "在 宾夕法尼亚 州 每 平方公里 的 平均 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"florida\" ) )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(florida))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (next_to:<lo,<lo,t>> $2 florida:s) (next_to:<lo,<lo,t>> $1 $2)))))))))",
            "funql": "answer(state(next_to_2(state(next_to_2(state(next_to_2(stateid('florida'))))))))"
        },
        "question": {
            "en": "what states border states that border states that border florida",
            "de": "welche staaten grenzen an staaten an die an staaten angrenzen die florida angrenzen",
            "el": "πόσες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με πολιτείες που συνορεύουν με τη florida",
            "fa": "کدام ایالات همجوار ایالات هایی هستند که با ایالت های هم مرز فلوریدا همسایه هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan florida ?",
            "sv": "vilka stater gränsar till staterna som gränsar till staterna som gränsar till florida ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ที่ อยู่ ติด กับ รัฐ ที่ ติด กับ รัฐ ฟลอริดา",
            "zh": "什么 州 和 与 佛罗里达 州 接壤 的 州 接壤 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( DISTINCT STATE_NAME ) FROM BORDER_INFO",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),state(C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (>:<i,<i,t>> (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1)))) 0:i))))",
            "funql": "answer(count(state(next_to_2(state(all)))))"
        },
        "question": {
            "en": "how many states border at least one other state",
            "de": "wie viele staaten grenzen an zumindest einen anderen staat an",
            "el": "πόσες πολιτείες συνορεύουν με τουλάχιστον άλλη μια πολιτεία",
            "fa": "چند ایالت حداقل یک ایالت هم جوار دارند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan setidaknya satu negara bagian lain ?",
            "sv": "hur många stater gränsar till minst en annan stat ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ อื่น อย่างน้อย 1 รัฐ มี จำนวน ทั้งสิ้น กี่ รัฐ",
            "zh": "至少 与 两个 以上 其它 州 接壤 的 州 有 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT HIGHEST_ELEVATION FROM HIGHLOW WHERE STATE_NAME = \"texas\" ORDER BY HIGHEST_ELEVATION DESC LIMIT 1",
            "prolog": "answer(A,(elevation(B,A),highest(B,(mountain(B),loc(B,C),const(C,stateid(texas))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(mountain(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the height of the highest mountain in texas",
            "de": "wie lautet die hoehe des hoechsten berges in texas",
            "el": "ποιο είναι το ύψος του ψηλότερου βουνού στο texas",
            "fa": "ارتفاع بلند ترین کوه در تگزاس چقدر است ؟",
            "id": "berapa ketinggian gunung tertinggi di texas ?",
            "sv": "vad är höjden av det högsta berget i texas ?",
            "th": "ภูเขา ที่ สูง ที่สุด ใน รัฐ เท็กซัส สูง เท่าไหร่",
            "zh": "德克萨斯 州 最高 的 山峰 的 高度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE BORDER IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"new mexico\" ) AND STATE_NAME = \"colorado\"",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)),next_to(B,D),const(D,stateid('new mexico'))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 colorado:s) (next_to:<lo,<lo,t>> $0 new_mexico:s))))",
            "funql": "answer(count(state(intersection(next_to_2(stateid('colorado')) , next_to_2(stateid('new mexico'))))))"
        },
        "question": {
            "en": "how many states border colorado and border new mexico",
            "de": "wie viele staaten grenzen an colorado und new mexico an",
            "el": "πόσες πολιτείες συνορεύουν με το colarado και συνορεύουν με το new mexico",
            "fa": "چند ایالت همجوار کلرادو و نیومکزیکو هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan colorado dan berbatasan dengan new mexico ?",
            "sv": "hur många stater gränsar till colorado och gränsar till new mexico ?",
            "th": "รัฐ ที่ ติด กับ รัฐ โคโลราโด และ นิวเม็กซิโก มี กี่ รัฐ",
            "zh": "有 多少 州 与 科罗拉多 州 和 新墨西哥 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000 AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"utah\" )",
            "prolog": "answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(utah))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 utah:s) (loc:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(count(major(city(loc_2(state(next_to_2(stateid('utah'))))))))"
        },
        "question": {
            "en": "how many major cities are in states bordering utah",
            "de": "wie viele groessere stadte sind in staaten die an utah angrenzen",
            "el": "πόσες κύριες πόλεις είναι σε πολιτείες που συνορεύουν με την utah",
            "fa": "استانهای همجوار یوتاه چند شهر دارند ؟",
            "id": "berapa banyak kota-kota besar di negara-negara bagian yang berbatasan dengan utah ?",
            "sv": "hur många stora städer finns i de stater som gränsar till utah ?",
            "th": "มี เมือง เอก อยู่ กี่ เมือง ใน รัฐ ที่ อยู่ ติด กับ รัฐ ยูทาห์",
            "zh": "在 与 犹他 州 接壤 的 州 里 有 多少 主要 城市 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE POPULATION > 150000 AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"nebraska\" )",
            "prolog": "answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(nebraska))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 nebraska:s) (loc:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(count(major(city(loc_2(state(next_to_2(stateid('nebraska'))))))))"
        },
        "question": {
            "en": "how many major cities are in states bordering nebraska",
            "de": "wie viele wichtige staedte gibt es in den staaten welche an nebraska grenzen",
            "el": "πόσες κύριες πόλεις υπάρχουν σε πολιτείες που συνορεύουν με τη nebraska",
            "fa": "استانهای همجوار نبراسکا چند شهر عمده دارند ؟",
            "id": "berapa banyak kota-kota besar di negara-negara bagian yang berbatasan dengan nebraska ?",
            "sv": "hur många stora städer finns i de stater som gränsar till nebraska ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ เนบราสกา มี เมือง เอก อยู่ กี่ เมือง บ้าง",
            "zh": "在 与 内布拉斯加 接壤 的 州 里 有 多少 主要 城市 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( T1.POPULATION ) FROM STATE AS T1 JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.BORDER WHERE T2.STATE_NAME = \"texas\"",
            "prolog": "answer(A,sum(B,(population(C,B),state(C),next_to(D,C),const(D,stateid(texas))),A))",
            "lambda": "(sum:<<e,t>,<<e,i>,i>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 texas:s))) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(sum(population_1(state(next_to_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the total population of the states that border texas",
            "de": "welches ist die summe der bevoelkerungszahlen der an texas grenzenden staaten",
            "el": "ποιος είναι ο συνολικός πληθυσμός των πολιτειών που συνορεύουν με το texas",
            "fa": "مجموع جمعیت ایالات همجوار تگزاس چقدر است ؟",
            "id": "berapa total populasi negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vad är den totala folkmängden av de stater som gränsar till texas ?",
            "th": "รัฐ ต่างๆ ที่ อยู่ ติด กับ รัฐ เท็กซัส มี ประชากร รวมกัน ทั้งหมด เท่าไหร่",
            "zh": "与 得克萨斯 州 接壤 的 州 的 人口 总数 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT LAKE_NAME FROM LAKE WHERE AREA > 750",
            "prolog": "answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (lake:<l,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(major(lake(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what are the major lakes in united states",
            "de": "wie lauten die wichtigsten seen in den usa",
            "el": "ποιες είναι οι κύριες λίμνες στις ηνωμένες πολιτείες",
            "fa": "چند دریاچه عمده در ایالات متحده وجود دارد ؟",
            "id": "apa danau-danau besar di amerika serikat ?",
            "sv": "vilka är de stora sjöarna i usa ?",
            "th": "ทะเลสาบ หลัก ของ สหรัฐอเมริกา มี อะไร บ้าง",
            "zh": "美国 有 哪些 主要 湖泊 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT LAKE_NAME FROM LAKE WHERE AREA > 750",
            "prolog": "answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (lake:<l,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(major(lake(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "show me all the major lakes in the us",
            "de": "zeige mir alle groesseren seen in den usa",
            "el": "δείξε μου όλες τις κύριες λίμνες στις us",
            "fa": "همه دریاچه های عمده ایالات متحده را نشان بده .",
            "id": "tampilkan semua danau besar di amerika serikat .",
            "sv": "visa mig alla de stora sjöarna i usa .",
            "th": "จง บอก มา ว่า มี ทะเลสาบ หลัก อยู่ ทั้งหมด ใน อเมริกา",
            "zh": "告诉 我 在 美国 所有 的 主要 湖泊"
        }
    },
    {
        "mr": {
            "sql": "SELECT LAKE_NAME FROM LAKE",
            "prolog": "answer(A,(lake(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (lake:<l,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(lake(loc_2(countryid('usa'))))"
        },
        "question": {
            "en": "name all the lakes of us",
            "de": "oegregib alle seen in den usa aus",
            "el": "ονόμασε όλες τις λίμνες των ηπα",
            "fa": "همه دریاچه های ایالات متحده را نام ببر .",
            "id": "nama semua danau di as .",
            "sv": "namnge alla sjöar i usa .",
            "th": "จง บอก ชื่อ ทะเลสาบ ทั้งหมด ของ สหรัฐอเมริกา",
            "zh": "列举 出 美国 所有 湖泊"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE LENGTH > 750 AND TRAVERSE = \"ohio\"",
            "prolog": "answer(A,count(B,(major(B),river(B),traverse(B,C),const(C,stateid(ohio))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (major:<lo,t> $0) (river:<r,t> $0) (loc:<lo,<lo,t>> $0 ohio:s))))",
            "funql": "answer(count(major(river(traverse_2(stateid('ohio'))))))"
        },
        "question": {
            "en": "how many major rivers cross ohio",
            "de": "wie viele groessere fluesse durchqueren ohio",
            "el": "πόσα κύρια ποτάμια διασχίζουν το ohio",
            "fa": "چند رودخانه بزرگ از اوهایو میگذرند ؟",
            "id": "berapa banyak sungai besar yang melintasi ohio ?",
            "sv": "hur många stora floder korsar ohio ?",
            "th": "มี แม่น้ำ หลัก กี่ สาย ไหล ผ่าน รัฐ โอไฮโอ",
            "zh": "有 多少 主要 河流 贯穿 俄亥俄 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),shortest(B,river(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(loc_1(shortest(river(all)))))"
        },
        "question": {
            "en": "what state has the shortest river",
            "de": "durch welche staaten fliesst der kuerzeste fluss",
            "el": "ποια πολιτεία έχει το κοντύτερο ποταμό",
            "fa": "کوتاهترین رودخانه از کدام ایالت میگذرد ؟",
            "id": "apa negara bagian yang memiliki sungai terpendek ?",
            "sv": "vilken stat har kortaste floden ?",
            "th": "รัฐ ใด มี แม่น้ำ สาย ที่ สั้น ที่สุด ไหล ผ่าน",
            "zh": "哪个 州 有 最短 的 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,(state(A),shortest(B,river(B)),traverse(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0)))",
            "funql": "answer(state(traverse_1(shortest(river(all)))))"
        },
        "question": {
            "en": "what states does the shortest river run through",
            "de": "welcher staat hat den kuerzesten fluss",
            "el": "ποιες πολιτείες διασχίζει το μικρότερο ποτάμι",
            "fa": "کوتاه ترین رود از کدام ایالت ها میگذرد ؟",
            "id": "apa negara-negara bagian yang dilalui sungai terpendek ?",
            "sv": "vilka stater rinner den kortaste floden genom ?",
            "th": "รัฐ ไหน มี แม่น้ำ ที่ สั้น ที่สุด",
            "zh": "最短 的 河流 贯穿 哪些 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( DISTINCT TRAVERSE ) FROM RIVER WHERE LENGTH > 750",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),major(C),river(C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (major:<lo,t> $1) (next_to:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(count(state(next_to_2(major(river(all))))))"
        },
        "question": {
            "en": "how many states are next to major rivers",
            "de": "wie viele staaten liegen neben wichtigten fluessen",
            "el": "πόσες πολιτείες είναι δίπλα σε κύρια ποτάμια",
            "fa": "چند ایالت همجوار رودهای عمده هستند ؟",
            "id": "berapa banyak negara bagian yang ada di sebelah sungai-sungai besar ?",
            "sv": "hur många stater ligger bredvid stora floder ?",
            "th": "รัฐ ที่ อยู่ ติด กับ แม่น้ำ สาย หลัก มี กี่ รัฐ",
            "zh": "有 多少 个 州 是 临近 主要 河流 的"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.STATE_NAME FROM STATE AS T1 LEFT OUTER JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.STATE_NAME != \"alaska\" AND T1.STATE_NAME != \"hawaii\" GROUP BY T1.STATE_NAME HAVING COUNT( T2.BORDER ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT COUNT( T2.BORDER ) AS DERIVED_FIELDalias0 , T1.STATE_NAME FROM STATE AS T1 LEFT OUTER JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.STATE_NAME != \"alaska\" AND T1.STATE_NAME != \"hawaii\" GROUP BY T1.STATE_NAME ) ORDER BY DERIVED_FIELDalias0 LIMIT 1)",
            "prolog": "answer(A,fewest(A,B,(state(A),next_to(A,B),state(B),not((const(A,stateid(alaska)))),not((const(A,stateid(hawaii)))))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (not:<t,t> (equals:<e,<e,t>> $0 alaska:s)) (not:<t,t> (equals:<e,<e,t>> $0 hawaii:s)))) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(fewest(state(next_to_2(exclude(exclude(state(all), stateid('alaska')), stateid('hawaii'))))))"
        },
        "question": {
            "en": "what state borders the least states excluding alaska and excluding hawaii",
            "de": "welcher staat grezt an die wenigsten staaten exclusiv alaska und exclusiv hawaii an",
            "el": "ποια πολιτεία συνορεύει με τις λιγότερες πολιτείες μη συμπεριλαμβανομένης της alaska και μη συμπεριλαμβανομένης της hawaii",
            "fa": "چه ایالت هایی همجوار کمترین ایالت ها به غیر از آلاسکا و هاوایی هستند ؟",
            "id": "apa negara bagian yang berbatasan dengan paling sedikit negara bagian selain alaska dan selain hawaii ?",
            "sv": "vilka stater gränsar till minst antal stater utom alaska och utom hawaii ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อื่น น้อย ที่สุด ยกเว้น รัฐ อลาสกา และ รัฐ ฮาวาย",
            "zh": "哪个 州 与 除 阿拉斯加 和 夏威夷 州 之外 的 其它 州 接壤 最少"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.HIGHEST_POINT FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),smallest(B,state(B)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(smallest(state(all))))))"
        },
        "question": {
            "en": "what is the highest point in the smallest state",
            "de": "was ist der hoechste punkt im kleinsten staat",
            "el": "ποιο είναι το ψηλότερο σημείο στη μικρότερη πολιτεία",
            "fa": "بلندترین نقطه در کوچکترین ایالت کجاست ؟",
            "id": "apa titik tertinggi di negara bagian terkecil ?",
            "sv": "vad är den högsta punkten i den minsta staten ?",
            "th": "จุด สูง สุด ของ รัฐ ที่ เล็ก ที่สุด คือ จุด ไหน",
            "zh": "最小 的 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT MOUNTAIN_ALTITUDE FROM MOUNTAIN WHERE MOUNTAIN_NAME = \"mckinley\"",
            "prolog": "answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))",
            "lambda": "(elevation:<lo,i> mount_mckinley:m)",
            "funql": "answer(elevation_1(placeid('mount mckinley')))"
        },
        "question": {
            "en": "what is the height of mount mckinley",
            "de": "was ist die hoehe mount mckinleys",
            "el": "ποιο είναι το υψόμετρο του όρους mckinley",
            "fa": "ارتفاع مونت مک کینلی چقدر است ؟",
            "id": "berapa ketinggian gunung mckinley ?",
            "sv": "vad är höjden av mount mckinley ?",
            "th": "ภูเขา แมคคินลีย์ มี ความ สูง เท่าไหร่",
            "zh": "麦金利 山 的 高度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.HIGHEST_POINT FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION LIMIT 1) )",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),population(B,C))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (population:<lo,i> $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(smallest_one(population_1(state(all)))))))"
        },
        "question": {
            "en": "what is the highest point in the state with the smallest population",
            "de": "wie lautet der hoechste punkt in dem staat mit der kleinsten bevoelkerung",
            "el": "ποιο είναι το ψηλότερο σημείο στην πολιτεία με τον μικρότερο πληθυσμό",
            "fa": "بلندترین نقطه در ایالتی که کمترین جمعیت را دارد کجاست ؟",
            "id": "apa titik tertinggi di negara bagian dengan populasi terkecil ?",
            "sv": "vad är den högsta punkten i delstaten med den minsta befolkningen ?",
            "th": "รัฐ ที่ มี ประชากร น้อย ที่สุด มี จุด สูง สุด อยู่ ที่ไหน",
            "zh": "人口 最少 的 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $2:e (and:<t*,t> (place:<p,t> $2) (loc:<lo,<lo,t>> $2 usa:co))) (lambda $2:e (elevation:<lo,i> $2))) $1)))))))",
            "funql": "answer(river(traverse_2(state(loc_1(lowest(place(loc_2(countryid('usa')))))))))"
        },
        "question": {
            "en": "which rivers run through the state with the lowest elevation in the usa",
            "de": "welche fluesse verlaufen durch den staat mit der niedrigsten erhebung in den usa",
            "el": "ποια ποτάμια διασχίζουν την πολιτεία με το χαμηλότερο υψόμετρο στις ηπα",
            "fa": "کدام رودخانه ها از ایالتی که کمترین ارتفاع را در ایالات متحده آمریکا دارد میگذرند ؟",
            "id": "apa sungai-sungai yang mengalir melalui negara bagian dengan elevasi terendah di amerika serikat ?",
            "sv": "vilka floder löper genom staten med lägsta höjden i usa ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ที่ มี พื้นที่ ต่ำ ที่สุด ใน สหรัฐอเมริกา",
            "zh": "哪些 河流 贯穿 美国 海拔 最低 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT LOWEST_ELEVATION FROM HIGHLOW ORDER BY LOWEST_ELEVATION LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $2:e (and:<t*,t> (place:<p,t> $2) (loc:<lo,<lo,t>> $2 usa:co))) (lambda $2:e (elevation:<lo,i> $2))) $1)))))))",
            "funql": "answer(river(traverse_2(state(loc_1(lowest(place(loc_2(countryid('usa')))))))))"
        },
        "question": {
            "en": "what rivers run through the state with the lowest point in the usa",
            "de": "welche fluesse verlaufen durch den staat mit dem niedrigsten punkt in den usa",
            "el": "ποια ποτάμια διασχίζουν την πολιτεία με το χαμηλότερο σημείο στις ηπα",
            "fa": "کدام رودخانه ها در ایالات متحده از ایالتی که پایینترین نقطه در آن واقع شده است میگذرند ؟",
            "id": "apa saja sungai-sungai yang melalui negara bagian dengan titik terendah di amerika serikat ?",
            "sv": "vilka floder löper genom staten med den lägsta punkten i usa ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ ที่ มี จุด ต่ำ สุด ใน อเมริกา",
            "zh": "什么 河流 贯穿 美国 最低 点 的 所在 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT MOUNTAIN_NAME FROM MOUNTAIN WHERE STATE_NAME = \"alaska\"",
            "prolog": "answer(A,(mountain(A),loc(A,B),const(B,stateid(alaska))))",
            "lambda": "(lambda $0:e (and:<t*,t> (mountain:<m,t> $0) (loc:<lo,<lo,t>> $0 alaska:s)))",
            "funql": "answer(mountain(loc_2(stateid('alaska'))))"
        },
        "question": {
            "en": "what mountains are in alaska",
            "de": "welche berge gibt es in alaska",
            "el": "ποια βουνά υπάρχουν στην alaska",
            "fa": "چه کوه هایی در آلاسکا وجود دارند ؟",
            "id": "apa saja gunung-gunung di alaska ?",
            "sv": "vilka berg finns i alaska ?",
            "th": "ใน รัฐ อลาสกา มี ภูเขา อะไร บ้าง",
            "zh": "在 阿拉斯加 州 有 什么 山"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( DISTINCT TRAVERSE ) FROM RIVER WHERE LENGTH > 750",
            "prolog": "answer(A,count(B,(state(B),loc(C,B),major(C),river(C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (major:<lo,t> $1) (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0)))))))",
            "funql": "answer(count(state(loc_1(major(river(all))))))"
        },
        "question": {
            "en": "how many states have major rivers",
            "de": "wie viele staaten haben wichtige fluesse",
            "el": "πόσες πολιτείες έχουν κύρια ποτάμια",
            "fa": "چند ایالت رودخانه عمده ای دارند ؟",
            "id": "berapa banyak negara bagian memiliki sungai-sungai besar?",
            "sv": "hur många stater har stora floder ?",
            "th": "มี กี่ รัฐ ที่ มี แม่น้ำ สาย หลัก",
            "zh": "有 多少 个 州 有 主要 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) ) ORDER BY AREA LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) )",
            "prolog": "answer(A,smallest(A,(state(A),longest(B,river(B)),traverse(B,A))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(smallest(state(traverse_1(longest(river(all))))))"
        },
        "question": {
            "en": "what is the smallest state through which the longest river runs",
            "de": "welches ist der kleinste unter den staaten durch die der laengste fluss laeuft",
            "el": "ποια είναι η μικρότερη πολιτεία που διασχίζει το μακρύτερο ποτάμι",
            "fa": "کوچکترین ایالتی که طولانی ترین رود از آن عبور میکند کدام است ؟",
            "id": "apa negara bagian terkecil yang dilalui sungai terpanjang ?",
            "sv": "vilken är den minsta staten genom vilken den längsta floden rinner ?",
            "th": "ใน บรรดา รัฐ ที่ แม่น้ำ สาย ที่ ยาว ที่สุด ไหล ผ่าน รัฐ ใด เป็น รัฐ ที่ เล็ก ที่สุด",
            "zh": "被 最长 的 河流 贯穿 的 最小 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,largest(A,(state(A),traverse(B,A),const(B,riverid(mississippi)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(traverse_1(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "what is the largest state traversed by the mississippi river",
            "de": "wie lautet der groesste staat durch welchen der mississippi fluss verlaeuft",
            "el": "ποια είναι η μεγαλύτερη πολιτεία που διασχίζει ο ποταμός mississippi",
            "fa": "بزرگترین ایالتی که میسیسیپی از آن عبور میکند کدامست ؟",
            "id": "apa negara bagian terbesar yang dilintasi sungai mississippi ?",
            "sv": "vilken är den största staten som korsas av mississippifloden ?",
            "th": "ใน บรรดา รัฐ ที่ แม่น้ำ มิสซิสซิปปี ไหล ผ่าน รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด",
            "zh": "密西西比 河 流经 的 最大 的 州 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"rio grande\" ) ORDER BY AREA DESC LIMIT 1) AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"rio grande\" )",
            "prolog": "answer(A,largest(A,(state(A),const(B,riverid('rio grande')),traverse(B,A))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> rio_grande_river:r $0))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(state(traverse_1(riverid('rio grande')))))"
        },
        "question": {
            "en": "what is the largest of the states that the rio grande runs through",
            "de": "welcher ist der groesste staat durch den der rio grande fliesst",
            "el": "ποια είναι η μεγαλύτερη από τις πολιτείες που ο rio grande διασχίζει",
            "fa": "بزرگترین ایالتی که ریوگرانده از آن میگذرد کجاست ؟",
            "id": "apa negara bagian terbesar yang dilalui rio grande ?",
            "sv": "vilken är den största staten som rio grande rinner genom ?",
            "th": "รัฐ ใด เป็น รัฐ ที่ ใหญ่ ที่สุด ที่ แม่น้ำ ริโอแกรนด์ ไหล ผ่าน",
            "zh": "格兰德 河 贯穿 的 最大 的 州 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"colorado\" )",
            "prolog": "answer(A,count(B,(river(B),traverse(B,C),state(C),next_to(C,D),const(D,stateid(colorado))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 colorado:s) (loc:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(count(river(traverse_2(state(next_to_2(stateid('colorado')))))))"
        },
        "question": {
            "en": "how many rivers run through the states bordering colorado",
            "de": "wie viele fluesse fliessen durch die staaten die colorado angrenzen",
            "el": "πόσα ποτάμια διατρέχουν τις πολιτείες που συνορεύουν με το colorado",
            "fa": "چند رودخانه از ایالات همجوار کلرادو میگذرند ؟",
            "id": "berapa banyak sungai mengalir melalui negara-negara bagian yang berbatasan dengan colorado ?",
            "sv": "hur många floder löper genom de stater som gränsar till colorado ?",
            "th": "มี แม่น้ำ กี่ สาย ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ โคโลราโด",
            "zh": "有 多少 河流 流经 与 科罗拉多 接壤 的 州 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER WHERE RIVER_NAME NOT IN ( SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\" ) ORDER BY LENGTH DESC LIMIT 1) AND RIVER_NAME NOT IN ( SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE = \"texas\" )",
            "prolog": "answer(A,longest(A,(river(A),not((traverse(A,B),const(B,stateid(texas)))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (not:<t,t> (loc:<lo,<lo,t>> $0 texas:s)))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(exclude(river(all), traverse_2(stateid('texas')))))"
        },
        "question": {
            "en": "what is the longest river that does not run through texas",
            "de": "wie lautet der laengste fluss der nicht durch texas verlaeuft",
            "el": "ποιο είναι το μακρύτερο ποτάμι που δεν διασχίζει το texas",
            "fa": "نام بلندترین رودخانه ای که از تگزاس نمیگذرد چیست ؟",
            "id": "apa sungai terpanjang yang tidak melalui texas ?",
            "sv": "vilken är den längsta floden som inte rinner genom texas ?",
            "th": "แม่น้ำ สาย ที่ ยาว ที่สุด สาย ใด ไม่ ได้ ไหล ผ่าน รัฐ เท็กซัส",
            "zh": "没有 流经 得克萨斯 州 的 最长 的 河流 是 哪个"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CITY_NAME FROM CITY AS T1 WHERE T1.POPULATION IN (SELECT DERIVED_TABLEalias1.DERIVED_FIELDalias0 FROM (SELECT MAX (T1.POPULATION) AS DERIVED_FIELDalias0, T2.STATE_NAME FROM CITY AS T1 JOIN STATE AS T2 ON T2.STATE_NAME = T1.STATE_NAME WHERE T2.STATE_NAME IN (SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT(1) = (SELECT MAX (DERIVED_FIELDalias1) FROM (SELECT BORDER, COUNT(1) AS DERIVED_FIELDalias1 FROM BORDER_INFO GROUP BY BORDER) AS DERIVED_TABLEalias0)) GROUP BY T2.STATE_NAME) AS DERIVED_TABLEalias1)",
            "prolog": "answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),largest(C,state(C)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (state:<s,t> $2)) (lambda $2:e (size:<lo,i> $2)))) (loc:<lo,<lo,t>> $0 $1)))))) (lambda $0:e (size:<lo,i> $0)))",
            "funql": "answer(largest(city(loc_2(state(next_to_2(largest(state(all))))))))"
        },
        "question": {
            "en": "what are the largest cities in the states that border the largest state",
            "de": "welches sind die groessten staedte in an den groessten staat angrenzende staaten",
            "el": "ποιες είναι οι μεγαλύτερες πόλεις στις πολιτείες που συνορεύουν με τη μεγαλύτερη πολιτεία",
            "fa": "بزگترین شهر های ایالت های مجاور بزرگترین ایالت کدامند ؟",
            "id": "apa kota-kota terbesar di negara-negara bagian yang berbatasan dengan negara bagian terbesar ?",
            "sv": "vilka är de största städerna i de stater som gränsar till den största staten ?",
            "th": "ใน บรรดา รัฐ ต่างๆ ที่ อยู่ ติด กับ รัฐ ที่ ใหญ่ ที่สุด รัฐ เหล่านั้น มี เมือง ใหญ่ ที่สุด อะไรบ้าง",
            "zh": "与 最大 的 州 接壤 的 州 的 最大 的 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME NOT IN ( SELECT TRAVERSE FROM RIVER )",
            "prolog": "answer(A,(state(A),not((loc(B,A),river(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (not:<t,t> (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 $0)))))))",
            "funql": "answer(exclude(state(all), loc_1(river(all))))"
        },
        "question": {
            "en": "what state has no rivers",
            "de": "welcher staat hat keine fluesse",
            "el": "ποια πολιτεία δεν έχει ποτάμια",
            "fa": "کدام ایالت هیچ رودخانه ای ندارد ؟",
            "id": "apa negara bagian yang tidak memiliki sungai ?",
            "sv": "vilken stat har inga floder ?",
            "th": "รัฐ ไหน ไม่ มี แม่น้ำ เลย",
            "zh": "什么 州 没有 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( T1.RIVER_NAME ) FROM RIVER AS T1 JOIN HIGHLOW AS T2 ON T1.TRAVERSE = T2.STATE_NAME WHERE T2.HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1)",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),state(C),loc(D,C),highest(D,place(D))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (place:<p,t> $2)) (lambda $2:e (elevation:<lo,i> $2))) $1))))))))",
            "funql": "answer(count(river(loc_2(state(loc_1(highest(place(all))))))))"
        },
        "question": {
            "en": "how many rivers are in the state with the highest point",
            "de": "wie viele fluesse gibt es im staat mit dem hoechsten punkt",
            "el": "πόσα ποτάμια υπάρχουν στην πολιτεία με το ψηλότερο σημείο",
            "fa": "چند رودخانه درشهری که بیشترین رودخانه ها را دارد هست ؟",
            "id": "berapa banyak sungai di negara bagian dengan titik tertinggi ?",
            "sv": "hur många floder har staten med den högsta punkten ?",
            "th": "มี แม่น้ำ ทั้งสิ้น กี่ สาย ใน รัฐ ที่ มี จุด สูง ที่สุด",
            "zh": "在 国家 最高 点 的 所在 州 有 多少 条 河流"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY GROUP BY STATE_NAME ORDER BY COUNT( 1 ) DESC LIMIT 1",
            "prolog": "answer(A,most(A,B,(state(A),loc(B,A),city(B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (loc:<lo,<lo,t>> $1 $0))))))",
            "funql": "answer(most(state(loc_1(city(all)))))"
        },
        "question": {
            "en": "what state has the most cities",
            "de": "welcher staat hat die meisten staedte",
            "el": "ποια πολιτεία έχει τις περισσότερες πόλεις",
            "fa": "کدام ایالت بیشترین تعداد شهرها را دارد ؟",
            "id": "apa negara bagian yang memiliki paling banyak kota ?",
            "sv": "vilken stat har flest städer ?",
            "th": "รัฐ ใด มี เมือง อยู่ มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,(capital(A),loc(A,B),largest(B,state(B))))",
            "lambda": "(capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(capital(loc_2(largest(state(all)))))"
        },
        "question": {
            "en": "what is the capital of the largest state",
            "de": "wie lautet die hauptstadt des groessten staates",
            "el": "ποια είναι η πρωτεύουσα της μεγαλύτερης πολιτείας",
            "fa": "مرکز بزرگترین ایالت کجاست ؟",
            "id": "apa ibukota negara bagian terbesar ?",
            "sv": "vilken är huvudstaden i den största staten ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด มี เมืองหลวง ชื่อ ว่า อะไร",
            "zh": "最大 的 州 的 首府 是 哪儿"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,(capital(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(capital(city(loc_2(largest(state(loc_2(countryid('usa'))))))))"
        },
        "question": {
            "en": "what is the capital city of the largest state in the us",
            "de": "wie lautet die hauptstadt des groessten staates in den usa",
            "el": "ποια είναι η πρωτεύουσα πόλη της μεγαλύτερης πολιτείας στις ηπα",
            "fa": "مرکز بزرگترین ایالت آمریکا کدام است ؟",
            "id": "apa ibukota negara bagian terbesar di as ?",
            "sv": "vilken är huvudstaden i den största staten i usa ?",
            "th": "เมืองหลวง ของ รัฐ ที่ ใหญ่ ที่สุด ใน อเมริกา ชื่อ ว่า อะไร",
            "zh": "美国 最大 的 州 的 首府 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE STATE_NAME = \"montana\"",
            "prolog": "answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 montana:s))))",
            "funql": "answer(count(city(loc_2(stateid('montana')))))"
        },
        "question": {
            "en": "how many cities are in montana",
            "de": "wie viele staede sind in montana",
            "el": "πόσες πόλεις υπάρχουν στη montana",
            "fa": "چند شهر در مونتانا هست ؟",
            "id": "berapa banyak kota di montana ?",
            "sv": "hur många städer finns i montana ?",
            "th": "รัฐ มอนตานา มี เมือง อยู่ กี่ เมือง",
            "zh": "在 蒙大拿 州 有 多少 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE STATE_NAME = \"louisiana\"",
            "prolog": "answer(A,count(B,(city(B),loc(B,C),const(C,stateid(louisiana))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 louisiana:s))))",
            "funql": "answer(count(city(loc_2(stateid('louisiana')))))"
        },
        "question": {
            "en": "how many cities are in louisiana",
            "de": "wie viele staedte sind in louisiana",
            "el": "πόσες πόλλες είναι στη louisiana",
            "fa": "چند شهر در لوزانیا هست ؟",
            "id": "berapa banyak kota di louisiana ?",
            "sv": "hur många städer finns i louisiana ?",
            "th": "รัฐ หลุยเซียนา มี เมือง อยู่ กี่ เมือง",
            "zh": "在 路易斯安那 州 有 多少 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE STATE_NAME = \"texas\"",
            "prolog": "answer(A,count(B,(city(B),const(C,stateid(texas)),loc(B,C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 texas:s))))",
            "funql": "answer(count(city(loc_2(stateid('texas')))))"
        },
        "question": {
            "en": "how many cities does texas have",
            "de": "wie viele staedte hat texas",
            "el": "πόσες πόλεις έχει το texas",
            "fa": "تگزاس چند شهر دارد ؟",
            "id": "berapa banyak kota yang dimiliki texas ?",
            "sv": "hur många städer har texas ?",
            "th": "รัฐ เท็กซัส มี เมือง กี่ เมือง",
            "zh": "在 得克萨斯 州 有 多少 城市 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT HIGHEST_POINT FROM HIGHLOW WHERE ( STATE_NAME = ( SELECT T2.TRAVERSE FROM STATE AS T1 JOIN RIVER AS T2 ON T1.STATE_NAME = T2.TRAVERSE GROUP BY T1.STATE_NAME ORDER BY COUNT( T2.RIVER_NAME ) DESC LIMIT 1) )",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (count:<<e,t>,i> (lambda $2:e (and:<t*,t> (river:<r,t> $2) (loc:<lo,<lo,t>> $2 $1))))))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(most(state(traverse_1(river(all))))))))"
        },
        "question": {
            "en": "what is the highest point in the state with the most rivers",
            "de": "was ist der hoechste punkt in dem staat mit den meisten fluessen",
            "el": "ποιο είναι το ψηλότερο σημείο στην πολιτεία με τα περισσότερα ποτάμια",
            "fa": "بلندترین نقطه در ایالتی که بیشترین تعداد رودها را دارد کجاست ؟",
            "id": "apa titik tertinggi di negara bagian dengan jumlah sungai terbanyak ?",
            "sv": "vad är den högsta punkten i delstaten med flest antal floder ?",
            "th": "รัฐ ที่ มี แม่น้ำ มาก ที่สุด มี จุด สูง สุด ชื่อ อะไร",
            "zh": "河流 最多 的 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE",
            "prolog": "answer(A,(area(B,A),state(B)))",
            "lambda": "(area:<lo,i> usa:co)",
            "funql": "answer(area_1(state(all)))"
        },
        "question": {
            "en": "what is the area of the states",
            "de": "wie gross ist die gesamte flaeche der usa",
            "el": "ποιο είναι το εμβαδό των πολιτειών",
            "fa": "مساحت همه ایالات چقدر است ؟",
            "id": "berapa luas dari negara-negara bagian ?",
            "sv": "vad är staternas area ?",
            "th": "ประเทศ สหรัฐ มี พื้นที่ ทั้งหมด เท่าใด",
            "zh": "美国 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( TRAVERSE ) FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),shortest(D,river(D)),traverse(D,B)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (river:<r,t> $1)) (lambda $1:e (len:<r,i> $1))) $0))))",
            "funql": "answer(count(intersection(state(loc_2(countryid('usa'))),traverse_1(shortest(river(all))))))"
        },
        "question": {
            "en": "how many states in the us does the shortest river run through",
            "de": "durch wieviele staaten der usa fliesst der kuerzeste fluss",
            "el": "πόσες πολιτείες των ηπα διασχίζει το κοντύτερο ποτάμι",
            "fa": "کوتاهترین رود از چند ایالت در ایالات متحده میگذرد ؟",
            "id": "berapa banyak negara bagian di as yang dilalui sungai terpendek ?",
            "sv": "hur många delstater i usa löper den kortaste floden genom ?",
            "th": "มี กี่ รัฐ บ้าง ใน อเมริกา ที่ มี แม่น้ำ สาย ที่ สั้น ที่สุด ไหล ผ่าน",
            "zh": "最短 的 河流 贯穿 美国 多少 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT SUM( POPULATION ) / SUM( AREA ) FROM STATE",
            "prolog": "answer(A,(density(B,A),const(B,countryid(usa))))",
            "lambda": "(density:<lo,i> usa:co)",
            "funql": "answer(density_1(countryid('usa')))"
        },
        "question": {
            "en": "what is the average population per square km in the us",
            "de": "wie gross ist die durchschnittliche bevoelkerung pro quadratkilometer in den vereinigten staaten",
            "el": "ποιος είναι ο μέσος πληθυσμός ανά τετραγωνικό χλμ, στις ηπα",
            "fa": "میانگین جمعیت بر کیلومتر مربع در ایالات متحده چقدر است ؟",
            "id": "berapa jumlah penduduk rata-rata per km persegi di as ?",
            "sv": "vad är den genomsnittliga folkmängden per kvadratkilometer i usa ?",
            "th": "สหรัฐอเมริกา มี ความ หนาแน่น ของ ประชากร เฉลี่ย ต่อ ตาราง กิโลเมตร เป็น เท่าไหร่",
            "zh": "在 美国 每 平方公里 的 平均 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) ) )",
            "prolog": "answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (state:<s,t> $2)) (lambda $2:e (population:<lo,i> $2)))) (loc:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(river(traverse_2(state(next_to_2(largest_one(population_1(state(all))))))))"
        },
        "question": {
            "en": "what rivers flow through states that border the state with the largest population",
            "de": "bevoelkerung angrenzen",
            "el": "ποια ποτάμια διασχίζουν πολιτείες που συνορεύουν με την πολιτεία με τον μεγαλύτερο πληθυσμό",
            "fa": "کدام رودخانه ها از ایالت هایی میگذرند که با ایالتی که دارای بیشترین جمعیت است همجوارند ؟",
            "id": "apa saja sungai-sungai yang mengalir melalui negara-negara bagian yang berbatasan dengan negara bagian dengan populasi terbesar ?",
            "sv": "vilka floder flyter genom stater som gränsar till staten med den största befolkningen ?",
            "th": "แม่น้ำ ใด ไหล ผ่าน รัฐ ที่ อยู่ ติด กับ รัฐ ที่ มี ประชากร มาก ที่สุด",
            "zh": "什么 河流 流经 与 人口 最多 的 州 接壤 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),largest(B,state(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (size:<lo,i> $1))))))",
            "funql": "answer(major(city(loc_2(largest(state(all))))))"
        },
        "question": {
            "en": "what are the major cities in the largest state",
            "de": "was sind die groessten stadte in dem groessten staat",
            "el": "ποιες είναι οι κύριες πόλεις στη μεγαλύτερη πολιτεία",
            "fa": "شهرهای عمده بزرگترین ایالت کدامند ؟",
            "id": "apa kota-kota besar di negara bagian terbesar ?",
            "sv": "vilka är de stora städerna i den största staten ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด มี เมือง เอก อะไร บ้าง",
            "zh": "最大 的 州 的 主要 城市 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1)",
            "prolog": "answer(A,(area(B,A),smallest(B,state(B))))",
            "lambda": "(area:<lo,i> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(area_1(smallest(state(all))))"
        },
        "question": {
            "en": "what is the area of the smallest state",
            "de": "was ist die flaeche des kleinsten staates",
            "el": "ποια είναι η επιφάνεια της μικρότερης πολιτείας",
            "fa": "مساحت کوچکترین ایالت چقدر است ؟",
            "id": "berapa luas dari negara bagian terkecil ?",
            "sv": "vad är den minsta statens area ?",
            "th": "รัฐ ที่ เล็ก ที่สุด มี พื้นที่ เท่าใด",
            "zh": "最小 的 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (river:<r,t> $1) (loc:<lo,<lo,t>> $1 usa:co))) (lambda $1:e (len:<r,i> $1))))))",
            "funql": "answer(state(next_to_2(longest(river(loc_2(countryid('usa')))))))"
        },
        "question": {
            "en": "which states border the longest river in the usa",
            "de": "welche staaten grenzen an den laengsten fluesse in den usa",
            "el": "ποιες πολιτείες συνορεύουν με το μακρύτερο ποτάμι στις usa",
            "fa": "کدام ایالت ها همجوار بلندترین رود ایالات متحده آمریکا هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan sungai terpanjang di amerika serikat ?",
            "sv": "vilka stater gränsar till den längsta floden i usa ?",
            "th": "รัฐ ใด อยู่ ติด กับ แม่น้ำ ที่ ยาว ที่สุด ใน อเมริกา",
            "zh": "在 美国 哪些 州 与 最长 的 河流 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,(density(B,A),smallest(C,(state(B),population(B,C)))))",
            "lambda": "(density:<lo,i> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0))))",
            "funql": "answer(density_1(smallest_one(population_1(state(all)))))"
        },
        "question": {
            "en": "what is the population density of the state with the smallest population",
            "de": "wie hoch die bevoelkerungsdichte des staat mit der kleinsten bevoelkerung",
            "el": "ποια είναι η πυκνότητα πληθυσμού στην πολιτεία με το μικρότερο πληθυσμό",
            "fa": "چگالی جمعیت ایالتی که کمترین جمعیت را دارد چقدر است ؟",
            "id": "berapa kepadatan penduduk negara bagian dengan populasi terkecil ?",
            "sv": "vad är befolkningstätheten i staten med den minsta befolkningen ?",
            "th": "รัฐ ที่ มี ประชากร น้อย ที่สุด มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "人口 最少 的 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( DISTINCT BORDER ) FROM BORDER_INFO WHERE STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME = \"mississippi\" )",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),const(C,riverid(mississippi)),river(C)),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 mississippi_river:r))))",
            "funql": "answer(count(state(next_to_2(river(riverid('mississippi'))))))"
        },
        "question": {
            "en": "how many states border the mississippi river",
            "de": "wie viele staaten grenzen an den mississippi fluss an",
            "el": "πόσες πολιτείες συνορεύουν τον mississippi ποταμό",
            "fa": "چند ایالت همجوار میسیسیپی هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan sungai mississippi ?",
            "sv": "hur många stater gränsar till mississippifloden ?",
            "th": "แม่น้ำ มิสซิสซิปปี อยู่ ติด กับ รัฐ ใด บ้าง",
            "zh": "有 多少 州 与 密西西比 河 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.STATE_NAME FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.CAPITAL = T2.HIGHEST_POINT",
            "prolog": "answer(A,(state(A),loc(B,A),capital(B),highest(B,(place(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (capital:<c,t> $1) (loc:<lo,<lo,t>> $1 $0) (equals:<e,<e,t>> $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (and:<t*,t> (place:<p,t> $2) (loc:<lo,<lo,t>> $2 $0))) (lambda $2:e (elevation:<lo,i> $2)))))))))",
            "funql": "answer(state(loc_1(capital(highest(place(all))))))"
        },
        "question": {
            "en": "what states have a capital that is the highest point in the state",
            "de": "welche staaten haben eine hauptstadt die der hoechste punkt des staates ist",
            "el": "ποιες πολιτείες έχουν πρωτεύουσα η οποία είναι το ψηλότερο σημείο στην πολιτεία",
            "fa": "کدام ایالت ها دارای مرکز ایالتی هستند که بلندترین نقطه در آن ایالت است ؟",
            "id": "apa negara-negara bagian yang memiliki ibukota yang merupakan titik tertinggi ?",
            "sv": "vilka stater har en huvudstad som är den högsta punkten i staten ?",
            "th": "รัฐ ใด มี เมืองหลวง ที่ เป็น จุด สูงสุด ของ รัฐ นั้น",
            "zh": "哪些 州 的 首府 是 州 的 最高 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = ( SELECT CAPITAL FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA LIMIT 1) )",
            "prolog": "answer(A,(population(B,A),capital(B),loc(B,C),smallest(C,state(C))))",
            "lambda": "(population:<lo,i> (capital:<s,c> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0)))))",
            "funql": "answer(population_1(capital(loc_2(smallest(state(all))))))"
        },
        "question": {
            "en": "what is the population of the capital of the smallest state",
            "de": "welches ist die einwohnerzahl der hauptstadt des kleinsten staates",
            "el": "ποιος είναι ο πληθυσμός της πρωτεύουσας της μικρότερης πολιτείας",
            "fa": "جمعیت پایتخت کوچکترین ایالت چقدر است ؟",
            "id": "berapa populasi ibukota negara bagian terkecil ?",
            "sv": "vad är folkmängden i huvudstaden i den minsta staten ?",
            "th": "เมืองหลวง ของ รัฐ ที่ เล็ก ที่สุด มี ประชากร เท่าไหร่",
            "zh": "最小 的 州 的 首府 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM CITY WHERE CITY_NAME = ( SELECT CAPITAL FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,(population(B,A),capital(B),loc(B,C),largest(C,state(C))))",
            "lambda": "(population:<lo,i> (capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0)))))",
            "funql": "answer(population_1(capital(loc_2(largest(state(all))))))"
        },
        "question": {
            "en": "what is the population of the capital of the largest state",
            "de": "was ist die bevoelkerung der hauptstadt des groessten staates",
            "el": "ποιος είναι ο πληθυσμός της πρωτεύουσας της μεγαλύτερης πολιτείας",
            "fa": "جمعیت پایتخت بزرگترین ایالت چقدر است ؟",
            "id": "berapa populasi ibukota negara bagian terbesar ?",
            "sv": "vad är folkmängden i huvudstaden i den största staten ?",
            "th": "เมืองหลวง ของ รัฐ ที่ ใหญ่ ที่สุด มี ประชากร เท่าไหร่",
            "zh": "最大 州 的 首府 的 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.LOWEST_POINT FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,lowest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (area:<lo,i> $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(lowest(place(loc_2(largest_one(area_1(state(all)))))))"
        },
        "question": {
            "en": "what is the lowest point of the state with the largest area",
            "de": "was ist die tiefste stelle des staates mit der groesste flaeche",
            "el": "ποιο είναι το χαμηλότερο σημείο της πολιτείας με τη μεγαλύτερη επιφάνεια",
            "fa": "نام کم ارتفاع ترین نقطه ایالتی که بیشترین مساحت را دارد چیست ؟",
            "id": "apa titik terendah dari negara bagian dengan luas terbesar ?",
            "sv": "vad är den lägsta punkten i staten med den största arean ?",
            "th": "ใน รัฐ ที่ มี พื้นที่ มาก ที่สุด ตรงไหน เป็น จุด ต่ำ สุด",
            "zh": "面积 最大 的 州 的 最低 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM ( SELECT T2.POPULATION FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME ) ORDER BY POPULATION LIMIT 1)",
            "prolog": "answer(A,(state(A),loc(B,A),smallest(B,capital(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (capital:<c,t> $1)) (lambda $1:e (size:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(smallest(capital(all)))))"
        },
        "question": {
            "en": "what state has the smallest capital",
            "de": "welcher staat hat die kleinste hauptstadt",
            "el": "ποια πολιτεία έχει τη μικρότερη πρωτεύουσα",
            "fa": "کدام ایالت کوچکترین مرکز ایالت را دارد ؟",
            "id": "apa negara bagian yang memiliki ibukota terkecil ?",
            "sv": "vilken stat har den minsta huvudstaden ?",
            "th": "รัฐ ใด มี เมืองหลวง เล็ก ที่สุด",
            "zh": "哪个 州 有 最小 的 首府"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.BORDER FROM BORDER_INFO AS T1 JOIN BORDER_INFO AS T2 ON T1.BORDER = T2.STATE_NAME WHERE T1.STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE ORDER BY POPULATION DESC LIMIT 1) )",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (state:<s,t> $2)) (lambda $2:e (population:<lo,i> $2)))) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(state(next_to_2(state(next_to_2(largest_one(population_1(state(all))))))))"
        },
        "question": {
            "en": "what states border states that border the state with the largest population",
            "de": "welche staaten grenzen an staaten welche an den staat mit der groessten bevoelkerung grenzen",
            "el": "ποιες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με την πολιτεία με το μεγαλύτερο πληθυσμό",
            "fa": "کدام ایالت ها هم مرز ایالات هم مرز پر جمعیت ترین ایالت هستند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan negara bagian dengan populasi terbesar ?",
            "sv": "vilka stater gränsar stater som gränsar till staten med den största befolkningen ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ที่ มี ประชากร มาก ที่สุด",
            "zh": "什么 州 和 与 人口 最多 的 州 接壤 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT CAPITAL FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO GROUP BY BORDER HAVING COUNT( 1 ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT BORDER , COUNT( 1 ) DERIVED_FIELDalias0 FROM BORDER_INFO GROUP BY BORDER ) ORDER BY DERIVED_FIELDalias0 DESC LIMIT 1) )",
            "prolog": "answer(A,(capital(A),loc(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))",
            "lambda": "(capital:<s,c> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1)))))))",
            "funql": "answer(capital(loc_2(most(state(next_to_2(state(all)))))))"
        },
        "question": {
            "en": "what is the capital of the state that borders the most states",
            "de": "was ist die hauptstadt des staates der die meisten staaten angrenzt",
            "el": "ποια είναι η πρωτεύουσα της πολιτείας που συνορεύει με τις περισσότερες πολιτείες",
            "fa": "مرکز ایالتی که با بیشتر ایالات همجوار است کجاست ؟",
            "id": "apa ibukota negara bagian yang berbatasan dengan sebagian besar negara bagian ?",
            "sv": "vilken är huvudstaden i den stat som gränsar till flest antal stater ?",
            "th": "จง บอก ชื่อ เมืองหลวง ของ รัฐ ที่ อยู่ ติด กับ รัฐ อื่นๆ มาก ที่สุด",
            "zh": "和 最多 州 接壤 的 州 的 首府 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1",
            "prolog": "answer(A,(size(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(size:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(size(largest(state(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "what is the size of the largest state in the usa",
            "de": "wie lautet die flaeche des groessten staates in den usa",
            "el": "ποιο είναι το μέγεθος της μεγαλύτερης πολιτείας στις ηπα",
            "fa": "اندازه بزرگترین ایالت در ایالات متحده آمریکا چقدر است ؟",
            "id": "berapa luas dari negara bagian terbesar di amerika serikat ?",
            "sv": "vad är storleken på den största staten i usa ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด ใน สหรัฐอเมริกา มี ขนาด เท่าใด",
            "zh": "美国 最大 的 州 有 多大"
        }
    },
    {
        "mr": {
            "sql": "SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1",
            "prolog": "answer(A,(area(B,A),largest(B,state(B))))",
            "lambda": "(area:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(area_1(largest(state(all))))"
        },
        "question": {
            "en": "what is the area of the largest state",
            "de": "welches ist die flaeche des groessten staates",
            "el": "ποιο είναι το εμβαδό της μεγαλύτερης πολιτείας",
            "fa": "مساحت بزرگترین ایالت چقدر است ؟",
            "id": "berapa luas dari negara bagian terbesar ?",
            "sv": "vad är den största statens area ?",
            "th": "รัฐ ที่ ใหญ่ ที่สุด มี พื้นที่ เท่าใด",
            "zh": "最大 的 州 的 面积 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM HIGHLOW WHERE LOWEST_ELEVATION = ( SELECT T2.LOWEST_ELEVATION FROM RIVER AS T1 JOIN HIGHLOW AS T2 ON T1.TRAVERSE = T2.STATE_NAME WHERE ( T1.RIVER_NAME = \"mississippi\" ) ORDER BY T2.LOWEST_ELEVATION LIMIT 1 )",
            "prolog": "answer(D,(state(D),loc(B,D),lowest(B,(state(A),traverse(C,A),const(C,riverid(mississippi)),loc(B,A),place(B)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> mississippi_river:r $0) (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (place:<p,t> $1) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (loc:<lo,<lo,t>> mississippi_river:r $2) (loc:<lo,<lo,t>> $1 $2)))))) (lambda $1:e (elevation:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(lowest(place(loc_2(state(traverse_1(river(riverid('mississippi'))))))))))"
        },
        "question": {
            "en": "of the states washed by the mississippi river which has the lowest point",
            "de": "welcher staat hat die niedrigste erhebung in den staaten durch welche der mississippi fluss verlaeuft",
            "el": "από τις πολιτείες που βρέχονται από το ποταμό mississippi ποια έχει το χαμηλότερο σημείο",
            "fa": "در میان ایالت هایی که رودخانه میسیسیپی از آنها عبور میکند کدام یک کم ارتفاع تر هستند ؟",
            "id": "di antara negara bagian yang dilalui sungai mississippi manakah yang memiliki titik terendah ?",
            "sv": "vilken utav de stater som sköljs av mississippifloden har den lägsta punkten ?",
            "th": "พื้นที่ ต่ำ สุด ของ รัฐ ใด จะ ถูก แม่น้ำ มิสซิสซิปปี ท่วม",
            "zh": "在 密西西比 河 流经 的 州 里 哪 一个 州 有 最低 点"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( RIVER_NAME ) FROM RIVER WHERE LENGTH > ALL ( SELECT LENGTH FROM RIVER WHERE RIVER_NAME = \"red\" ) AND TRAVERSE = \"texas\"",
            "prolog": "answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),longer(B,D),const(D,riverid(red))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 texas:s) (>:<i,<i,t>> (len:<r,i> $0) (len:<r,i> red_river:r)))))",
            "funql": "answer(count(intersection(river(loc_2(stateid('texas'))), longer(riverid('red')))))"
        },
        "question": {
            "en": "how many rivers in texas are longer than the red",
            "de": "wie viele fluesse in texas sind laenger als der red",
            "el": "πόσα ποτάμια στο texas είναι μακρύτερα από το red",
            "fa": "چند رودخانه در تگزاس بلند تر از رد هست ؟",
            "id": "berapa banyak sungai di texas yang lebih panjang dari red ?",
            "sv": "hur många floder i texas är längre än den röda ?",
            "th": "แม่น้ำ ใด บ้าง ใน รัฐ เท็กซัส ที่ ยาว กว่า แม่น้ำ เรด",
            "zh": "在 得克萨斯 州 有 多少 条 河流 比 红 河 长"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.CAPITAL FROM STATE AS T1 JOIN CITY AS T2 ON T1.CAPITAL = T2.CITY_NAME WHERE T2.POPULATION <= 150000",
            "prolog": "answer(A,(capital(A),not((major(A),city(A)))))",
            "lambda": "(lambda $0:e (and:<t*,t> (capital:<c,t> $0) (not:<t,t> (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0)))))",
            "funql": "answer(exclude(capital(all), major(city(all))))"
        },
        "question": {
            "en": "which capitals are not major cities",
            "de": "welche hauptstaedte gehoeren nicht zu den groessten staedten",
            "el": "ποιες πρωτεύουσες δεν είναι κύριες πόλεις",
            "fa": "کدام مراکز ایالات شهر عمده ای نیستند ؟",
            "id": "ibukota-ibukota apa yang bukan merupakan kota-kota besar ?",
            "sv": "vilka huvudstäder ligger inte i stora städer ?",
            "th": "เมืองหลวง ใด บ้าง ที่ ไม่ ใช่ เมือง เอก",
            "zh": "哪些 首府 不是 主要 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.HIGHEST_ELEVATION FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1)",
            "prolog": "answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),largest(C,state(C))))))",
            "lambda": "(elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (size:<lo,i> $1)))))) (lambda $0:e (elevation:<lo,i> $0))))",
            "funql": "answer(elevation_1(highest(place(loc_2(largest(state(all)))))))"
        },
        "question": {
            "en": "how high is the highest point in the largest state",
            "de": "wie hoch liegt der hoechste punkt des groessten staates",
            "el": "πόσο ψηλό είναι το ψηλότερο σημείο στη μεγαλύτερη πολιτεία",
            "fa": "بلند ترین نقطه بزرگترین ایالت چقدر ارتفاع دارد ؟",
            "id": "seberapa tinggikah titik tertinggi di negara bagian terbesar ?",
            "sv": "hur hög är den högsta punkten i den största staten ?",
            "th": "จุด สูง สุด ของ รัฐ ที่ ใหญ่ ที่สุด มี ความ สูง เท่าไหร่",
            "zh": "最大 的 州 的 最高 点 有 多高"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY",
            "prolog": "answer(A,(city(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (city:<c,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(city(loc_2(countryid('usa'))))"
        },
        "question": {
            "en": "give me the cities in usa",
            "de": "nenne die staedte der usa",
            "el": "δώσε μου τις πόλεις στις ηπα",
            "fa": "شهرهای ایالات متحده را به من بده .",
            "id": "berikan kota-kota di amerika serikat .",
            "sv": "ge mig städerna i usa .",
            "th": "บอก ชื่อ เมือง ทั้งหมด ใน สหรัฐอเมริกา มา หน่อย",
            "zh": "给 我 在 美国 的 城市"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.HIGHEST_POINT FROM STATE AS T1 JOIN HIGHLOW AS T2 ON T1.STATE_NAME = T2.STATE_NAME WHERE T1.STATE_NAME IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (place:<p,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (area:<lo,i> $1)))))) (lambda $0:e (elevation:<lo,i> $0)))",
            "funql": "answer(highest(place(loc_2(largest_one(area_1(state(all)))))))"
        },
        "question": {
            "en": "what is the highest point of the state with the largest area",
            "de": "welches ist der hoechste punkt des bezueglich flaeche groessten staates",
            "el": "ποιο είναι το ψηλότερο σημείο της πολιτείας με το μεγαλύτερο εμβαδό",
            "fa": "بلندترین نقطه در ایالتی که بیشترین مساحت را دارد کجاست ؟",
            "id": "apa titik tertinggi negara bagian dengan luas terbesar ?",
            "sv": "vad är den högsta punkten i staten med den största arean ?",
            "th": "จุด สูง สุด ของ รัฐ ที่ มี พื้นที่ กว้าง มาก ที่สุด คือ ที่ไหน",
            "zh": "面积 最大 的 州 的 最高 点 是 什么"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNTRY_NAME FROM STATE WHERE STATE_NAME = \"new hampshire\"",
            "prolog": "answer(A,(loc(B,A),const(B,stateid('new hampshire'))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> new_hampshire:s $0))",
            "funql": "answer(loc_1(stateid('new hampshire')))"
        },
        "question": {
            "en": "where is new hampshire",
            "de": "wo liegt new hampshire",
            "el": "που είναι το new hampshire",
            "fa": "نیو همپشایر در کجاست ؟",
            "id": "di mana new hampshire ?",
            "sv": "vart ligger new hampshire ?",
            "th": "รัฐ นิวแฮมพ์เชียร์ อยู่ ตรงไหน",
            "zh": "新罕布什尔 州 在 哪里"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNTRY_NAME FROM STATE WHERE STATE_NAME = \"massachusetts\"",
            "prolog": "answer(A,(loc(B,A),const(B,stateid(massachusetts))))",
            "lambda": "(lambda $0:e (loc:<lo,<lo,t>> massachusetts:s $0))",
            "funql": "answer(loc_1(stateid('massachusetts')))"
        },
        "question": {
            "en": "where is massachusetts",
            "de": "wo ist massachusetts",
            "el": "που είναι η massachusetts",
            "fa": "ماساچوست در کجا واقع شده است ؟",
            "id": "di mana massachusetts ?",
            "sv": "vart ligger massachusetts ?",
            "th": "รัฐ แมสซาชูเซ็ต อยู่ ที่ไหน",
            "zh": "哪里 是 马萨诸塞 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY GROUP BY STATE_NAME ORDER BY SUM( POPULATION ) DESC LIMIT 1",
            "prolog": "answer(A,largest(B,(state(A),population(A,B))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (population:<lo,i> $0)))",
            "funql": "answer(largest_one(population_1(state(all))))"
        },
        "question": {
            "en": "what state has the largest urban population",
            "de": "welcher staat hat am meisten einwohner",
            "el": "ποια πολιτεία έχει το μεγαλύτερο αστικό πληθυσμό",
            "fa": "کدام ایالت بیشترین جمعیت شهری را دارد ؟",
            "id": "apa negara bagian yang memiliki penduduk perkotaan terbesar ?",
            "sv": "vilken stat har den största stadsbefolkningen ?",
            "th": "รัฐ ใด มี ประชากร มาก ที่สุด",
            "zh": "哪个 州 拥有 最多 的 城镇 人口"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.STATE_NAME FROM STATE AS T1 LEFT OUTER JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.STATE_NAME GROUP BY T1.STATE_NAME HAVING COUNT( T2.BORDER ) = ( SELECT DERIVED_FIELDalias0 FROM ( SELECT COUNT( T2.BORDER ) AS DERIVED_FIELDalias0 , T1.STATE_NAME FROM STATE AS T1 LEFT OUTER JOIN BORDER_INFO AS T2 ON T1.STATE_NAME = T2.STATE_NAME GROUP BY T1.STATE_NAME ) ORDER BY DERIVED_FIELDalias0 LIMIT 1)",
            "prolog": "answer(A,fewest(A,B,(state(A),next_to(A,B),state(B))))",
            "lambda": "(argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (state:<s,t> $0)) (lambda $0:e (count:<<e,t>,i> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1))))))",
            "funql": "answer(fewest(state(next_to_2(state(all)))))"
        },
        "question": {
            "en": "what state borders the least states",
            "de": "welcher staat grenzt an die wenigsten staaten an",
            "el": "ποια πολιτεία συνορεύει με τις λιγότερες πολιτείες",
            "fa": "چه ایالتهایی با کمترین ایالت ها هم مرز هستند ؟",
            "id": "apa negara bagian yang berbatasan dengan paling sedikit negara bagian ?",
            "sv": "vilka stater gränsar till minst antal stater ?",
            "th": "รัฐ ใด อยู่ ติด กับ รัฐ อื่น น้อย ที่สุด",
            "zh": "哪个 州 与 其它 州 接壤 最少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT RIVER_NAME FROM RIVER WHERE LENGTH > 750",
            "prolog": "answer(A,(major(A),river(A),loc(A,B),const(B,countryid(usa))))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co)))",
            "funql": "answer(major(river(loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "what are the major rivers in the us",
            "de": "welches sind die haupt-fluesse in den usa",
            "el": "ποια είναι τα κύρια ποτάμια στις ηπα",
            "fa": "رودخانه های عمده ایالات متحده کدامند ؟",
            "id": "apa sungai-sungai besar di as ?",
            "sv": "vilka är de stora floderna i usa ?",
            "th": "แม่น้ำ สาย หลัก ของ อเมริกา มี อะไร บ้าง",
            "zh": "在 美国 有 哪些 主要 河流 呢"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( CITY_NAME ) FROM CITY WHERE CITY_NAME = \"austin\"",
            "prolog": "answer(A,count(B,(city(B),const(B,cityid(austin,_)),loc(B,C),const(C,countryid(usa))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (city:<c,t> $0) (named:<e,<n,t>> $0 austin:n) (loc:<lo,<lo,t>> $0 usa:co))))",
            "funql": "answer(count(intersection(city(cityid('austin', _)), loc_2(countryid('usa')))))"
        },
        "question": {
            "en": "how many cities named austin are there in the usa",
            "de": "wieviele staedte mit dem namen austin gibt es in den usa",
            "el": "πόσες πόλεις με το όνομα austin υπάρχουν στις ηπα",
            "fa": "چند شهر به نام آستین در ایالات متحده هست ؟",
            "id": "berapa banyak kota yang bernama austin yang ada di amerika serikat ?",
            "sv": "hur många städer som heter austin finns det i usa ?",
            "th": "ใน สหรัฐอเมริกา มี กี่ เมือง บ้าง ที่ ชื่อ ว่า ออสติน",
            "zh": "在 美国 有 多少 城市 以 奥斯汀 为名"
        }
    },
    {
        "mr": {
            "sql": "SELECT POPULATION FROM STATE WHERE POPULATION = ( SELECT POPULATION FROM STATE WHERE STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"wyoming\" ) ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"wyoming\" )",
            "prolog": "answer(A,(population(B,A),smallest(B,(state(B),next_to(B,C),const(C,stateid(wyoming))))))",
            "lambda": "(population:<lo,i> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 wyoming:s))) (lambda $0:e (size:<lo,i> $0))))",
            "funql": "answer(population_1(smallest(state(next_to_2(stateid('wyoming'))))))"
        },
        "question": {
            "en": "how many people live in the smallest state bordering wyoming",
            "de": "wie veile leute leben in dem kleinsten staat welcher an wyoming grenzt",
            "el": "πόσοι άνθρωποι ζουν στη μικρότερη πολιτεία που συνορεύει με το wyoming",
            "fa": "چند نفر در کوچکترین ایالت مجاور وایومینگ زندگی میکنند ؟",
            "id": "berapa banyak orang tinggal di negara bagian terkecil yang berbatasan dengan wyoming ?",
            "sv": "hur många människor bor i den minsta staten som gränsar till wyoming ?",
            "th": "รัฐ ที่ เล็ก ที่สุด ที่ อยู่ ติด กับ รัฐ ไวโอมิง มี ประชากร จำนวน เท่าไหร่",
            "zh": "有 多少 人 住 在 与 怀俄明 州 接壤 的 最小 的 州 里"
        }
    },
    {
        "mr": {
            "sql": "SELECT LENGTH FROM RIVER WHERE RIVER_NAME = \"colorado\" AND TRAVERSE = \"texas\"",
            "prolog": "answer(A,(len(B,A),const(B,riverid(colorado)),river(B),loc(B,C),const(C,stateid(texas))))",
            "lambda": "(len:<r,i> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (named:<e,<n,t>> $0 colorado_river:r) (loc:<lo,<lo,t>> $0 texas:s)))))",
            "funql": "answer(len(intersection(riverid('colorado'), river(loc_2(stateid('texas'))))))"
        },
        "question": {
            "en": "what is the length of the colorado river in texas",
            "de": "was ist die laenge des colorado flusses in texas",
            "el": "ποιο είναι το μήκος του ποταμού colorado στο texas",
            "fa": "طول رودخانه کلرادو در تگزاس چقدر است ؟",
            "id": "berapa panjang sungai colorado di texas ?",
            "sv": "vad är längden på coloradofloden i texas ?",
            "th": "แม่น้ำ โคโลราโด ใน เท็กซัส ยาว เท่าไหร่",
            "zh": "德克萨斯 州 的 科罗拉多 河 的 长度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DENSITY FROM STATE WHERE CAPITAL = \"austin\"",
            "prolog": "answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))",
            "lambda": "(density:<lo,i> (the:<<e,t>,e> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (capital2:<s,<c,t>> $0 austin_tx:c)))))",
            "funql": "answer(density_1(state(loc_1(capital(cityid('austin', _))))))"
        },
        "question": {
            "en": "what is the population density in the state with capital austin",
            "de": "was ist die bevoelkerungsdichte in dem staat mit hauptstadt austin",
            "el": "ποια είναι η πυκνότητα πληθυσμού στην πολιτεία με πρωτεύουσα το austin",
            "fa": "چگالی جمعیت در ایالت به مرکزیت آستین چقدر است ؟",
            "id": "berapa kepadatan penduduk di negara bagian dengan ibukota austin ?",
            "sv": "vad är befolkningstätheten i staten med huvudstaden austin ?",
            "th": "รัฐ ที่ มี เมืองหลวง ชื่อ ออสติน มี ความ หนาแน่น ของ ประชากร เท่าไหร่",
            "zh": "奥斯汀 首府 所在 州 的 人口 密度 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT DISTINCT LENGTH FROM RIVER WHERE LENGTH = ( SELECT LENGTH FROM RIVER ORDER BY LENGTH LIMIT 1)",
            "prolog": "answer(A,(len(B,A),shortest(B,(river(B),loc(B,C),const(C,countryid(usa))))))",
            "lambda": "(len:<r,i> (argmin:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 usa:co))) (lambda $0:e (len:<r,i> $0))))",
            "funql": "answer(len(shortest(river(loc_2(countryid('usa'))))))"
        },
        "question": {
            "en": "how long is the shortest river in the usa",
            "de": "wie lang ist der kuerzeste fluss in den usa",
            "el": "πόσο μακρύ είναι το μικρότερο ποτάμι στις ηπα",
            "fa": "کوتاه ترین رودخانه آمریکا چقدر طول دارد ؟",
            "id": "seberapa panjangkah sungai terpendek di usa ?",
            "sv": "hur lång är den kortaste floden i usa ?",
            "th": "แม่น้ำ สาย ที่ สั้น ที่สุด ใน อเมริกา มี ความ ยาว เท่าไหร่",
            "zh": "在 美国 最短 的 河流 有 多长"
        }
    },
    {
        "mr": {
            "sql": "SELECT LOWEST_ELEVATION FROM HIGHLOW WHERE LOWEST_POINT = \"death valley\"",
            "prolog": "answer(A,(elevation(B,A),const(B,placeid('death valley'))))",
            "lambda": "(elevation:<lo,i> death_valley:lo)",
            "funql": "answer(elevation_1(placeid('death valley')))"
        },
        "question": {
            "en": "what is the elevation of death valley",
            "de": "wie hoch liegt death valley",
            "el": "ποιο είναι το υψόμετρο της death valley",
            "fa": "ارتفاع دث ولی چقدر است ؟",
            "id": "berapa ketinggian death valley ?",
            "sv": "vad är höjden av death valley ?",
            "th": "เดธแวลีย์ มี ความ สูง เท่าไหร่",
            "zh": "死亡谷 海拔 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT AVG ( POPULATION ) FROM STATE",
            "prolog": "answer(A,(density(B,A),const(B,countryid(usa))))",
            "lambda": "(density:<lo,i> usa:co)",
            "funql": "answer(density_1(countryid('usa')))"
        },
        "question": {
            "en": "what is the average population of the us by state",
            "de": "was ist die durchschnittliche bevoelkerung fuer die usa pro staat",
            "el": "ποιος είναι ο μέσος πληθυσμό των us ανά πολιτεία",
            "fa": "چگالی جمعیت در ایالات متحده چقدر است ؟",
            "id": "berapa rata-rata penduduk as oleh negara bagian ?",
            "sv": "vad är den genomsnittliga folkmängden i staterna i usa ?",
            "th": "จำนวน ประชากร เฉลี่ย ต่อ รัฐ ของ สหรัฐ เป็น เท่าใด",
            "zh": "美国 各 州 的 平均 人口 是 多少"
        }
    },
    {
        "mr": {
            "sql": "SELECT RIVER_NAME FROM RIVER WHERE TRAVERSE IN ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,(river(A),traverse(A,B),largest(B,state(B))))",
            "lambda": "(lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (size:<lo,i> $1))))))",
            "funql": "answer(river(traverse_2(largest(state(all)))))"
        },
        "question": {
            "en": "what rivers flow through the largest state",
            "de": "welche fluesse verlauften durch den groessten staat",
            "el": "ποια ποτάμια διασχίζουν τη μεγαλύτερη πολιτεία",
            "fa": "کدام رودخانه ها از میان بزرگترین ایالت جریان دارند ؟",
            "id": "apa saja sungai-sungai yang mengalir melalui negara bagian terbesar ?",
            "sv": "vilka floder flyter genom den största staten ?",
            "th": "แม่น้ำ ใด บ้าง ไหล ผ่าน รัฐ ที่ ใหญ่ ที่สุด",
            "zh": "什么 河流 流经 最大 的 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT T2.BORDER FROM BORDER_INFO AS T1 JOIN BORDER_INFO AS T2 ON T1.BORDER = T2.STATE_NAME JOIN BORDER_INFO AS T3 ON T3.BORDER = T1.STATE_NAME JOIN BORDER_INFO AS T4 ON T4.BORDER = T3.STATE_NAME WHERE T4.STATE_NAME = \"texas\"",
            "prolog": "answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),const(E,stateid(texas))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (next_to:<lo,<lo,t>> $0 $1) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (state:<s,t> $2) (next_to:<lo,<lo,t>> $1 $2) (exists:<<e,t>,t> (lambda $3:e (and:<t*,t> (state:<s,t> $3) (next_to:<lo,<lo,t>> $3 texas:s) (next_to:<lo,<lo,t>> $2 $3))))))))))))",
            "funql": "answer(state(next_to_2(state(next_to_2(state(next_to_2(state(next_to_2(stateid('texas'))))))))))"
        },
        "question": {
            "en": "what states border states that border states that border states that border texas",
            "de": "welche staaten grenzen an staaten welche an staaten grenzen welche staaten grenzen die an texas grenzen",
            "el": "ποιες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με πολιτείες που συνορεύουν με πολιτείες που συνορεύουν με το texas",
            "fa": "کدام ایالت ها همسایه ایالت هایی هست که همر مرز ایالاتی هساند که همجوار ایالت هایی هستند که با تکزاس مرز مشترک دارند ؟",
            "id": "apa negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan negara-negara bagian yang berbatasan dengan texas ?",
            "sv": "vilka stater gränsar till staterna som gränsar till staterna som gränsar till staterna som gränsar till texas ?",
            "th": "รัฐ ใด บ้าง อยู่ ติด กับ รัฐ ที่ อยู่ ติด กับ รัฐ ที่ อยู่ ติด กับ รัฐ ที่ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "什么 州 和 与 得克萨斯 州 接壤 的 州 接壤 的 州 接壤 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE CAPITAL = \"boston\" )",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(boston,_))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (capital2:<s,<c,t>> $1 boston_ma:c))))))))",
            "funql": "answer(count(state(next_to_2(state(loc_1(capital(cityid('boston', _))))))))"
        },
        "question": {
            "en": "how many states border on the state whose capital is boston",
            "de": "wie viele staaten grenzen an den staat dessen hauptstadt boston ist",
            "el": "πόσες πολιτείες συνορεύουν με την πολιτεία της οποίας πρωτεύουσα είναι η boston",
            "fa": "چند ایالت همجاور ایالاتی هستند که مرکز آنها بوستون است ؟",
            "id": "berapa banyak negara bagian berbatasan dengan negara bagian yang ibukotanya boston ?",
            "sv": "hur många stater gränsar till den stat vars huvudstad är boston ?",
            "th": "รัฐ ที่ อยู่ ติด กับ รัฐ ที่ มี เมืองหลวง ชื่อ บอสตัน มี กี่ รัฐ",
            "zh": "有 多少 州 与 波士顿 首府 的 所在 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT CITY_NAME FROM CITY WHERE POPULATION > 150000 AND STATE_NAME IN ( SELECT TRAVERSE FROM RIVER WHERE RIVER_NAME IN ( SELECT RIVER_NAME FROM RIVER WHERE LENGTH > 750 AND TRAVERSE = \"virginia\" ) )",
            "prolog": "answer(A,(major(A),city(A),loc(A,B),state(B),major(C),river(C),loc(C,D),const(D,stateid(virginia)),traverse(C,B)))",
            "lambda": "(lambda $0:e (and:<t*,t> (major:<lo,t> $0) (city:<c,t> $0) (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> $0 $1) (loc:<lo,<lo,t>> (the:<<e,t>,e> (lambda $2:e (and:<t*,t> (river:<r,t> $2) (major:<lo,t> $2) (loc:<lo,<lo,t>> $2 virginia:s)))) $1))))))",
            "funql": "answer(major(city(loc_2(state(traverse_1(major(river(loc_2(stateid('virginia'))))))))))"
        },
        "question": {
            "en": "what are the major cities in the states through which the major river in virginia runs",
            "de": "wie lauten die wichtigsten staedte in den vereinigten staaten durch welche der wichtigste fluss in virginia verlaeuft",
            "el": "ποιες είναι οι κύριες πόλεις στις πολιτείες τις οποίες διασχίζει το μεγαλύτερο ποτάμι στη virginia",
            "fa": "شهرهای عمده ایالت هایی که رود عمده ای در ویرجینیا از آنها میگذرد کدامند ؟",
            "id": "apa kota-kota besar di negara-negara bagian yang dilalui sungai besar di virginia ?",
            "sv": "vilka är de stora städerna i de stater genom vilka den största floden i virginia löper ?",
            "th": "เมือง เอก ของ รัฐ ที่ แม่น้ำ สาย หลัก ใน รัฐ เวอร์จิเนีย ไหล ผ่าน มี อะไร บ้าง",
            "zh": "弗吉尼亚 州 的 主要 河流 贯穿 的 州 的 主要 城市 有 哪些"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM STATE WHERE STATE_NAME NOT IN ( SELECT BORDER FROM BORDER_INFO WHERE STATE_NAME = \"texas\" )",
            "prolog": "answer(A,(state(A),not((next_to(A,B),const(B,stateid(texas))))))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (not:<t,t> (next_to:<lo,<lo,t>> $0 texas:s))))",
            "funql": "answer(exclude(state(all), next_to_2(stateid('texas'))))"
        },
        "question": {
            "en": "which states does not border texas",
            "de": "welche staaten grenzen nicht an texas an",
            "el": "ποιες πολιτείες δεν συνορεύουν με το texas",
            "fa": "کدام ایالت ها هم مرز تگزاس نیستند ؟",
            "id": "apa negara-negara bagian yang tidak berbatasan dengan texas ?",
            "sv": "vilka stater gränsar inte texas ?",
            "th": "รัฐ ใด บ้าง ไม่ได้ อยู่ ติด กับ รัฐ เท็กซัส",
            "zh": "哪些 州 不 与 得克萨斯 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT COUNT( BORDER ) FROM BORDER_INFO WHERE STATE_NAME = ( SELECT STATE_NAME FROM STATE WHERE AREA = ( SELECT AREA FROM STATE ORDER BY AREA DESC LIMIT 1) )",
            "prolog": "answer(A,count(B,(state(B),next_to(B,C),largest(C,state(C))),A))",
            "lambda": "(count:<<e,t>,i> (lambda $0:e (and:<t*,t> (state:<s,t> $0) (next_to:<lo,<lo,t>> $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (state:<s,t> $1)) (lambda $1:e (size:<lo,i> $1)))))))",
            "funql": "answer(count(state(next_to_2(largest(state(all))))))"
        },
        "question": {
            "en": "how many states border the largest state",
            "de": "wieviele staaten grenzen an dem groessten staat",
            "el": "πόσες πολιτείες συνορεύουν με τη μεγαλύτερη πολιτεία",
            "fa": "چند ایالت همجوار بزگترین ایالت هستند ؟",
            "id": "berapa banyak negara bagian berbatasan dengan negara bagian terbesar ?",
            "sv": "hur många stater gränsar till den största staten ?",
            "th": "รัฐ ที่ ติด กับ รัฐ ที่ ใหญ่ ที่สุด มี กี่ รัฐ",
            "zh": "有 多少 州 与 最大 的 州 接壤"
        }
    },
    {
        "mr": {
            "sql": "SELECT STATE_NAME FROM CITY WHERE POPULATION = ( SELECT POPULATION FROM CITY WHERE STATE_NAME = \"montana\" ORDER BY POPULATION DESC LIMIT 1) AND STATE_NAME = \"montana\"",
            "prolog": "answer(A,(state(A),largest(B,(city(B),loc(B,C),const(C,stateid(montana)))),loc(B,A)))",
            "lambda": "(lambda $0:e (and:<t*,t> (state:<s,t> $0) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $1:e (and:<t*,t> (city:<c,t> $1) (loc:<lo,<lo,t>> $1 montana:s))) (lambda $1:e (size:<lo,i> $1))) $0)))",
            "funql": "answer(state(loc_1(largest(city(loc_2(stateid('montana')))))))"
        },
        "question": {
            "en": "which state is the largest city in montana in",
            "de": "in welchem staat liegt die groesste stadt in montana",
            "el": "σε ποια πολιτεία είναι η μεγαλύτερη πόλη στη montana",
            "fa": "بزرگترین شهر مونتانا در کدام ایالت واقع شده است ؟",
            "id": "di negara bagian apakah kota terbesar di montana berada ?",
            "sv": "vilken stat ligger den största staden i montana i ?",
            "th": "มี รัฐ ใด อีกบ้าง ที่ มี ชื่อ ซ้ำ กับ เมือง ใหญ่ ที่สุด ของ รัฐ มอนตาน่า",
            "zh": "蒙大拿 州 最大 的 城市 在 哪个 州"
        }
    },
    {
        "mr": {
            "sql": "SELECT T1.RIVER_NAME FROM RIVER AS T1 JOIN HIGHLOW AS T2 ON T1.TRAVERSE = T2.STATE_NAME WHERE T2.HIGHEST_ELEVATION = ( SELECT HIGHEST_ELEVATION FROM HIGHLOW ORDER BY HIGHEST_ELEVATION DESC LIMIT 1) ORDER BY T1.LENGTH DESC LIMIT 1",
            "prolog": "answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))",
            "lambda": "(argmax:<<e,t>,<<e,i>,e>> (lambda $0:e (and:<t*,t> (river:<r,t> $0) (loc:<lo,<lo,t>> $0 (the:<<e,t>,e> (lambda $1:e (and:<t*,t> (state:<s,t> $1) (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $2:e (place:<p,t> $2)) (lambda $2:e (elevation:<lo,i> $2))) $1))))))) (lambda $0:e (len:<r,i> $0)))",
            "funql": "answer(longest(river(loc_2(state(loc_1(highest(place(all))))))))"
        },
        "question": {
            "en": "what is the longest river in the state with the highest point",
            "de": "welches ist der laenste fluss im staate mit dem hoechstgelegenen punkt",
            "el": "ποιο είναι το μακρύτερο ποτάμι στη πολιτεία με το ψηλότερο σημείο",
            "fa": "بزگترین رودخانه در ایالتی که بلندترین نقطه در آن واقع شده است ؟",
            "id": "apa sungai terpanjang di negara bagian dengan titik tertinggi ?",
            "sv": "vad är den längsta floden i staten med den högsta punkten ?",
            "th": "แม่น้ำ สาย ใด เป็น แม่น้ำ สาย ที่ ยาว ที่สุด ที่ อยู่ ใน รัฐ ที่ มี จุด สูง สุด",
            "zh": "最高 点 所在 州 的 的 最长 的 河流 是 哪条"
        }
    }
]